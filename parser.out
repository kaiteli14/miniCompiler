Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> block_statement
Rule 2     semicolon_opt -> epsilon
Rule 3     semicolon_opt -> SEMICOLON
Rule 4     block_statement -> LBRACE statement_decl_list semicolon_opt RBRACE
Rule 5     statement -> expression
Rule 6     statement -> block_statement
Rule 7     statement_decl_list -> statement_decl_list SEMICOLON statement_decl
Rule 8     statement_decl_list -> statement_decl
Rule 9     statement_decl_list -> epsilon
Rule 10    statement_decl -> statement
Rule 11    statement_decl -> decl
Rule 12    decl -> ID COLON type Initiation
Rule 13    Initiation -> EQUALS expression
Rule 14    Initiation -> epsilon
Rule 15    identifier -> ID
Rule 16    type -> INT
Rule 17    expression -> PLUS expression
Rule 18    expression -> MINUS expression
Rule 19    expression -> NOT expression
Rule 20    expression -> expression PLUS expression
Rule 21    expression -> expression MINUS expression
Rule 22    expression -> expression EXPONENT expression
Rule 23    expression -> expression TIMES expression
Rule 24    expression -> expression DIVIDE expression
Rule 25    expression -> expression MODULUS expression
Rule 26    expression -> expression LESS expression
Rule 27    expression -> expression LESS_EQ expression
Rule 28    expression -> expression GREATER expression
Rule 29    expression -> expression GREATER_EQ expression
Rule 30    expression -> expression IS_EQ expression
Rule 31    expression -> expression NOT_EQ expression
Rule 32    expression -> expression AND expression
Rule 33    expression -> expression OR expression
Rule 34    expression -> identifier EQUALS expression
Rule 35    expression -> LPAREN expression RPAREN
Rule 36    expression -> INT_LITERAL
Rule 37    expression -> identifier
Rule 38    epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 32
COLON                : 12
DIVIDE               : 24
EQUALS               : 13 34
EXPONENT             : 22
GREATER              : 28
GREATER_EQ           : 29
ID                   : 12 15
INT                  : 16
INT_LITERAL          : 36
IS_EQ                : 30
LBRACE               : 4
LESS                 : 26
LESS_EQ              : 27
LPAREN               : 35
MINUS                : 18 21
MODULUS              : 25
NOT                  : 19
NOT_EQ               : 31
OR                   : 33
PLUS                 : 17 20
RBRACE               : 4
RPAREN               : 35
SEMICOLON            : 3 7
TIMES                : 23
error                : 

Nonterminals, with rules where they appear

Initiation           : 12
block_statement      : 1 6
decl                 : 11
epsilon              : 2 9 14
expression           : 5 13 17 18 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 35
identifier           : 34 37
program              : 0
semicolon_opt        : 4
statement            : 10
statement_decl       : 7 8
statement_decl_list  : 4 7
type                 : 12

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . block_statement
    (4) block_statement -> . LBRACE statement_decl_list semicolon_opt RBRACE

    LBRACE          shift and go to state 3

    program                        shift and go to state 1
    block_statement                shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> block_statement .

    $end            reduce using rule 1 (program -> block_statement .)


state 3

    (4) block_statement -> LBRACE . statement_decl_list semicolon_opt RBRACE
    (7) statement_decl_list -> . statement_decl_list SEMICOLON statement_decl
    (8) statement_decl_list -> . statement_decl
    (9) statement_decl_list -> . epsilon
    (10) statement_decl -> . statement
    (11) statement_decl -> . decl
    (38) epsilon -> .
    (5) statement -> . expression
    (6) statement -> . block_statement
    (12) decl -> . ID COLON type Initiation
    (17) expression -> . PLUS expression
    (18) expression -> . MINUS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression EXPONENT expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MODULUS expression
    (26) expression -> . expression LESS expression
    (27) expression -> . expression LESS_EQ expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression IS_EQ expression
    (31) expression -> . expression NOT_EQ expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . identifier EQUALS expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . INT_LITERAL
    (37) expression -> . identifier
    (4) block_statement -> . LBRACE statement_decl_list semicolon_opt RBRACE
    (15) identifier -> . ID

    SEMICOLON       reduce using rule 38 (epsilon -> .)
    RBRACE          reduce using rule 38 (epsilon -> .)
    ID              shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    LPAREN          shift and go to state 16
    INT_LITERAL     shift and go to state 17
    LBRACE          shift and go to state 3

    statement_decl_list            shift and go to state 4
    statement_decl                 shift and go to state 5
    epsilon                        shift and go to state 6
    statement                      shift and go to state 7
    decl                           shift and go to state 8
    expression                     shift and go to state 9
    block_statement                shift and go to state 10
    identifier                     shift and go to state 15

state 4

    (4) block_statement -> LBRACE statement_decl_list . semicolon_opt RBRACE
    (7) statement_decl_list -> statement_decl_list . SEMICOLON statement_decl
    (2) semicolon_opt -> . epsilon
    (3) semicolon_opt -> . SEMICOLON
    (38) epsilon -> .

    SEMICOLON       shift and go to state 19
    RBRACE          reduce using rule 38 (epsilon -> .)

    semicolon_opt                  shift and go to state 18
    epsilon                        shift and go to state 20

state 5

    (8) statement_decl_list -> statement_decl .

    SEMICOLON       reduce using rule 8 (statement_decl_list -> statement_decl .)
    RBRACE          reduce using rule 8 (statement_decl_list -> statement_decl .)


state 6

    (9) statement_decl_list -> epsilon .

    SEMICOLON       reduce using rule 9 (statement_decl_list -> epsilon .)
    RBRACE          reduce using rule 9 (statement_decl_list -> epsilon .)


state 7

    (10) statement_decl -> statement .

    SEMICOLON       reduce using rule 10 (statement_decl -> statement .)
    RBRACE          reduce using rule 10 (statement_decl -> statement .)


state 8

    (11) statement_decl -> decl .

    SEMICOLON       reduce using rule 11 (statement_decl -> decl .)
    RBRACE          reduce using rule 11 (statement_decl -> decl .)


state 9

    (5) statement -> expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . EXPONENT expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MODULUS expression
    (26) expression -> expression . LESS expression
    (27) expression -> expression . LESS_EQ expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . IS_EQ expression
    (31) expression -> expression . NOT_EQ expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

    SEMICOLON       reduce using rule 5 (statement -> expression .)
    RBRACE          reduce using rule 5 (statement -> expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    EXPONENT        shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    MODULUS         shift and go to state 26
    LESS            shift and go to state 27
    LESS_EQ         shift and go to state 28
    GREATER         shift and go to state 29
    GREATER_EQ      shift and go to state 30
    IS_EQ           shift and go to state 31
    NOT_EQ          shift and go to state 32
    AND             shift and go to state 33
    OR              shift and go to state 34


state 10

    (6) statement -> block_statement .

    SEMICOLON       reduce using rule 6 (statement -> block_statement .)
    RBRACE          reduce using rule 6 (statement -> block_statement .)


state 11

    (12) decl -> ID . COLON type Initiation
    (15) identifier -> ID .

    COLON           shift and go to state 35
    EQUALS          reduce using rule 15 (identifier -> ID .)
    PLUS            reduce using rule 15 (identifier -> ID .)
    MINUS           reduce using rule 15 (identifier -> ID .)
    EXPONENT        reduce using rule 15 (identifier -> ID .)
    TIMES           reduce using rule 15 (identifier -> ID .)
    DIVIDE          reduce using rule 15 (identifier -> ID .)
    MODULUS         reduce using rule 15 (identifier -> ID .)
    LESS            reduce using rule 15 (identifier -> ID .)
    LESS_EQ         reduce using rule 15 (identifier -> ID .)
    GREATER         reduce using rule 15 (identifier -> ID .)
    GREATER_EQ      reduce using rule 15 (identifier -> ID .)
    IS_EQ           reduce using rule 15 (identifier -> ID .)
    NOT_EQ          reduce using rule 15 (identifier -> ID .)
    AND             reduce using rule 15 (identifier -> ID .)
    OR              reduce using rule 15 (identifier -> ID .)
    SEMICOLON       reduce using rule 15 (identifier -> ID .)
    RBRACE          reduce using rule 15 (identifier -> ID .)


state 12

    (17) expression -> PLUS . expression
    (17) expression -> . PLUS expression
    (18) expression -> . MINUS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression EXPONENT expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MODULUS expression
    (26) expression -> . expression LESS expression
    (27) expression -> . expression LESS_EQ expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression IS_EQ expression
    (31) expression -> . expression NOT_EQ expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . identifier EQUALS expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . INT_LITERAL
    (37) expression -> . identifier
    (15) identifier -> . ID

    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    LPAREN          shift and go to state 16
    INT_LITERAL     shift and go to state 17
    ID              shift and go to state 37

    expression                     shift and go to state 36
    identifier                     shift and go to state 15

state 13

    (18) expression -> MINUS . expression
    (17) expression -> . PLUS expression
    (18) expression -> . MINUS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression EXPONENT expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MODULUS expression
    (26) expression -> . expression LESS expression
    (27) expression -> . expression LESS_EQ expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression IS_EQ expression
    (31) expression -> . expression NOT_EQ expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . identifier EQUALS expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . INT_LITERAL
    (37) expression -> . identifier
    (15) identifier -> . ID

    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    LPAREN          shift and go to state 16
    INT_LITERAL     shift and go to state 17
    ID              shift and go to state 37

    expression                     shift and go to state 38
    identifier                     shift and go to state 15

state 14

    (19) expression -> NOT . expression
    (17) expression -> . PLUS expression
    (18) expression -> . MINUS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression EXPONENT expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MODULUS expression
    (26) expression -> . expression LESS expression
    (27) expression -> . expression LESS_EQ expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression IS_EQ expression
    (31) expression -> . expression NOT_EQ expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . identifier EQUALS expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . INT_LITERAL
    (37) expression -> . identifier
    (15) identifier -> . ID

    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    LPAREN          shift and go to state 16
    INT_LITERAL     shift and go to state 17
    ID              shift and go to state 37

    expression                     shift and go to state 39
    identifier                     shift and go to state 15

state 15

    (34) expression -> identifier . EQUALS expression
    (37) expression -> identifier .

    EQUALS          shift and go to state 40
    PLUS            reduce using rule 37 (expression -> identifier .)
    MINUS           reduce using rule 37 (expression -> identifier .)
    EXPONENT        reduce using rule 37 (expression -> identifier .)
    TIMES           reduce using rule 37 (expression -> identifier .)
    DIVIDE          reduce using rule 37 (expression -> identifier .)
    MODULUS         reduce using rule 37 (expression -> identifier .)
    LESS            reduce using rule 37 (expression -> identifier .)
    LESS_EQ         reduce using rule 37 (expression -> identifier .)
    GREATER         reduce using rule 37 (expression -> identifier .)
    GREATER_EQ      reduce using rule 37 (expression -> identifier .)
    IS_EQ           reduce using rule 37 (expression -> identifier .)
    NOT_EQ          reduce using rule 37 (expression -> identifier .)
    AND             reduce using rule 37 (expression -> identifier .)
    OR              reduce using rule 37 (expression -> identifier .)
    SEMICOLON       reduce using rule 37 (expression -> identifier .)
    RBRACE          reduce using rule 37 (expression -> identifier .)
    RPAREN          reduce using rule 37 (expression -> identifier .)


state 16

    (35) expression -> LPAREN . expression RPAREN
    (17) expression -> . PLUS expression
    (18) expression -> . MINUS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression EXPONENT expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MODULUS expression
    (26) expression -> . expression LESS expression
    (27) expression -> . expression LESS_EQ expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression IS_EQ expression
    (31) expression -> . expression NOT_EQ expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . identifier EQUALS expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . INT_LITERAL
    (37) expression -> . identifier
    (15) identifier -> . ID

    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    LPAREN          shift and go to state 16
    INT_LITERAL     shift and go to state 17
    ID              shift and go to state 37

    expression                     shift and go to state 41
    identifier                     shift and go to state 15

state 17

    (36) expression -> INT_LITERAL .

    PLUS            reduce using rule 36 (expression -> INT_LITERAL .)
    MINUS           reduce using rule 36 (expression -> INT_LITERAL .)
    EXPONENT        reduce using rule 36 (expression -> INT_LITERAL .)
    TIMES           reduce using rule 36 (expression -> INT_LITERAL .)
    DIVIDE          reduce using rule 36 (expression -> INT_LITERAL .)
    MODULUS         reduce using rule 36 (expression -> INT_LITERAL .)
    LESS            reduce using rule 36 (expression -> INT_LITERAL .)
    LESS_EQ         reduce using rule 36 (expression -> INT_LITERAL .)
    GREATER         reduce using rule 36 (expression -> INT_LITERAL .)
    GREATER_EQ      reduce using rule 36 (expression -> INT_LITERAL .)
    IS_EQ           reduce using rule 36 (expression -> INT_LITERAL .)
    NOT_EQ          reduce using rule 36 (expression -> INT_LITERAL .)
    AND             reduce using rule 36 (expression -> INT_LITERAL .)
    OR              reduce using rule 36 (expression -> INT_LITERAL .)
    SEMICOLON       reduce using rule 36 (expression -> INT_LITERAL .)
    RBRACE          reduce using rule 36 (expression -> INT_LITERAL .)
    RPAREN          reduce using rule 36 (expression -> INT_LITERAL .)


state 18

    (4) block_statement -> LBRACE statement_decl_list semicolon_opt . RBRACE

    RBRACE          shift and go to state 42


state 19

    (7) statement_decl_list -> statement_decl_list SEMICOLON . statement_decl
    (3) semicolon_opt -> SEMICOLON .
    (10) statement_decl -> . statement
    (11) statement_decl -> . decl
    (5) statement -> . expression
    (6) statement -> . block_statement
    (12) decl -> . ID COLON type Initiation
    (17) expression -> . PLUS expression
    (18) expression -> . MINUS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression EXPONENT expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MODULUS expression
    (26) expression -> . expression LESS expression
    (27) expression -> . expression LESS_EQ expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression IS_EQ expression
    (31) expression -> . expression NOT_EQ expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . identifier EQUALS expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . INT_LITERAL
    (37) expression -> . identifier
    (4) block_statement -> . LBRACE statement_decl_list semicolon_opt RBRACE
    (15) identifier -> . ID

    RBRACE          reduce using rule 3 (semicolon_opt -> SEMICOLON .)
    ID              shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    LPAREN          shift and go to state 16
    INT_LITERAL     shift and go to state 17
    LBRACE          shift and go to state 3

    statement_decl                 shift and go to state 43
    statement                      shift and go to state 7
    decl                           shift and go to state 8
    expression                     shift and go to state 9
    block_statement                shift and go to state 10
    identifier                     shift and go to state 15

state 20

    (2) semicolon_opt -> epsilon .

    RBRACE          reduce using rule 2 (semicolon_opt -> epsilon .)


state 21

    (20) expression -> expression PLUS . expression
    (17) expression -> . PLUS expression
    (18) expression -> . MINUS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression EXPONENT expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MODULUS expression
    (26) expression -> . expression LESS expression
    (27) expression -> . expression LESS_EQ expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression IS_EQ expression
    (31) expression -> . expression NOT_EQ expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . identifier EQUALS expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . INT_LITERAL
    (37) expression -> . identifier
    (15) identifier -> . ID

    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    LPAREN          shift and go to state 16
    INT_LITERAL     shift and go to state 17
    ID              shift and go to state 37

    expression                     shift and go to state 44
    identifier                     shift and go to state 15

state 22

    (21) expression -> expression MINUS . expression
    (17) expression -> . PLUS expression
    (18) expression -> . MINUS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression EXPONENT expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MODULUS expression
    (26) expression -> . expression LESS expression
    (27) expression -> . expression LESS_EQ expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression IS_EQ expression
    (31) expression -> . expression NOT_EQ expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . identifier EQUALS expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . INT_LITERAL
    (37) expression -> . identifier
    (15) identifier -> . ID

    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    LPAREN          shift and go to state 16
    INT_LITERAL     shift and go to state 17
    ID              shift and go to state 37

    expression                     shift and go to state 45
    identifier                     shift and go to state 15

state 23

    (22) expression -> expression EXPONENT . expression
    (17) expression -> . PLUS expression
    (18) expression -> . MINUS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression EXPONENT expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MODULUS expression
    (26) expression -> . expression LESS expression
    (27) expression -> . expression LESS_EQ expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression IS_EQ expression
    (31) expression -> . expression NOT_EQ expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . identifier EQUALS expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . INT_LITERAL
    (37) expression -> . identifier
    (15) identifier -> . ID

    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    LPAREN          shift and go to state 16
    INT_LITERAL     shift and go to state 17
    ID              shift and go to state 37

    expression                     shift and go to state 46
    identifier                     shift and go to state 15

state 24

    (23) expression -> expression TIMES . expression
    (17) expression -> . PLUS expression
    (18) expression -> . MINUS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression EXPONENT expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MODULUS expression
    (26) expression -> . expression LESS expression
    (27) expression -> . expression LESS_EQ expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression IS_EQ expression
    (31) expression -> . expression NOT_EQ expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . identifier EQUALS expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . INT_LITERAL
    (37) expression -> . identifier
    (15) identifier -> . ID

    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    LPAREN          shift and go to state 16
    INT_LITERAL     shift and go to state 17
    ID              shift and go to state 37

    expression                     shift and go to state 47
    identifier                     shift and go to state 15

state 25

    (24) expression -> expression DIVIDE . expression
    (17) expression -> . PLUS expression
    (18) expression -> . MINUS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression EXPONENT expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MODULUS expression
    (26) expression -> . expression LESS expression
    (27) expression -> . expression LESS_EQ expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression IS_EQ expression
    (31) expression -> . expression NOT_EQ expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . identifier EQUALS expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . INT_LITERAL
    (37) expression -> . identifier
    (15) identifier -> . ID

    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    LPAREN          shift and go to state 16
    INT_LITERAL     shift and go to state 17
    ID              shift and go to state 37

    expression                     shift and go to state 48
    identifier                     shift and go to state 15

state 26

    (25) expression -> expression MODULUS . expression
    (17) expression -> . PLUS expression
    (18) expression -> . MINUS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression EXPONENT expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MODULUS expression
    (26) expression -> . expression LESS expression
    (27) expression -> . expression LESS_EQ expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression IS_EQ expression
    (31) expression -> . expression NOT_EQ expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . identifier EQUALS expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . INT_LITERAL
    (37) expression -> . identifier
    (15) identifier -> . ID

    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    LPAREN          shift and go to state 16
    INT_LITERAL     shift and go to state 17
    ID              shift and go to state 37

    expression                     shift and go to state 49
    identifier                     shift and go to state 15

state 27

    (26) expression -> expression LESS . expression
    (17) expression -> . PLUS expression
    (18) expression -> . MINUS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression EXPONENT expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MODULUS expression
    (26) expression -> . expression LESS expression
    (27) expression -> . expression LESS_EQ expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression IS_EQ expression
    (31) expression -> . expression NOT_EQ expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . identifier EQUALS expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . INT_LITERAL
    (37) expression -> . identifier
    (15) identifier -> . ID

    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    LPAREN          shift and go to state 16
    INT_LITERAL     shift and go to state 17
    ID              shift and go to state 37

    expression                     shift and go to state 50
    identifier                     shift and go to state 15

state 28

    (27) expression -> expression LESS_EQ . expression
    (17) expression -> . PLUS expression
    (18) expression -> . MINUS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression EXPONENT expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MODULUS expression
    (26) expression -> . expression LESS expression
    (27) expression -> . expression LESS_EQ expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression IS_EQ expression
    (31) expression -> . expression NOT_EQ expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . identifier EQUALS expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . INT_LITERAL
    (37) expression -> . identifier
    (15) identifier -> . ID

    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    LPAREN          shift and go to state 16
    INT_LITERAL     shift and go to state 17
    ID              shift and go to state 37

    expression                     shift and go to state 51
    identifier                     shift and go to state 15

state 29

    (28) expression -> expression GREATER . expression
    (17) expression -> . PLUS expression
    (18) expression -> . MINUS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression EXPONENT expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MODULUS expression
    (26) expression -> . expression LESS expression
    (27) expression -> . expression LESS_EQ expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression IS_EQ expression
    (31) expression -> . expression NOT_EQ expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . identifier EQUALS expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . INT_LITERAL
    (37) expression -> . identifier
    (15) identifier -> . ID

    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    LPAREN          shift and go to state 16
    INT_LITERAL     shift and go to state 17
    ID              shift and go to state 37

    expression                     shift and go to state 52
    identifier                     shift and go to state 15

state 30

    (29) expression -> expression GREATER_EQ . expression
    (17) expression -> . PLUS expression
    (18) expression -> . MINUS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression EXPONENT expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MODULUS expression
    (26) expression -> . expression LESS expression
    (27) expression -> . expression LESS_EQ expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression IS_EQ expression
    (31) expression -> . expression NOT_EQ expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . identifier EQUALS expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . INT_LITERAL
    (37) expression -> . identifier
    (15) identifier -> . ID

    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    LPAREN          shift and go to state 16
    INT_LITERAL     shift and go to state 17
    ID              shift and go to state 37

    expression                     shift and go to state 53
    identifier                     shift and go to state 15

state 31

    (30) expression -> expression IS_EQ . expression
    (17) expression -> . PLUS expression
    (18) expression -> . MINUS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression EXPONENT expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MODULUS expression
    (26) expression -> . expression LESS expression
    (27) expression -> . expression LESS_EQ expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression IS_EQ expression
    (31) expression -> . expression NOT_EQ expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . identifier EQUALS expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . INT_LITERAL
    (37) expression -> . identifier
    (15) identifier -> . ID

    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    LPAREN          shift and go to state 16
    INT_LITERAL     shift and go to state 17
    ID              shift and go to state 37

    expression                     shift and go to state 54
    identifier                     shift and go to state 15

state 32

    (31) expression -> expression NOT_EQ . expression
    (17) expression -> . PLUS expression
    (18) expression -> . MINUS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression EXPONENT expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MODULUS expression
    (26) expression -> . expression LESS expression
    (27) expression -> . expression LESS_EQ expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression IS_EQ expression
    (31) expression -> . expression NOT_EQ expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . identifier EQUALS expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . INT_LITERAL
    (37) expression -> . identifier
    (15) identifier -> . ID

    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    LPAREN          shift and go to state 16
    INT_LITERAL     shift and go to state 17
    ID              shift and go to state 37

    expression                     shift and go to state 55
    identifier                     shift and go to state 15

state 33

    (32) expression -> expression AND . expression
    (17) expression -> . PLUS expression
    (18) expression -> . MINUS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression EXPONENT expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MODULUS expression
    (26) expression -> . expression LESS expression
    (27) expression -> . expression LESS_EQ expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression IS_EQ expression
    (31) expression -> . expression NOT_EQ expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . identifier EQUALS expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . INT_LITERAL
    (37) expression -> . identifier
    (15) identifier -> . ID

    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    LPAREN          shift and go to state 16
    INT_LITERAL     shift and go to state 17
    ID              shift and go to state 37

    expression                     shift and go to state 56
    identifier                     shift and go to state 15

state 34

    (33) expression -> expression OR . expression
    (17) expression -> . PLUS expression
    (18) expression -> . MINUS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression EXPONENT expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MODULUS expression
    (26) expression -> . expression LESS expression
    (27) expression -> . expression LESS_EQ expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression IS_EQ expression
    (31) expression -> . expression NOT_EQ expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . identifier EQUALS expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . INT_LITERAL
    (37) expression -> . identifier
    (15) identifier -> . ID

    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    LPAREN          shift and go to state 16
    INT_LITERAL     shift and go to state 17
    ID              shift and go to state 37

    expression                     shift and go to state 57
    identifier                     shift and go to state 15

state 35

    (12) decl -> ID COLON . type Initiation
    (16) type -> . INT

    INT             shift and go to state 59

    type                           shift and go to state 58

state 36

    (17) expression -> PLUS expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . EXPONENT expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MODULUS expression
    (26) expression -> expression . LESS expression
    (27) expression -> expression . LESS_EQ expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . IS_EQ expression
    (31) expression -> expression . NOT_EQ expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

    PLUS            reduce using rule 17 (expression -> PLUS expression .)
    MINUS           reduce using rule 17 (expression -> PLUS expression .)
    EXPONENT        reduce using rule 17 (expression -> PLUS expression .)
    TIMES           reduce using rule 17 (expression -> PLUS expression .)
    DIVIDE          reduce using rule 17 (expression -> PLUS expression .)
    MODULUS         reduce using rule 17 (expression -> PLUS expression .)
    LESS            reduce using rule 17 (expression -> PLUS expression .)
    LESS_EQ         reduce using rule 17 (expression -> PLUS expression .)
    GREATER         reduce using rule 17 (expression -> PLUS expression .)
    GREATER_EQ      reduce using rule 17 (expression -> PLUS expression .)
    IS_EQ           reduce using rule 17 (expression -> PLUS expression .)
    NOT_EQ          reduce using rule 17 (expression -> PLUS expression .)
    AND             reduce using rule 17 (expression -> PLUS expression .)
    OR              reduce using rule 17 (expression -> PLUS expression .)
    SEMICOLON       reduce using rule 17 (expression -> PLUS expression .)
    RBRACE          reduce using rule 17 (expression -> PLUS expression .)
    RPAREN          reduce using rule 17 (expression -> PLUS expression .)

  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 22 ]
  ! EXPONENT        [ shift and go to state 23 ]
  ! TIMES           [ shift and go to state 24 ]
  ! DIVIDE          [ shift and go to state 25 ]
  ! MODULUS         [ shift and go to state 26 ]
  ! LESS            [ shift and go to state 27 ]
  ! LESS_EQ         [ shift and go to state 28 ]
  ! GREATER         [ shift and go to state 29 ]
  ! GREATER_EQ      [ shift and go to state 30 ]
  ! IS_EQ           [ shift and go to state 31 ]
  ! NOT_EQ          [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 37

    (15) identifier -> ID .

    EQUALS          reduce using rule 15 (identifier -> ID .)
    PLUS            reduce using rule 15 (identifier -> ID .)
    MINUS           reduce using rule 15 (identifier -> ID .)
    EXPONENT        reduce using rule 15 (identifier -> ID .)
    TIMES           reduce using rule 15 (identifier -> ID .)
    DIVIDE          reduce using rule 15 (identifier -> ID .)
    MODULUS         reduce using rule 15 (identifier -> ID .)
    LESS            reduce using rule 15 (identifier -> ID .)
    LESS_EQ         reduce using rule 15 (identifier -> ID .)
    GREATER         reduce using rule 15 (identifier -> ID .)
    GREATER_EQ      reduce using rule 15 (identifier -> ID .)
    IS_EQ           reduce using rule 15 (identifier -> ID .)
    NOT_EQ          reduce using rule 15 (identifier -> ID .)
    AND             reduce using rule 15 (identifier -> ID .)
    OR              reduce using rule 15 (identifier -> ID .)
    SEMICOLON       reduce using rule 15 (identifier -> ID .)
    RBRACE          reduce using rule 15 (identifier -> ID .)
    RPAREN          reduce using rule 15 (identifier -> ID .)


state 38

    (18) expression -> MINUS expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . EXPONENT expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MODULUS expression
    (26) expression -> expression . LESS expression
    (27) expression -> expression . LESS_EQ expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . IS_EQ expression
    (31) expression -> expression . NOT_EQ expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

    PLUS            reduce using rule 18 (expression -> MINUS expression .)
    MINUS           reduce using rule 18 (expression -> MINUS expression .)
    EXPONENT        reduce using rule 18 (expression -> MINUS expression .)
    TIMES           reduce using rule 18 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 18 (expression -> MINUS expression .)
    MODULUS         reduce using rule 18 (expression -> MINUS expression .)
    LESS            reduce using rule 18 (expression -> MINUS expression .)
    LESS_EQ         reduce using rule 18 (expression -> MINUS expression .)
    GREATER         reduce using rule 18 (expression -> MINUS expression .)
    GREATER_EQ      reduce using rule 18 (expression -> MINUS expression .)
    IS_EQ           reduce using rule 18 (expression -> MINUS expression .)
    NOT_EQ          reduce using rule 18 (expression -> MINUS expression .)
    AND             reduce using rule 18 (expression -> MINUS expression .)
    OR              reduce using rule 18 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 18 (expression -> MINUS expression .)
    RBRACE          reduce using rule 18 (expression -> MINUS expression .)
    RPAREN          reduce using rule 18 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 22 ]
  ! EXPONENT        [ shift and go to state 23 ]
  ! TIMES           [ shift and go to state 24 ]
  ! DIVIDE          [ shift and go to state 25 ]
  ! MODULUS         [ shift and go to state 26 ]
  ! LESS            [ shift and go to state 27 ]
  ! LESS_EQ         [ shift and go to state 28 ]
  ! GREATER         [ shift and go to state 29 ]
  ! GREATER_EQ      [ shift and go to state 30 ]
  ! IS_EQ           [ shift and go to state 31 ]
  ! NOT_EQ          [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 39

    (19) expression -> NOT expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . EXPONENT expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MODULUS expression
    (26) expression -> expression . LESS expression
    (27) expression -> expression . LESS_EQ expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . IS_EQ expression
    (31) expression -> expression . NOT_EQ expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

    PLUS            reduce using rule 19 (expression -> NOT expression .)
    MINUS           reduce using rule 19 (expression -> NOT expression .)
    EXPONENT        reduce using rule 19 (expression -> NOT expression .)
    TIMES           reduce using rule 19 (expression -> NOT expression .)
    DIVIDE          reduce using rule 19 (expression -> NOT expression .)
    MODULUS         reduce using rule 19 (expression -> NOT expression .)
    LESS            reduce using rule 19 (expression -> NOT expression .)
    LESS_EQ         reduce using rule 19 (expression -> NOT expression .)
    GREATER         reduce using rule 19 (expression -> NOT expression .)
    GREATER_EQ      reduce using rule 19 (expression -> NOT expression .)
    IS_EQ           reduce using rule 19 (expression -> NOT expression .)
    NOT_EQ          reduce using rule 19 (expression -> NOT expression .)
    AND             reduce using rule 19 (expression -> NOT expression .)
    OR              reduce using rule 19 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 19 (expression -> NOT expression .)
    RBRACE          reduce using rule 19 (expression -> NOT expression .)
    RPAREN          reduce using rule 19 (expression -> NOT expression .)

  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 22 ]
  ! EXPONENT        [ shift and go to state 23 ]
  ! TIMES           [ shift and go to state 24 ]
  ! DIVIDE          [ shift and go to state 25 ]
  ! MODULUS         [ shift and go to state 26 ]
  ! LESS            [ shift and go to state 27 ]
  ! LESS_EQ         [ shift and go to state 28 ]
  ! GREATER         [ shift and go to state 29 ]
  ! GREATER_EQ      [ shift and go to state 30 ]
  ! IS_EQ           [ shift and go to state 31 ]
  ! NOT_EQ          [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 40

    (34) expression -> identifier EQUALS . expression
    (17) expression -> . PLUS expression
    (18) expression -> . MINUS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression EXPONENT expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MODULUS expression
    (26) expression -> . expression LESS expression
    (27) expression -> . expression LESS_EQ expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression IS_EQ expression
    (31) expression -> . expression NOT_EQ expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . identifier EQUALS expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . INT_LITERAL
    (37) expression -> . identifier
    (15) identifier -> . ID

    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    LPAREN          shift and go to state 16
    INT_LITERAL     shift and go to state 17
    ID              shift and go to state 37

    identifier                     shift and go to state 15
    expression                     shift and go to state 60

state 41

    (35) expression -> LPAREN expression . RPAREN
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . EXPONENT expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MODULUS expression
    (26) expression -> expression . LESS expression
    (27) expression -> expression . LESS_EQ expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . IS_EQ expression
    (31) expression -> expression . NOT_EQ expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

    RPAREN          shift and go to state 61
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    EXPONENT        shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    MODULUS         shift and go to state 26
    LESS            shift and go to state 27
    LESS_EQ         shift and go to state 28
    GREATER         shift and go to state 29
    GREATER_EQ      shift and go to state 30
    IS_EQ           shift and go to state 31
    NOT_EQ          shift and go to state 32
    AND             shift and go to state 33
    OR              shift and go to state 34


state 42

    (4) block_statement -> LBRACE statement_decl_list semicolon_opt RBRACE .

    $end            reduce using rule 4 (block_statement -> LBRACE statement_decl_list semicolon_opt RBRACE .)
    SEMICOLON       reduce using rule 4 (block_statement -> LBRACE statement_decl_list semicolon_opt RBRACE .)
    RBRACE          reduce using rule 4 (block_statement -> LBRACE statement_decl_list semicolon_opt RBRACE .)


state 43

    (7) statement_decl_list -> statement_decl_list SEMICOLON statement_decl .

    SEMICOLON       reduce using rule 7 (statement_decl_list -> statement_decl_list SEMICOLON statement_decl .)
    RBRACE          reduce using rule 7 (statement_decl_list -> statement_decl_list SEMICOLON statement_decl .)


state 44

    (20) expression -> expression PLUS expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . EXPONENT expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MODULUS expression
    (26) expression -> expression . LESS expression
    (27) expression -> expression . LESS_EQ expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . IS_EQ expression
    (31) expression -> expression . NOT_EQ expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

    PLUS            reduce using rule 20 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 20 (expression -> expression PLUS expression .)
    LESS            reduce using rule 20 (expression -> expression PLUS expression .)
    LESS_EQ         reduce using rule 20 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 20 (expression -> expression PLUS expression .)
    GREATER_EQ      reduce using rule 20 (expression -> expression PLUS expression .)
    IS_EQ           reduce using rule 20 (expression -> expression PLUS expression .)
    NOT_EQ          reduce using rule 20 (expression -> expression PLUS expression .)
    AND             reduce using rule 20 (expression -> expression PLUS expression .)
    OR              reduce using rule 20 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 20 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 20 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 20 (expression -> expression PLUS expression .)
    EXPONENT        shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    MODULUS         shift and go to state 26

  ! EXPONENT        [ reduce using rule 20 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression PLUS expression .) ]
  ! MODULUS         [ reduce using rule 20 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 22 ]
  ! LESS            [ shift and go to state 27 ]
  ! LESS_EQ         [ shift and go to state 28 ]
  ! GREATER         [ shift and go to state 29 ]
  ! GREATER_EQ      [ shift and go to state 30 ]
  ! IS_EQ           [ shift and go to state 31 ]
  ! NOT_EQ          [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 45

    (21) expression -> expression MINUS expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . EXPONENT expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MODULUS expression
    (26) expression -> expression . LESS expression
    (27) expression -> expression . LESS_EQ expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . IS_EQ expression
    (31) expression -> expression . NOT_EQ expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

    PLUS            reduce using rule 21 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 21 (expression -> expression MINUS expression .)
    LESS            reduce using rule 21 (expression -> expression MINUS expression .)
    LESS_EQ         reduce using rule 21 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 21 (expression -> expression MINUS expression .)
    GREATER_EQ      reduce using rule 21 (expression -> expression MINUS expression .)
    IS_EQ           reduce using rule 21 (expression -> expression MINUS expression .)
    NOT_EQ          reduce using rule 21 (expression -> expression MINUS expression .)
    AND             reduce using rule 21 (expression -> expression MINUS expression .)
    OR              reduce using rule 21 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 21 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 21 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 21 (expression -> expression MINUS expression .)
    EXPONENT        shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    MODULUS         shift and go to state 26

  ! EXPONENT        [ reduce using rule 21 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 21 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression MINUS expression .) ]
  ! MODULUS         [ reduce using rule 21 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 22 ]
  ! LESS            [ shift and go to state 27 ]
  ! LESS_EQ         [ shift and go to state 28 ]
  ! GREATER         [ shift and go to state 29 ]
  ! GREATER_EQ      [ shift and go to state 30 ]
  ! IS_EQ           [ shift and go to state 31 ]
  ! NOT_EQ          [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 46

    (22) expression -> expression EXPONENT expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . EXPONENT expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MODULUS expression
    (26) expression -> expression . LESS expression
    (27) expression -> expression . LESS_EQ expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . IS_EQ expression
    (31) expression -> expression . NOT_EQ expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

    PLUS            reduce using rule 22 (expression -> expression EXPONENT expression .)
    MINUS           reduce using rule 22 (expression -> expression EXPONENT expression .)
    TIMES           reduce using rule 22 (expression -> expression EXPONENT expression .)
    DIVIDE          reduce using rule 22 (expression -> expression EXPONENT expression .)
    MODULUS         reduce using rule 22 (expression -> expression EXPONENT expression .)
    LESS            reduce using rule 22 (expression -> expression EXPONENT expression .)
    LESS_EQ         reduce using rule 22 (expression -> expression EXPONENT expression .)
    GREATER         reduce using rule 22 (expression -> expression EXPONENT expression .)
    GREATER_EQ      reduce using rule 22 (expression -> expression EXPONENT expression .)
    IS_EQ           reduce using rule 22 (expression -> expression EXPONENT expression .)
    NOT_EQ          reduce using rule 22 (expression -> expression EXPONENT expression .)
    AND             reduce using rule 22 (expression -> expression EXPONENT expression .)
    OR              reduce using rule 22 (expression -> expression EXPONENT expression .)
    SEMICOLON       reduce using rule 22 (expression -> expression EXPONENT expression .)
    RBRACE          reduce using rule 22 (expression -> expression EXPONENT expression .)
    RPAREN          reduce using rule 22 (expression -> expression EXPONENT expression .)
    EXPONENT        shift and go to state 23

  ! EXPONENT        [ reduce using rule 22 (expression -> expression EXPONENT expression .) ]
  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 22 ]
  ! TIMES           [ shift and go to state 24 ]
  ! DIVIDE          [ shift and go to state 25 ]
  ! MODULUS         [ shift and go to state 26 ]
  ! LESS            [ shift and go to state 27 ]
  ! LESS_EQ         [ shift and go to state 28 ]
  ! GREATER         [ shift and go to state 29 ]
  ! GREATER_EQ      [ shift and go to state 30 ]
  ! IS_EQ           [ shift and go to state 31 ]
  ! NOT_EQ          [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 47

    (23) expression -> expression TIMES expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . EXPONENT expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MODULUS expression
    (26) expression -> expression . LESS expression
    (27) expression -> expression . LESS_EQ expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . IS_EQ expression
    (31) expression -> expression . NOT_EQ expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

    PLUS            reduce using rule 23 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 23 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 23 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 23 (expression -> expression TIMES expression .)
    MODULUS         reduce using rule 23 (expression -> expression TIMES expression .)
    LESS            reduce using rule 23 (expression -> expression TIMES expression .)
    LESS_EQ         reduce using rule 23 (expression -> expression TIMES expression .)
    GREATER         reduce using rule 23 (expression -> expression TIMES expression .)
    GREATER_EQ      reduce using rule 23 (expression -> expression TIMES expression .)
    IS_EQ           reduce using rule 23 (expression -> expression TIMES expression .)
    NOT_EQ          reduce using rule 23 (expression -> expression TIMES expression .)
    AND             reduce using rule 23 (expression -> expression TIMES expression .)
    OR              reduce using rule 23 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 23 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 23 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 23 (expression -> expression TIMES expression .)
    EXPONENT        shift and go to state 23

  ! EXPONENT        [ reduce using rule 23 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 22 ]
  ! TIMES           [ shift and go to state 24 ]
  ! DIVIDE          [ shift and go to state 25 ]
  ! MODULUS         [ shift and go to state 26 ]
  ! LESS            [ shift and go to state 27 ]
  ! LESS_EQ         [ shift and go to state 28 ]
  ! GREATER         [ shift and go to state 29 ]
  ! GREATER_EQ      [ shift and go to state 30 ]
  ! IS_EQ           [ shift and go to state 31 ]
  ! NOT_EQ          [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 48

    (24) expression -> expression DIVIDE expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . EXPONENT expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MODULUS expression
    (26) expression -> expression . LESS expression
    (27) expression -> expression . LESS_EQ expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . IS_EQ expression
    (31) expression -> expression . NOT_EQ expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

    PLUS            reduce using rule 24 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 24 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 24 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 24 (expression -> expression DIVIDE expression .)
    MODULUS         reduce using rule 24 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 24 (expression -> expression DIVIDE expression .)
    LESS_EQ         reduce using rule 24 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 24 (expression -> expression DIVIDE expression .)
    GREATER_EQ      reduce using rule 24 (expression -> expression DIVIDE expression .)
    IS_EQ           reduce using rule 24 (expression -> expression DIVIDE expression .)
    NOT_EQ          reduce using rule 24 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 24 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 24 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 24 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 24 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 24 (expression -> expression DIVIDE expression .)
    EXPONENT        shift and go to state 23

  ! EXPONENT        [ reduce using rule 24 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 22 ]
  ! TIMES           [ shift and go to state 24 ]
  ! DIVIDE          [ shift and go to state 25 ]
  ! MODULUS         [ shift and go to state 26 ]
  ! LESS            [ shift and go to state 27 ]
  ! LESS_EQ         [ shift and go to state 28 ]
  ! GREATER         [ shift and go to state 29 ]
  ! GREATER_EQ      [ shift and go to state 30 ]
  ! IS_EQ           [ shift and go to state 31 ]
  ! NOT_EQ          [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 49

    (25) expression -> expression MODULUS expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . EXPONENT expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MODULUS expression
    (26) expression -> expression . LESS expression
    (27) expression -> expression . LESS_EQ expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . IS_EQ expression
    (31) expression -> expression . NOT_EQ expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

    PLUS            reduce using rule 25 (expression -> expression MODULUS expression .)
    MINUS           reduce using rule 25 (expression -> expression MODULUS expression .)
    TIMES           reduce using rule 25 (expression -> expression MODULUS expression .)
    DIVIDE          reduce using rule 25 (expression -> expression MODULUS expression .)
    MODULUS         reduce using rule 25 (expression -> expression MODULUS expression .)
    LESS            reduce using rule 25 (expression -> expression MODULUS expression .)
    LESS_EQ         reduce using rule 25 (expression -> expression MODULUS expression .)
    GREATER         reduce using rule 25 (expression -> expression MODULUS expression .)
    GREATER_EQ      reduce using rule 25 (expression -> expression MODULUS expression .)
    IS_EQ           reduce using rule 25 (expression -> expression MODULUS expression .)
    NOT_EQ          reduce using rule 25 (expression -> expression MODULUS expression .)
    AND             reduce using rule 25 (expression -> expression MODULUS expression .)
    OR              reduce using rule 25 (expression -> expression MODULUS expression .)
    SEMICOLON       reduce using rule 25 (expression -> expression MODULUS expression .)
    RBRACE          reduce using rule 25 (expression -> expression MODULUS expression .)
    RPAREN          reduce using rule 25 (expression -> expression MODULUS expression .)
    EXPONENT        shift and go to state 23

  ! EXPONENT        [ reduce using rule 25 (expression -> expression MODULUS expression .) ]
  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 22 ]
  ! TIMES           [ shift and go to state 24 ]
  ! DIVIDE          [ shift and go to state 25 ]
  ! MODULUS         [ shift and go to state 26 ]
  ! LESS            [ shift and go to state 27 ]
  ! LESS_EQ         [ shift and go to state 28 ]
  ! GREATER         [ shift and go to state 29 ]
  ! GREATER_EQ      [ shift and go to state 30 ]
  ! IS_EQ           [ shift and go to state 31 ]
  ! NOT_EQ          [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 50

    (26) expression -> expression LESS expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . EXPONENT expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MODULUS expression
    (26) expression -> expression . LESS expression
    (27) expression -> expression . LESS_EQ expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . IS_EQ expression
    (31) expression -> expression . NOT_EQ expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

    LESS            reduce using rule 26 (expression -> expression LESS expression .)
    LESS_EQ         reduce using rule 26 (expression -> expression LESS expression .)
    GREATER         reduce using rule 26 (expression -> expression LESS expression .)
    GREATER_EQ      reduce using rule 26 (expression -> expression LESS expression .)
    IS_EQ           reduce using rule 26 (expression -> expression LESS expression .)
    NOT_EQ          reduce using rule 26 (expression -> expression LESS expression .)
    AND             reduce using rule 26 (expression -> expression LESS expression .)
    OR              reduce using rule 26 (expression -> expression LESS expression .)
    SEMICOLON       reduce using rule 26 (expression -> expression LESS expression .)
    RBRACE          reduce using rule 26 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 26 (expression -> expression LESS expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    EXPONENT        shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    MODULUS         shift and go to state 26

  ! PLUS            [ reduce using rule 26 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression LESS expression .) ]
  ! EXPONENT        [ reduce using rule 26 (expression -> expression LESS expression .) ]
  ! TIMES           [ reduce using rule 26 (expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression LESS expression .) ]
  ! MODULUS         [ reduce using rule 26 (expression -> expression LESS expression .) ]
  ! LESS            [ shift and go to state 27 ]
  ! LESS_EQ         [ shift and go to state 28 ]
  ! GREATER         [ shift and go to state 29 ]
  ! GREATER_EQ      [ shift and go to state 30 ]
  ! IS_EQ           [ shift and go to state 31 ]
  ! NOT_EQ          [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 51

    (27) expression -> expression LESS_EQ expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . EXPONENT expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MODULUS expression
    (26) expression -> expression . LESS expression
    (27) expression -> expression . LESS_EQ expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . IS_EQ expression
    (31) expression -> expression . NOT_EQ expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

    LESS            reduce using rule 27 (expression -> expression LESS_EQ expression .)
    LESS_EQ         reduce using rule 27 (expression -> expression LESS_EQ expression .)
    GREATER         reduce using rule 27 (expression -> expression LESS_EQ expression .)
    GREATER_EQ      reduce using rule 27 (expression -> expression LESS_EQ expression .)
    IS_EQ           reduce using rule 27 (expression -> expression LESS_EQ expression .)
    NOT_EQ          reduce using rule 27 (expression -> expression LESS_EQ expression .)
    AND             reduce using rule 27 (expression -> expression LESS_EQ expression .)
    OR              reduce using rule 27 (expression -> expression LESS_EQ expression .)
    SEMICOLON       reduce using rule 27 (expression -> expression LESS_EQ expression .)
    RBRACE          reduce using rule 27 (expression -> expression LESS_EQ expression .)
    RPAREN          reduce using rule 27 (expression -> expression LESS_EQ expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    EXPONENT        shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    MODULUS         shift and go to state 26

  ! PLUS            [ reduce using rule 27 (expression -> expression LESS_EQ expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression LESS_EQ expression .) ]
  ! EXPONENT        [ reduce using rule 27 (expression -> expression LESS_EQ expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> expression LESS_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression LESS_EQ expression .) ]
  ! MODULUS         [ reduce using rule 27 (expression -> expression LESS_EQ expression .) ]
  ! LESS            [ shift and go to state 27 ]
  ! LESS_EQ         [ shift and go to state 28 ]
  ! GREATER         [ shift and go to state 29 ]
  ! GREATER_EQ      [ shift and go to state 30 ]
  ! IS_EQ           [ shift and go to state 31 ]
  ! NOT_EQ          [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 52

    (28) expression -> expression GREATER expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . EXPONENT expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MODULUS expression
    (26) expression -> expression . LESS expression
    (27) expression -> expression . LESS_EQ expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . IS_EQ expression
    (31) expression -> expression . NOT_EQ expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

    LESS            reduce using rule 28 (expression -> expression GREATER expression .)
    LESS_EQ         reduce using rule 28 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 28 (expression -> expression GREATER expression .)
    GREATER_EQ      reduce using rule 28 (expression -> expression GREATER expression .)
    IS_EQ           reduce using rule 28 (expression -> expression GREATER expression .)
    NOT_EQ          reduce using rule 28 (expression -> expression GREATER expression .)
    AND             reduce using rule 28 (expression -> expression GREATER expression .)
    OR              reduce using rule 28 (expression -> expression GREATER expression .)
    SEMICOLON       reduce using rule 28 (expression -> expression GREATER expression .)
    RBRACE          reduce using rule 28 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 28 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    EXPONENT        shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    MODULUS         shift and go to state 26

  ! PLUS            [ reduce using rule 28 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression GREATER expression .) ]
  ! EXPONENT        [ reduce using rule 28 (expression -> expression GREATER expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression GREATER expression .) ]
  ! MODULUS         [ reduce using rule 28 (expression -> expression GREATER expression .) ]
  ! LESS            [ shift and go to state 27 ]
  ! LESS_EQ         [ shift and go to state 28 ]
  ! GREATER         [ shift and go to state 29 ]
  ! GREATER_EQ      [ shift and go to state 30 ]
  ! IS_EQ           [ shift and go to state 31 ]
  ! NOT_EQ          [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 53

    (29) expression -> expression GREATER_EQ expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . EXPONENT expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MODULUS expression
    (26) expression -> expression . LESS expression
    (27) expression -> expression . LESS_EQ expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . IS_EQ expression
    (31) expression -> expression . NOT_EQ expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

    LESS            reduce using rule 29 (expression -> expression GREATER_EQ expression .)
    LESS_EQ         reduce using rule 29 (expression -> expression GREATER_EQ expression .)
    GREATER         reduce using rule 29 (expression -> expression GREATER_EQ expression .)
    GREATER_EQ      reduce using rule 29 (expression -> expression GREATER_EQ expression .)
    IS_EQ           reduce using rule 29 (expression -> expression GREATER_EQ expression .)
    NOT_EQ          reduce using rule 29 (expression -> expression GREATER_EQ expression .)
    AND             reduce using rule 29 (expression -> expression GREATER_EQ expression .)
    OR              reduce using rule 29 (expression -> expression GREATER_EQ expression .)
    SEMICOLON       reduce using rule 29 (expression -> expression GREATER_EQ expression .)
    RBRACE          reduce using rule 29 (expression -> expression GREATER_EQ expression .)
    RPAREN          reduce using rule 29 (expression -> expression GREATER_EQ expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    EXPONENT        shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    MODULUS         shift and go to state 26

  ! PLUS            [ reduce using rule 29 (expression -> expression GREATER_EQ expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression GREATER_EQ expression .) ]
  ! EXPONENT        [ reduce using rule 29 (expression -> expression GREATER_EQ expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression GREATER_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression GREATER_EQ expression .) ]
  ! MODULUS         [ reduce using rule 29 (expression -> expression GREATER_EQ expression .) ]
  ! LESS            [ shift and go to state 27 ]
  ! LESS_EQ         [ shift and go to state 28 ]
  ! GREATER         [ shift and go to state 29 ]
  ! GREATER_EQ      [ shift and go to state 30 ]
  ! IS_EQ           [ shift and go to state 31 ]
  ! NOT_EQ          [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 54

    (30) expression -> expression IS_EQ expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . EXPONENT expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MODULUS expression
    (26) expression -> expression . LESS expression
    (27) expression -> expression . LESS_EQ expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . IS_EQ expression
    (31) expression -> expression . NOT_EQ expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

    IS_EQ           reduce using rule 30 (expression -> expression IS_EQ expression .)
    NOT_EQ          reduce using rule 30 (expression -> expression IS_EQ expression .)
    AND             reduce using rule 30 (expression -> expression IS_EQ expression .)
    OR              reduce using rule 30 (expression -> expression IS_EQ expression .)
    SEMICOLON       reduce using rule 30 (expression -> expression IS_EQ expression .)
    RBRACE          reduce using rule 30 (expression -> expression IS_EQ expression .)
    RPAREN          reduce using rule 30 (expression -> expression IS_EQ expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    EXPONENT        shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    MODULUS         shift and go to state 26
    LESS            shift and go to state 27
    LESS_EQ         shift and go to state 28
    GREATER         shift and go to state 29
    GREATER_EQ      shift and go to state 30

  ! PLUS            [ reduce using rule 30 (expression -> expression IS_EQ expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression IS_EQ expression .) ]
  ! EXPONENT        [ reduce using rule 30 (expression -> expression IS_EQ expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression IS_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression IS_EQ expression .) ]
  ! MODULUS         [ reduce using rule 30 (expression -> expression IS_EQ expression .) ]
  ! LESS            [ reduce using rule 30 (expression -> expression IS_EQ expression .) ]
  ! LESS_EQ         [ reduce using rule 30 (expression -> expression IS_EQ expression .) ]
  ! GREATER         [ reduce using rule 30 (expression -> expression IS_EQ expression .) ]
  ! GREATER_EQ      [ reduce using rule 30 (expression -> expression IS_EQ expression .) ]
  ! IS_EQ           [ shift and go to state 31 ]
  ! NOT_EQ          [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 55

    (31) expression -> expression NOT_EQ expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . EXPONENT expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MODULUS expression
    (26) expression -> expression . LESS expression
    (27) expression -> expression . LESS_EQ expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . IS_EQ expression
    (31) expression -> expression . NOT_EQ expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

    IS_EQ           reduce using rule 31 (expression -> expression NOT_EQ expression .)
    NOT_EQ          reduce using rule 31 (expression -> expression NOT_EQ expression .)
    AND             reduce using rule 31 (expression -> expression NOT_EQ expression .)
    OR              reduce using rule 31 (expression -> expression NOT_EQ expression .)
    SEMICOLON       reduce using rule 31 (expression -> expression NOT_EQ expression .)
    RBRACE          reduce using rule 31 (expression -> expression NOT_EQ expression .)
    RPAREN          reduce using rule 31 (expression -> expression NOT_EQ expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    EXPONENT        shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    MODULUS         shift and go to state 26
    LESS            shift and go to state 27
    LESS_EQ         shift and go to state 28
    GREATER         shift and go to state 29
    GREATER_EQ      shift and go to state 30

  ! PLUS            [ reduce using rule 31 (expression -> expression NOT_EQ expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression NOT_EQ expression .) ]
  ! EXPONENT        [ reduce using rule 31 (expression -> expression NOT_EQ expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression NOT_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression NOT_EQ expression .) ]
  ! MODULUS         [ reduce using rule 31 (expression -> expression NOT_EQ expression .) ]
  ! LESS            [ reduce using rule 31 (expression -> expression NOT_EQ expression .) ]
  ! LESS_EQ         [ reduce using rule 31 (expression -> expression NOT_EQ expression .) ]
  ! GREATER         [ reduce using rule 31 (expression -> expression NOT_EQ expression .) ]
  ! GREATER_EQ      [ reduce using rule 31 (expression -> expression NOT_EQ expression .) ]
  ! IS_EQ           [ shift and go to state 31 ]
  ! NOT_EQ          [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 56

    (32) expression -> expression AND expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . EXPONENT expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MODULUS expression
    (26) expression -> expression . LESS expression
    (27) expression -> expression . LESS_EQ expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . IS_EQ expression
    (31) expression -> expression . NOT_EQ expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

    AND             reduce using rule 32 (expression -> expression AND expression .)
    OR              reduce using rule 32 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 32 (expression -> expression AND expression .)
    RBRACE          reduce using rule 32 (expression -> expression AND expression .)
    RPAREN          reduce using rule 32 (expression -> expression AND expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    EXPONENT        shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    MODULUS         shift and go to state 26
    LESS            shift and go to state 27
    LESS_EQ         shift and go to state 28
    GREATER         shift and go to state 29
    GREATER_EQ      shift and go to state 30
    IS_EQ           shift and go to state 31
    NOT_EQ          shift and go to state 32

  ! PLUS            [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! EXPONENT        [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! MODULUS         [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! LESS_EQ         [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! GREATER_EQ      [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! IS_EQ           [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! NOT_EQ          [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 57

    (33) expression -> expression OR expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . EXPONENT expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MODULUS expression
    (26) expression -> expression . LESS expression
    (27) expression -> expression . LESS_EQ expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . IS_EQ expression
    (31) expression -> expression . NOT_EQ expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

    OR              reduce using rule 33 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 33 (expression -> expression OR expression .)
    RBRACE          reduce using rule 33 (expression -> expression OR expression .)
    RPAREN          reduce using rule 33 (expression -> expression OR expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    EXPONENT        shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    MODULUS         shift and go to state 26
    LESS            shift and go to state 27
    LESS_EQ         shift and go to state 28
    GREATER         shift and go to state 29
    GREATER_EQ      shift and go to state 30
    IS_EQ           shift and go to state 31
    NOT_EQ          shift and go to state 32
    AND             shift and go to state 33

  ! PLUS            [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! EXPONENT        [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! MODULUS         [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! LESS_EQ         [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! GREATER_EQ      [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! IS_EQ           [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! NOT_EQ          [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 34 ]


state 58

    (12) decl -> ID COLON type . Initiation
    (13) Initiation -> . EQUALS expression
    (14) Initiation -> . epsilon
    (38) epsilon -> .

    EQUALS          shift and go to state 63
    SEMICOLON       reduce using rule 38 (epsilon -> .)
    RBRACE          reduce using rule 38 (epsilon -> .)

    Initiation                     shift and go to state 62
    epsilon                        shift and go to state 64

state 59

    (16) type -> INT .

    EQUALS          reduce using rule 16 (type -> INT .)
    SEMICOLON       reduce using rule 16 (type -> INT .)
    RBRACE          reduce using rule 16 (type -> INT .)


state 60

    (34) expression -> identifier EQUALS expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . EXPONENT expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MODULUS expression
    (26) expression -> expression . LESS expression
    (27) expression -> expression . LESS_EQ expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . IS_EQ expression
    (31) expression -> expression . NOT_EQ expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

    SEMICOLON       reduce using rule 34 (expression -> identifier EQUALS expression .)
    RBRACE          reduce using rule 34 (expression -> identifier EQUALS expression .)
    RPAREN          reduce using rule 34 (expression -> identifier EQUALS expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    EXPONENT        shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    MODULUS         shift and go to state 26
    LESS            shift and go to state 27
    LESS_EQ         shift and go to state 28
    GREATER         shift and go to state 29
    GREATER_EQ      shift and go to state 30
    IS_EQ           shift and go to state 31
    NOT_EQ          shift and go to state 32
    AND             shift and go to state 33
    OR              shift and go to state 34

  ! PLUS            [ reduce using rule 34 (expression -> identifier EQUALS expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> identifier EQUALS expression .) ]
  ! EXPONENT        [ reduce using rule 34 (expression -> identifier EQUALS expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> identifier EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> identifier EQUALS expression .) ]
  ! MODULUS         [ reduce using rule 34 (expression -> identifier EQUALS expression .) ]
  ! LESS            [ reduce using rule 34 (expression -> identifier EQUALS expression .) ]
  ! LESS_EQ         [ reduce using rule 34 (expression -> identifier EQUALS expression .) ]
  ! GREATER         [ reduce using rule 34 (expression -> identifier EQUALS expression .) ]
  ! GREATER_EQ      [ reduce using rule 34 (expression -> identifier EQUALS expression .) ]
  ! IS_EQ           [ reduce using rule 34 (expression -> identifier EQUALS expression .) ]
  ! NOT_EQ          [ reduce using rule 34 (expression -> identifier EQUALS expression .) ]
  ! AND             [ reduce using rule 34 (expression -> identifier EQUALS expression .) ]
  ! OR              [ reduce using rule 34 (expression -> identifier EQUALS expression .) ]


state 61

    (35) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    EXPONENT        reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    MODULUS         reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    LESS_EQ         reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    GREATER_EQ      reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    IS_EQ           reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    NOT_EQ          reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 35 (expression -> LPAREN expression RPAREN .)


state 62

    (12) decl -> ID COLON type Initiation .

    SEMICOLON       reduce using rule 12 (decl -> ID COLON type Initiation .)
    RBRACE          reduce using rule 12 (decl -> ID COLON type Initiation .)


state 63

    (13) Initiation -> EQUALS . expression
    (17) expression -> . PLUS expression
    (18) expression -> . MINUS expression
    (19) expression -> . NOT expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression EXPONENT expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MODULUS expression
    (26) expression -> . expression LESS expression
    (27) expression -> . expression LESS_EQ expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression IS_EQ expression
    (31) expression -> . expression NOT_EQ expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . identifier EQUALS expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . INT_LITERAL
    (37) expression -> . identifier
    (15) identifier -> . ID

    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    LPAREN          shift and go to state 16
    INT_LITERAL     shift and go to state 17
    ID              shift and go to state 37

    expression                     shift and go to state 65
    identifier                     shift and go to state 15

state 64

    (14) Initiation -> epsilon .

    SEMICOLON       reduce using rule 14 (Initiation -> epsilon .)
    RBRACE          reduce using rule 14 (Initiation -> epsilon .)


state 65

    (13) Initiation -> EQUALS expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . EXPONENT expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MODULUS expression
    (26) expression -> expression . LESS expression
    (27) expression -> expression . LESS_EQ expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . IS_EQ expression
    (31) expression -> expression . NOT_EQ expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

    SEMICOLON       reduce using rule 13 (Initiation -> EQUALS expression .)
    RBRACE          reduce using rule 13 (Initiation -> EQUALS expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    EXPONENT        shift and go to state 23
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    MODULUS         shift and go to state 26
    LESS            shift and go to state 27
    LESS_EQ         shift and go to state 28
    GREATER         shift and go to state 29
    GREATER_EQ      shift and go to state 30
    IS_EQ           shift and go to state 31
    NOT_EQ          shift and go to state 32
    AND             shift and go to state 33
    OR              shift and go to state 34

