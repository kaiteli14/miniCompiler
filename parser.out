Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> block_statement
Rule 2     semicolon_opt -> epsilon
Rule 3     semicolon_opt -> SEMICOLON
Rule 4     block_statement -> LBRACE statement_decl_list semicolon_opt RBRACE
Rule 5     statement -> expression
Rule 6     statement -> block_statement
Rule 7     statement -> if_then_statement
Rule 8     statement_decl_list -> statement_decl_list SEMICOLON statement_decl
Rule 9     statement_decl_list -> statement_decl
Rule 10    statement_decl_list -> epsilon
Rule 11    statement_decl -> statement
Rule 12    statement_decl -> decl
Rule 13    decl -> ID COLON type Initiation
Rule 14    Initiation -> EQUALS expression
Rule 15    Initiation -> epsilon
Rule 16    if_then_statement -> IF expression block_statement
Rule 17    identifier -> ID
Rule 18    type -> INT
Rule 19    expression -> PLUS expression
Rule 20    expression -> MINUS expression
Rule 21    expression -> NOT expression
Rule 22    expression -> expression PLUS expression
Rule 23    expression -> expression MINUS expression
Rule 24    expression -> expression EXPONENT expression
Rule 25    expression -> expression TIMES expression
Rule 26    expression -> expression DIVIDE expression
Rule 27    expression -> expression MODULUS expression
Rule 28    expression -> expression LESS expression
Rule 29    expression -> expression LESS_EQ expression
Rule 30    expression -> expression GREATER expression
Rule 31    expression -> expression GREATER_EQ expression
Rule 32    expression -> expression IS_EQ expression
Rule 33    expression -> expression NOT_EQ expression
Rule 34    expression -> expression AND expression
Rule 35    expression -> expression OR expression
Rule 36    expression -> identifier EQUALS expression
Rule 37    expression -> LPAREN expression RPAREN
Rule 38    expression -> INT_LITERAL
Rule 39    lvalue -> identifier
Rule 40    expression -> lvalue
Rule 41    epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 34
COLON                : 13
DIVIDE               : 26
EQUALS               : 14 36
EXPONENT             : 24
GREATER              : 30
GREATER_EQ           : 31
ID                   : 13 17
IF                   : 16
INT                  : 18
INT_LITERAL          : 38
IS_EQ                : 32
LBRACE               : 4
LESS                 : 28
LESS_EQ              : 29
LPAREN               : 37
MINUS                : 20 23
MODULUS              : 27
NOT                  : 21
NOT_EQ               : 33
OR                   : 35
PLUS                 : 19 22
RBRACE               : 4
RPAREN               : 37
SEMICOLON            : 3 8
TIMES                : 25
error                : 

Nonterminals, with rules where they appear

Initiation           : 13
block_statement      : 1 6 16
decl                 : 12
epsilon              : 2 10 15
expression           : 5 14 16 19 20 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 37
identifier           : 36 39
if_then_statement    : 7
lvalue               : 40
program              : 0
semicolon_opt        : 4
statement            : 11
statement_decl       : 8 9
statement_decl_list  : 4 8
type                 : 13

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . block_statement
    (4) block_statement -> . LBRACE statement_decl_list semicolon_opt RBRACE

    LBRACE          shift and go to state 3

    program                        shift and go to state 1
    block_statement                shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> block_statement .

    $end            reduce using rule 1 (program -> block_statement .)


state 3

    (4) block_statement -> LBRACE . statement_decl_list semicolon_opt RBRACE
    (8) statement_decl_list -> . statement_decl_list SEMICOLON statement_decl
    (9) statement_decl_list -> . statement_decl
    (10) statement_decl_list -> . epsilon
    (11) statement_decl -> . statement
    (12) statement_decl -> . decl
    (41) epsilon -> .
    (5) statement -> . expression
    (6) statement -> . block_statement
    (7) statement -> . if_then_statement
    (13) decl -> . ID COLON type Initiation
    (19) expression -> . PLUS expression
    (20) expression -> . MINUS expression
    (21) expression -> . NOT expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression EXPONENT expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULUS expression
    (28) expression -> . expression LESS expression
    (29) expression -> . expression LESS_EQ expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_EQ expression
    (32) expression -> . expression IS_EQ expression
    (33) expression -> . expression NOT_EQ expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . identifier EQUALS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . INT_LITERAL
    (40) expression -> . lvalue
    (4) block_statement -> . LBRACE statement_decl_list semicolon_opt RBRACE
    (16) if_then_statement -> . IF expression block_statement
    (17) identifier -> . ID
    (39) lvalue -> . identifier

    SEMICOLON       reduce using rule 41 (epsilon -> .)
    RBRACE          reduce using rule 41 (epsilon -> .)
    ID              shift and go to state 12
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 17
    INT_LITERAL     shift and go to state 18
    LBRACE          shift and go to state 3
    IF              shift and go to state 20

    statement_decl_list            shift and go to state 4
    statement_decl                 shift and go to state 5
    epsilon                        shift and go to state 6
    statement                      shift and go to state 7
    decl                           shift and go to state 8
    expression                     shift and go to state 9
    block_statement                shift and go to state 10
    if_then_statement              shift and go to state 11
    identifier                     shift and go to state 16
    lvalue                         shift and go to state 19

state 4

    (4) block_statement -> LBRACE statement_decl_list . semicolon_opt RBRACE
    (8) statement_decl_list -> statement_decl_list . SEMICOLON statement_decl
    (2) semicolon_opt -> . epsilon
    (3) semicolon_opt -> . SEMICOLON
    (41) epsilon -> .

    SEMICOLON       shift and go to state 22
    RBRACE          reduce using rule 41 (epsilon -> .)

    semicolon_opt                  shift and go to state 21
    epsilon                        shift and go to state 23

state 5

    (9) statement_decl_list -> statement_decl .

    SEMICOLON       reduce using rule 9 (statement_decl_list -> statement_decl .)
    RBRACE          reduce using rule 9 (statement_decl_list -> statement_decl .)


state 6

    (10) statement_decl_list -> epsilon .

    SEMICOLON       reduce using rule 10 (statement_decl_list -> epsilon .)
    RBRACE          reduce using rule 10 (statement_decl_list -> epsilon .)


state 7

    (11) statement_decl -> statement .

    SEMICOLON       reduce using rule 11 (statement_decl -> statement .)
    RBRACE          reduce using rule 11 (statement_decl -> statement .)


state 8

    (12) statement_decl -> decl .

    SEMICOLON       reduce using rule 12 (statement_decl -> decl .)
    RBRACE          reduce using rule 12 (statement_decl -> decl .)


state 9

    (5) statement -> expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . EXPONENT expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULUS expression
    (28) expression -> expression . LESS expression
    (29) expression -> expression . LESS_EQ expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_EQ expression
    (32) expression -> expression . IS_EQ expression
    (33) expression -> expression . NOT_EQ expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    SEMICOLON       reduce using rule 5 (statement -> expression .)
    RBRACE          reduce using rule 5 (statement -> expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    EXPONENT        shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    MODULUS         shift and go to state 29
    LESS            shift and go to state 30
    LESS_EQ         shift and go to state 31
    GREATER         shift and go to state 32
    GREATER_EQ      shift and go to state 33
    IS_EQ           shift and go to state 34
    NOT_EQ          shift and go to state 35
    AND             shift and go to state 36
    OR              shift and go to state 37


state 10

    (6) statement -> block_statement .

    SEMICOLON       reduce using rule 6 (statement -> block_statement .)
    RBRACE          reduce using rule 6 (statement -> block_statement .)


state 11

    (7) statement -> if_then_statement .

    SEMICOLON       reduce using rule 7 (statement -> if_then_statement .)
    RBRACE          reduce using rule 7 (statement -> if_then_statement .)


state 12

    (13) decl -> ID . COLON type Initiation
    (17) identifier -> ID .

    COLON           shift and go to state 38
    EQUALS          reduce using rule 17 (identifier -> ID .)
    PLUS            reduce using rule 17 (identifier -> ID .)
    MINUS           reduce using rule 17 (identifier -> ID .)
    EXPONENT        reduce using rule 17 (identifier -> ID .)
    TIMES           reduce using rule 17 (identifier -> ID .)
    DIVIDE          reduce using rule 17 (identifier -> ID .)
    MODULUS         reduce using rule 17 (identifier -> ID .)
    LESS            reduce using rule 17 (identifier -> ID .)
    LESS_EQ         reduce using rule 17 (identifier -> ID .)
    GREATER         reduce using rule 17 (identifier -> ID .)
    GREATER_EQ      reduce using rule 17 (identifier -> ID .)
    IS_EQ           reduce using rule 17 (identifier -> ID .)
    NOT_EQ          reduce using rule 17 (identifier -> ID .)
    AND             reduce using rule 17 (identifier -> ID .)
    OR              reduce using rule 17 (identifier -> ID .)
    SEMICOLON       reduce using rule 17 (identifier -> ID .)
    RBRACE          reduce using rule 17 (identifier -> ID .)


state 13

    (19) expression -> PLUS . expression
    (19) expression -> . PLUS expression
    (20) expression -> . MINUS expression
    (21) expression -> . NOT expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression EXPONENT expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULUS expression
    (28) expression -> . expression LESS expression
    (29) expression -> . expression LESS_EQ expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_EQ expression
    (32) expression -> . expression IS_EQ expression
    (33) expression -> . expression NOT_EQ expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . identifier EQUALS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . INT_LITERAL
    (40) expression -> . lvalue
    (17) identifier -> . ID
    (39) lvalue -> . identifier

    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 17
    INT_LITERAL     shift and go to state 18
    ID              shift and go to state 40

    expression                     shift and go to state 39
    identifier                     shift and go to state 16
    lvalue                         shift and go to state 19

state 14

    (20) expression -> MINUS . expression
    (19) expression -> . PLUS expression
    (20) expression -> . MINUS expression
    (21) expression -> . NOT expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression EXPONENT expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULUS expression
    (28) expression -> . expression LESS expression
    (29) expression -> . expression LESS_EQ expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_EQ expression
    (32) expression -> . expression IS_EQ expression
    (33) expression -> . expression NOT_EQ expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . identifier EQUALS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . INT_LITERAL
    (40) expression -> . lvalue
    (17) identifier -> . ID
    (39) lvalue -> . identifier

    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 17
    INT_LITERAL     shift and go to state 18
    ID              shift and go to state 40

    expression                     shift and go to state 41
    identifier                     shift and go to state 16
    lvalue                         shift and go to state 19

state 15

    (21) expression -> NOT . expression
    (19) expression -> . PLUS expression
    (20) expression -> . MINUS expression
    (21) expression -> . NOT expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression EXPONENT expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULUS expression
    (28) expression -> . expression LESS expression
    (29) expression -> . expression LESS_EQ expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_EQ expression
    (32) expression -> . expression IS_EQ expression
    (33) expression -> . expression NOT_EQ expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . identifier EQUALS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . INT_LITERAL
    (40) expression -> . lvalue
    (17) identifier -> . ID
    (39) lvalue -> . identifier

    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 17
    INT_LITERAL     shift and go to state 18
    ID              shift and go to state 40

    expression                     shift and go to state 42
    identifier                     shift and go to state 16
    lvalue                         shift and go to state 19

state 16

    (36) expression -> identifier . EQUALS expression
    (39) lvalue -> identifier .

    EQUALS          shift and go to state 43
    PLUS            reduce using rule 39 (lvalue -> identifier .)
    MINUS           reduce using rule 39 (lvalue -> identifier .)
    EXPONENT        reduce using rule 39 (lvalue -> identifier .)
    TIMES           reduce using rule 39 (lvalue -> identifier .)
    DIVIDE          reduce using rule 39 (lvalue -> identifier .)
    MODULUS         reduce using rule 39 (lvalue -> identifier .)
    LESS            reduce using rule 39 (lvalue -> identifier .)
    LESS_EQ         reduce using rule 39 (lvalue -> identifier .)
    GREATER         reduce using rule 39 (lvalue -> identifier .)
    GREATER_EQ      reduce using rule 39 (lvalue -> identifier .)
    IS_EQ           reduce using rule 39 (lvalue -> identifier .)
    NOT_EQ          reduce using rule 39 (lvalue -> identifier .)
    AND             reduce using rule 39 (lvalue -> identifier .)
    OR              reduce using rule 39 (lvalue -> identifier .)
    SEMICOLON       reduce using rule 39 (lvalue -> identifier .)
    RBRACE          reduce using rule 39 (lvalue -> identifier .)
    RPAREN          reduce using rule 39 (lvalue -> identifier .)
    LBRACE          reduce using rule 39 (lvalue -> identifier .)


state 17

    (37) expression -> LPAREN . expression RPAREN
    (19) expression -> . PLUS expression
    (20) expression -> . MINUS expression
    (21) expression -> . NOT expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression EXPONENT expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULUS expression
    (28) expression -> . expression LESS expression
    (29) expression -> . expression LESS_EQ expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_EQ expression
    (32) expression -> . expression IS_EQ expression
    (33) expression -> . expression NOT_EQ expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . identifier EQUALS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . INT_LITERAL
    (40) expression -> . lvalue
    (17) identifier -> . ID
    (39) lvalue -> . identifier

    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 17
    INT_LITERAL     shift and go to state 18
    ID              shift and go to state 40

    expression                     shift and go to state 44
    identifier                     shift and go to state 16
    lvalue                         shift and go to state 19

state 18

    (38) expression -> INT_LITERAL .

    PLUS            reduce using rule 38 (expression -> INT_LITERAL .)
    MINUS           reduce using rule 38 (expression -> INT_LITERAL .)
    EXPONENT        reduce using rule 38 (expression -> INT_LITERAL .)
    TIMES           reduce using rule 38 (expression -> INT_LITERAL .)
    DIVIDE          reduce using rule 38 (expression -> INT_LITERAL .)
    MODULUS         reduce using rule 38 (expression -> INT_LITERAL .)
    LESS            reduce using rule 38 (expression -> INT_LITERAL .)
    LESS_EQ         reduce using rule 38 (expression -> INT_LITERAL .)
    GREATER         reduce using rule 38 (expression -> INT_LITERAL .)
    GREATER_EQ      reduce using rule 38 (expression -> INT_LITERAL .)
    IS_EQ           reduce using rule 38 (expression -> INT_LITERAL .)
    NOT_EQ          reduce using rule 38 (expression -> INT_LITERAL .)
    AND             reduce using rule 38 (expression -> INT_LITERAL .)
    OR              reduce using rule 38 (expression -> INT_LITERAL .)
    SEMICOLON       reduce using rule 38 (expression -> INT_LITERAL .)
    RBRACE          reduce using rule 38 (expression -> INT_LITERAL .)
    RPAREN          reduce using rule 38 (expression -> INT_LITERAL .)
    LBRACE          reduce using rule 38 (expression -> INT_LITERAL .)


state 19

    (40) expression -> lvalue .

    PLUS            reduce using rule 40 (expression -> lvalue .)
    MINUS           reduce using rule 40 (expression -> lvalue .)
    EXPONENT        reduce using rule 40 (expression -> lvalue .)
    TIMES           reduce using rule 40 (expression -> lvalue .)
    DIVIDE          reduce using rule 40 (expression -> lvalue .)
    MODULUS         reduce using rule 40 (expression -> lvalue .)
    LESS            reduce using rule 40 (expression -> lvalue .)
    LESS_EQ         reduce using rule 40 (expression -> lvalue .)
    GREATER         reduce using rule 40 (expression -> lvalue .)
    GREATER_EQ      reduce using rule 40 (expression -> lvalue .)
    IS_EQ           reduce using rule 40 (expression -> lvalue .)
    NOT_EQ          reduce using rule 40 (expression -> lvalue .)
    AND             reduce using rule 40 (expression -> lvalue .)
    OR              reduce using rule 40 (expression -> lvalue .)
    SEMICOLON       reduce using rule 40 (expression -> lvalue .)
    RBRACE          reduce using rule 40 (expression -> lvalue .)
    RPAREN          reduce using rule 40 (expression -> lvalue .)
    LBRACE          reduce using rule 40 (expression -> lvalue .)


state 20

    (16) if_then_statement -> IF . expression block_statement
    (19) expression -> . PLUS expression
    (20) expression -> . MINUS expression
    (21) expression -> . NOT expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression EXPONENT expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULUS expression
    (28) expression -> . expression LESS expression
    (29) expression -> . expression LESS_EQ expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_EQ expression
    (32) expression -> . expression IS_EQ expression
    (33) expression -> . expression NOT_EQ expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . identifier EQUALS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . INT_LITERAL
    (40) expression -> . lvalue
    (17) identifier -> . ID
    (39) lvalue -> . identifier

    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 17
    INT_LITERAL     shift and go to state 18
    ID              shift and go to state 40

    expression                     shift and go to state 45
    identifier                     shift and go to state 16
    lvalue                         shift and go to state 19

state 21

    (4) block_statement -> LBRACE statement_decl_list semicolon_opt . RBRACE

    RBRACE          shift and go to state 46


state 22

    (8) statement_decl_list -> statement_decl_list SEMICOLON . statement_decl
    (3) semicolon_opt -> SEMICOLON .
    (11) statement_decl -> . statement
    (12) statement_decl -> . decl
    (5) statement -> . expression
    (6) statement -> . block_statement
    (7) statement -> . if_then_statement
    (13) decl -> . ID COLON type Initiation
    (19) expression -> . PLUS expression
    (20) expression -> . MINUS expression
    (21) expression -> . NOT expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression EXPONENT expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULUS expression
    (28) expression -> . expression LESS expression
    (29) expression -> . expression LESS_EQ expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_EQ expression
    (32) expression -> . expression IS_EQ expression
    (33) expression -> . expression NOT_EQ expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . identifier EQUALS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . INT_LITERAL
    (40) expression -> . lvalue
    (4) block_statement -> . LBRACE statement_decl_list semicolon_opt RBRACE
    (16) if_then_statement -> . IF expression block_statement
    (17) identifier -> . ID
    (39) lvalue -> . identifier

    RBRACE          reduce using rule 3 (semicolon_opt -> SEMICOLON .)
    ID              shift and go to state 12
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 17
    INT_LITERAL     shift and go to state 18
    LBRACE          shift and go to state 3
    IF              shift and go to state 20

    statement_decl                 shift and go to state 47
    statement                      shift and go to state 7
    decl                           shift and go to state 8
    expression                     shift and go to state 9
    block_statement                shift and go to state 10
    if_then_statement              shift and go to state 11
    identifier                     shift and go to state 16
    lvalue                         shift and go to state 19

state 23

    (2) semicolon_opt -> epsilon .

    RBRACE          reduce using rule 2 (semicolon_opt -> epsilon .)


state 24

    (22) expression -> expression PLUS . expression
    (19) expression -> . PLUS expression
    (20) expression -> . MINUS expression
    (21) expression -> . NOT expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression EXPONENT expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULUS expression
    (28) expression -> . expression LESS expression
    (29) expression -> . expression LESS_EQ expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_EQ expression
    (32) expression -> . expression IS_EQ expression
    (33) expression -> . expression NOT_EQ expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . identifier EQUALS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . INT_LITERAL
    (40) expression -> . lvalue
    (17) identifier -> . ID
    (39) lvalue -> . identifier

    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 17
    INT_LITERAL     shift and go to state 18
    ID              shift and go to state 40

    expression                     shift and go to state 48
    identifier                     shift and go to state 16
    lvalue                         shift and go to state 19

state 25

    (23) expression -> expression MINUS . expression
    (19) expression -> . PLUS expression
    (20) expression -> . MINUS expression
    (21) expression -> . NOT expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression EXPONENT expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULUS expression
    (28) expression -> . expression LESS expression
    (29) expression -> . expression LESS_EQ expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_EQ expression
    (32) expression -> . expression IS_EQ expression
    (33) expression -> . expression NOT_EQ expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . identifier EQUALS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . INT_LITERAL
    (40) expression -> . lvalue
    (17) identifier -> . ID
    (39) lvalue -> . identifier

    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 17
    INT_LITERAL     shift and go to state 18
    ID              shift and go to state 40

    expression                     shift and go to state 49
    identifier                     shift and go to state 16
    lvalue                         shift and go to state 19

state 26

    (24) expression -> expression EXPONENT . expression
    (19) expression -> . PLUS expression
    (20) expression -> . MINUS expression
    (21) expression -> . NOT expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression EXPONENT expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULUS expression
    (28) expression -> . expression LESS expression
    (29) expression -> . expression LESS_EQ expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_EQ expression
    (32) expression -> . expression IS_EQ expression
    (33) expression -> . expression NOT_EQ expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . identifier EQUALS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . INT_LITERAL
    (40) expression -> . lvalue
    (17) identifier -> . ID
    (39) lvalue -> . identifier

    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 17
    INT_LITERAL     shift and go to state 18
    ID              shift and go to state 40

    expression                     shift and go to state 50
    identifier                     shift and go to state 16
    lvalue                         shift and go to state 19

state 27

    (25) expression -> expression TIMES . expression
    (19) expression -> . PLUS expression
    (20) expression -> . MINUS expression
    (21) expression -> . NOT expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression EXPONENT expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULUS expression
    (28) expression -> . expression LESS expression
    (29) expression -> . expression LESS_EQ expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_EQ expression
    (32) expression -> . expression IS_EQ expression
    (33) expression -> . expression NOT_EQ expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . identifier EQUALS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . INT_LITERAL
    (40) expression -> . lvalue
    (17) identifier -> . ID
    (39) lvalue -> . identifier

    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 17
    INT_LITERAL     shift and go to state 18
    ID              shift and go to state 40

    expression                     shift and go to state 51
    identifier                     shift and go to state 16
    lvalue                         shift and go to state 19

state 28

    (26) expression -> expression DIVIDE . expression
    (19) expression -> . PLUS expression
    (20) expression -> . MINUS expression
    (21) expression -> . NOT expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression EXPONENT expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULUS expression
    (28) expression -> . expression LESS expression
    (29) expression -> . expression LESS_EQ expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_EQ expression
    (32) expression -> . expression IS_EQ expression
    (33) expression -> . expression NOT_EQ expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . identifier EQUALS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . INT_LITERAL
    (40) expression -> . lvalue
    (17) identifier -> . ID
    (39) lvalue -> . identifier

    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 17
    INT_LITERAL     shift and go to state 18
    ID              shift and go to state 40

    expression                     shift and go to state 52
    identifier                     shift and go to state 16
    lvalue                         shift and go to state 19

state 29

    (27) expression -> expression MODULUS . expression
    (19) expression -> . PLUS expression
    (20) expression -> . MINUS expression
    (21) expression -> . NOT expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression EXPONENT expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULUS expression
    (28) expression -> . expression LESS expression
    (29) expression -> . expression LESS_EQ expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_EQ expression
    (32) expression -> . expression IS_EQ expression
    (33) expression -> . expression NOT_EQ expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . identifier EQUALS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . INT_LITERAL
    (40) expression -> . lvalue
    (17) identifier -> . ID
    (39) lvalue -> . identifier

    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 17
    INT_LITERAL     shift and go to state 18
    ID              shift and go to state 40

    expression                     shift and go to state 53
    identifier                     shift and go to state 16
    lvalue                         shift and go to state 19

state 30

    (28) expression -> expression LESS . expression
    (19) expression -> . PLUS expression
    (20) expression -> . MINUS expression
    (21) expression -> . NOT expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression EXPONENT expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULUS expression
    (28) expression -> . expression LESS expression
    (29) expression -> . expression LESS_EQ expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_EQ expression
    (32) expression -> . expression IS_EQ expression
    (33) expression -> . expression NOT_EQ expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . identifier EQUALS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . INT_LITERAL
    (40) expression -> . lvalue
    (17) identifier -> . ID
    (39) lvalue -> . identifier

    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 17
    INT_LITERAL     shift and go to state 18
    ID              shift and go to state 40

    expression                     shift and go to state 54
    identifier                     shift and go to state 16
    lvalue                         shift and go to state 19

state 31

    (29) expression -> expression LESS_EQ . expression
    (19) expression -> . PLUS expression
    (20) expression -> . MINUS expression
    (21) expression -> . NOT expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression EXPONENT expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULUS expression
    (28) expression -> . expression LESS expression
    (29) expression -> . expression LESS_EQ expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_EQ expression
    (32) expression -> . expression IS_EQ expression
    (33) expression -> . expression NOT_EQ expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . identifier EQUALS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . INT_LITERAL
    (40) expression -> . lvalue
    (17) identifier -> . ID
    (39) lvalue -> . identifier

    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 17
    INT_LITERAL     shift and go to state 18
    ID              shift and go to state 40

    expression                     shift and go to state 55
    identifier                     shift and go to state 16
    lvalue                         shift and go to state 19

state 32

    (30) expression -> expression GREATER . expression
    (19) expression -> . PLUS expression
    (20) expression -> . MINUS expression
    (21) expression -> . NOT expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression EXPONENT expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULUS expression
    (28) expression -> . expression LESS expression
    (29) expression -> . expression LESS_EQ expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_EQ expression
    (32) expression -> . expression IS_EQ expression
    (33) expression -> . expression NOT_EQ expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . identifier EQUALS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . INT_LITERAL
    (40) expression -> . lvalue
    (17) identifier -> . ID
    (39) lvalue -> . identifier

    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 17
    INT_LITERAL     shift and go to state 18
    ID              shift and go to state 40

    expression                     shift and go to state 56
    identifier                     shift and go to state 16
    lvalue                         shift and go to state 19

state 33

    (31) expression -> expression GREATER_EQ . expression
    (19) expression -> . PLUS expression
    (20) expression -> . MINUS expression
    (21) expression -> . NOT expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression EXPONENT expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULUS expression
    (28) expression -> . expression LESS expression
    (29) expression -> . expression LESS_EQ expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_EQ expression
    (32) expression -> . expression IS_EQ expression
    (33) expression -> . expression NOT_EQ expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . identifier EQUALS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . INT_LITERAL
    (40) expression -> . lvalue
    (17) identifier -> . ID
    (39) lvalue -> . identifier

    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 17
    INT_LITERAL     shift and go to state 18
    ID              shift and go to state 40

    expression                     shift and go to state 57
    identifier                     shift and go to state 16
    lvalue                         shift and go to state 19

state 34

    (32) expression -> expression IS_EQ . expression
    (19) expression -> . PLUS expression
    (20) expression -> . MINUS expression
    (21) expression -> . NOT expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression EXPONENT expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULUS expression
    (28) expression -> . expression LESS expression
    (29) expression -> . expression LESS_EQ expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_EQ expression
    (32) expression -> . expression IS_EQ expression
    (33) expression -> . expression NOT_EQ expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . identifier EQUALS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . INT_LITERAL
    (40) expression -> . lvalue
    (17) identifier -> . ID
    (39) lvalue -> . identifier

    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 17
    INT_LITERAL     shift and go to state 18
    ID              shift and go to state 40

    expression                     shift and go to state 58
    identifier                     shift and go to state 16
    lvalue                         shift and go to state 19

state 35

    (33) expression -> expression NOT_EQ . expression
    (19) expression -> . PLUS expression
    (20) expression -> . MINUS expression
    (21) expression -> . NOT expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression EXPONENT expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULUS expression
    (28) expression -> . expression LESS expression
    (29) expression -> . expression LESS_EQ expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_EQ expression
    (32) expression -> . expression IS_EQ expression
    (33) expression -> . expression NOT_EQ expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . identifier EQUALS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . INT_LITERAL
    (40) expression -> . lvalue
    (17) identifier -> . ID
    (39) lvalue -> . identifier

    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 17
    INT_LITERAL     shift and go to state 18
    ID              shift and go to state 40

    expression                     shift and go to state 59
    identifier                     shift and go to state 16
    lvalue                         shift and go to state 19

state 36

    (34) expression -> expression AND . expression
    (19) expression -> . PLUS expression
    (20) expression -> . MINUS expression
    (21) expression -> . NOT expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression EXPONENT expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULUS expression
    (28) expression -> . expression LESS expression
    (29) expression -> . expression LESS_EQ expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_EQ expression
    (32) expression -> . expression IS_EQ expression
    (33) expression -> . expression NOT_EQ expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . identifier EQUALS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . INT_LITERAL
    (40) expression -> . lvalue
    (17) identifier -> . ID
    (39) lvalue -> . identifier

    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 17
    INT_LITERAL     shift and go to state 18
    ID              shift and go to state 40

    expression                     shift and go to state 60
    identifier                     shift and go to state 16
    lvalue                         shift and go to state 19

state 37

    (35) expression -> expression OR . expression
    (19) expression -> . PLUS expression
    (20) expression -> . MINUS expression
    (21) expression -> . NOT expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression EXPONENT expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULUS expression
    (28) expression -> . expression LESS expression
    (29) expression -> . expression LESS_EQ expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_EQ expression
    (32) expression -> . expression IS_EQ expression
    (33) expression -> . expression NOT_EQ expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . identifier EQUALS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . INT_LITERAL
    (40) expression -> . lvalue
    (17) identifier -> . ID
    (39) lvalue -> . identifier

    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 17
    INT_LITERAL     shift and go to state 18
    ID              shift and go to state 40

    expression                     shift and go to state 61
    identifier                     shift and go to state 16
    lvalue                         shift and go to state 19

state 38

    (13) decl -> ID COLON . type Initiation
    (18) type -> . INT

    INT             shift and go to state 63

    type                           shift and go to state 62

state 39

    (19) expression -> PLUS expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . EXPONENT expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULUS expression
    (28) expression -> expression . LESS expression
    (29) expression -> expression . LESS_EQ expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_EQ expression
    (32) expression -> expression . IS_EQ expression
    (33) expression -> expression . NOT_EQ expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    PLUS            reduce using rule 19 (expression -> PLUS expression .)
    MINUS           reduce using rule 19 (expression -> PLUS expression .)
    EXPONENT        reduce using rule 19 (expression -> PLUS expression .)
    TIMES           reduce using rule 19 (expression -> PLUS expression .)
    DIVIDE          reduce using rule 19 (expression -> PLUS expression .)
    MODULUS         reduce using rule 19 (expression -> PLUS expression .)
    LESS            reduce using rule 19 (expression -> PLUS expression .)
    LESS_EQ         reduce using rule 19 (expression -> PLUS expression .)
    GREATER         reduce using rule 19 (expression -> PLUS expression .)
    GREATER_EQ      reduce using rule 19 (expression -> PLUS expression .)
    IS_EQ           reduce using rule 19 (expression -> PLUS expression .)
    NOT_EQ          reduce using rule 19 (expression -> PLUS expression .)
    AND             reduce using rule 19 (expression -> PLUS expression .)
    OR              reduce using rule 19 (expression -> PLUS expression .)
    SEMICOLON       reduce using rule 19 (expression -> PLUS expression .)
    RBRACE          reduce using rule 19 (expression -> PLUS expression .)
    RPAREN          reduce using rule 19 (expression -> PLUS expression .)
    LBRACE          reduce using rule 19 (expression -> PLUS expression .)

  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 25 ]
  ! EXPONENT        [ shift and go to state 26 ]
  ! TIMES           [ shift and go to state 27 ]
  ! DIVIDE          [ shift and go to state 28 ]
  ! MODULUS         [ shift and go to state 29 ]
  ! LESS            [ shift and go to state 30 ]
  ! LESS_EQ         [ shift and go to state 31 ]
  ! GREATER         [ shift and go to state 32 ]
  ! GREATER_EQ      [ shift and go to state 33 ]
  ! IS_EQ           [ shift and go to state 34 ]
  ! NOT_EQ          [ shift and go to state 35 ]
  ! AND             [ shift and go to state 36 ]
  ! OR              [ shift and go to state 37 ]


state 40

    (17) identifier -> ID .

    EQUALS          reduce using rule 17 (identifier -> ID .)
    PLUS            reduce using rule 17 (identifier -> ID .)
    MINUS           reduce using rule 17 (identifier -> ID .)
    EXPONENT        reduce using rule 17 (identifier -> ID .)
    TIMES           reduce using rule 17 (identifier -> ID .)
    DIVIDE          reduce using rule 17 (identifier -> ID .)
    MODULUS         reduce using rule 17 (identifier -> ID .)
    LESS            reduce using rule 17 (identifier -> ID .)
    LESS_EQ         reduce using rule 17 (identifier -> ID .)
    GREATER         reduce using rule 17 (identifier -> ID .)
    GREATER_EQ      reduce using rule 17 (identifier -> ID .)
    IS_EQ           reduce using rule 17 (identifier -> ID .)
    NOT_EQ          reduce using rule 17 (identifier -> ID .)
    AND             reduce using rule 17 (identifier -> ID .)
    OR              reduce using rule 17 (identifier -> ID .)
    SEMICOLON       reduce using rule 17 (identifier -> ID .)
    RBRACE          reduce using rule 17 (identifier -> ID .)
    RPAREN          reduce using rule 17 (identifier -> ID .)
    LBRACE          reduce using rule 17 (identifier -> ID .)


state 41

    (20) expression -> MINUS expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . EXPONENT expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULUS expression
    (28) expression -> expression . LESS expression
    (29) expression -> expression . LESS_EQ expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_EQ expression
    (32) expression -> expression . IS_EQ expression
    (33) expression -> expression . NOT_EQ expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    PLUS            reduce using rule 20 (expression -> MINUS expression .)
    MINUS           reduce using rule 20 (expression -> MINUS expression .)
    EXPONENT        reduce using rule 20 (expression -> MINUS expression .)
    TIMES           reduce using rule 20 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 20 (expression -> MINUS expression .)
    MODULUS         reduce using rule 20 (expression -> MINUS expression .)
    LESS            reduce using rule 20 (expression -> MINUS expression .)
    LESS_EQ         reduce using rule 20 (expression -> MINUS expression .)
    GREATER         reduce using rule 20 (expression -> MINUS expression .)
    GREATER_EQ      reduce using rule 20 (expression -> MINUS expression .)
    IS_EQ           reduce using rule 20 (expression -> MINUS expression .)
    NOT_EQ          reduce using rule 20 (expression -> MINUS expression .)
    AND             reduce using rule 20 (expression -> MINUS expression .)
    OR              reduce using rule 20 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 20 (expression -> MINUS expression .)
    RBRACE          reduce using rule 20 (expression -> MINUS expression .)
    RPAREN          reduce using rule 20 (expression -> MINUS expression .)
    LBRACE          reduce using rule 20 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 25 ]
  ! EXPONENT        [ shift and go to state 26 ]
  ! TIMES           [ shift and go to state 27 ]
  ! DIVIDE          [ shift and go to state 28 ]
  ! MODULUS         [ shift and go to state 29 ]
  ! LESS            [ shift and go to state 30 ]
  ! LESS_EQ         [ shift and go to state 31 ]
  ! GREATER         [ shift and go to state 32 ]
  ! GREATER_EQ      [ shift and go to state 33 ]
  ! IS_EQ           [ shift and go to state 34 ]
  ! NOT_EQ          [ shift and go to state 35 ]
  ! AND             [ shift and go to state 36 ]
  ! OR              [ shift and go to state 37 ]


state 42

    (21) expression -> NOT expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . EXPONENT expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULUS expression
    (28) expression -> expression . LESS expression
    (29) expression -> expression . LESS_EQ expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_EQ expression
    (32) expression -> expression . IS_EQ expression
    (33) expression -> expression . NOT_EQ expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    PLUS            reduce using rule 21 (expression -> NOT expression .)
    MINUS           reduce using rule 21 (expression -> NOT expression .)
    EXPONENT        reduce using rule 21 (expression -> NOT expression .)
    TIMES           reduce using rule 21 (expression -> NOT expression .)
    DIVIDE          reduce using rule 21 (expression -> NOT expression .)
    MODULUS         reduce using rule 21 (expression -> NOT expression .)
    LESS            reduce using rule 21 (expression -> NOT expression .)
    LESS_EQ         reduce using rule 21 (expression -> NOT expression .)
    GREATER         reduce using rule 21 (expression -> NOT expression .)
    GREATER_EQ      reduce using rule 21 (expression -> NOT expression .)
    IS_EQ           reduce using rule 21 (expression -> NOT expression .)
    NOT_EQ          reduce using rule 21 (expression -> NOT expression .)
    AND             reduce using rule 21 (expression -> NOT expression .)
    OR              reduce using rule 21 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 21 (expression -> NOT expression .)
    RBRACE          reduce using rule 21 (expression -> NOT expression .)
    RPAREN          reduce using rule 21 (expression -> NOT expression .)
    LBRACE          reduce using rule 21 (expression -> NOT expression .)

  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 25 ]
  ! EXPONENT        [ shift and go to state 26 ]
  ! TIMES           [ shift and go to state 27 ]
  ! DIVIDE          [ shift and go to state 28 ]
  ! MODULUS         [ shift and go to state 29 ]
  ! LESS            [ shift and go to state 30 ]
  ! LESS_EQ         [ shift and go to state 31 ]
  ! GREATER         [ shift and go to state 32 ]
  ! GREATER_EQ      [ shift and go to state 33 ]
  ! IS_EQ           [ shift and go to state 34 ]
  ! NOT_EQ          [ shift and go to state 35 ]
  ! AND             [ shift and go to state 36 ]
  ! OR              [ shift and go to state 37 ]


state 43

    (36) expression -> identifier EQUALS . expression
    (19) expression -> . PLUS expression
    (20) expression -> . MINUS expression
    (21) expression -> . NOT expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression EXPONENT expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULUS expression
    (28) expression -> . expression LESS expression
    (29) expression -> . expression LESS_EQ expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_EQ expression
    (32) expression -> . expression IS_EQ expression
    (33) expression -> . expression NOT_EQ expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . identifier EQUALS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . INT_LITERAL
    (40) expression -> . lvalue
    (17) identifier -> . ID
    (39) lvalue -> . identifier

    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 17
    INT_LITERAL     shift and go to state 18
    ID              shift and go to state 40

    identifier                     shift and go to state 16
    expression                     shift and go to state 64
    lvalue                         shift and go to state 19

state 44

    (37) expression -> LPAREN expression . RPAREN
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . EXPONENT expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULUS expression
    (28) expression -> expression . LESS expression
    (29) expression -> expression . LESS_EQ expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_EQ expression
    (32) expression -> expression . IS_EQ expression
    (33) expression -> expression . NOT_EQ expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    RPAREN          shift and go to state 65
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    EXPONENT        shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    MODULUS         shift and go to state 29
    LESS            shift and go to state 30
    LESS_EQ         shift and go to state 31
    GREATER         shift and go to state 32
    GREATER_EQ      shift and go to state 33
    IS_EQ           shift and go to state 34
    NOT_EQ          shift and go to state 35
    AND             shift and go to state 36
    OR              shift and go to state 37


state 45

    (16) if_then_statement -> IF expression . block_statement
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . EXPONENT expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULUS expression
    (28) expression -> expression . LESS expression
    (29) expression -> expression . LESS_EQ expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_EQ expression
    (32) expression -> expression . IS_EQ expression
    (33) expression -> expression . NOT_EQ expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression
    (4) block_statement -> . LBRACE statement_decl_list semicolon_opt RBRACE

    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    EXPONENT        shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    MODULUS         shift and go to state 29
    LESS            shift and go to state 30
    LESS_EQ         shift and go to state 31
    GREATER         shift and go to state 32
    GREATER_EQ      shift and go to state 33
    IS_EQ           shift and go to state 34
    NOT_EQ          shift and go to state 35
    AND             shift and go to state 36
    OR              shift and go to state 37
    LBRACE          shift and go to state 3

    block_statement                shift and go to state 66

state 46

    (4) block_statement -> LBRACE statement_decl_list semicolon_opt RBRACE .

    $end            reduce using rule 4 (block_statement -> LBRACE statement_decl_list semicolon_opt RBRACE .)
    SEMICOLON       reduce using rule 4 (block_statement -> LBRACE statement_decl_list semicolon_opt RBRACE .)
    RBRACE          reduce using rule 4 (block_statement -> LBRACE statement_decl_list semicolon_opt RBRACE .)


state 47

    (8) statement_decl_list -> statement_decl_list SEMICOLON statement_decl .

    SEMICOLON       reduce using rule 8 (statement_decl_list -> statement_decl_list SEMICOLON statement_decl .)
    RBRACE          reduce using rule 8 (statement_decl_list -> statement_decl_list SEMICOLON statement_decl .)


state 48

    (22) expression -> expression PLUS expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . EXPONENT expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULUS expression
    (28) expression -> expression . LESS expression
    (29) expression -> expression . LESS_EQ expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_EQ expression
    (32) expression -> expression . IS_EQ expression
    (33) expression -> expression . NOT_EQ expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    PLUS            reduce using rule 22 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 22 (expression -> expression PLUS expression .)
    LESS            reduce using rule 22 (expression -> expression PLUS expression .)
    LESS_EQ         reduce using rule 22 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 22 (expression -> expression PLUS expression .)
    GREATER_EQ      reduce using rule 22 (expression -> expression PLUS expression .)
    IS_EQ           reduce using rule 22 (expression -> expression PLUS expression .)
    NOT_EQ          reduce using rule 22 (expression -> expression PLUS expression .)
    AND             reduce using rule 22 (expression -> expression PLUS expression .)
    OR              reduce using rule 22 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 22 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 22 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 22 (expression -> expression PLUS expression .)
    LBRACE          reduce using rule 22 (expression -> expression PLUS expression .)
    EXPONENT        shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    MODULUS         shift and go to state 29

  ! EXPONENT        [ reduce using rule 22 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 22 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression PLUS expression .) ]
  ! MODULUS         [ reduce using rule 22 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 25 ]
  ! LESS            [ shift and go to state 30 ]
  ! LESS_EQ         [ shift and go to state 31 ]
  ! GREATER         [ shift and go to state 32 ]
  ! GREATER_EQ      [ shift and go to state 33 ]
  ! IS_EQ           [ shift and go to state 34 ]
  ! NOT_EQ          [ shift and go to state 35 ]
  ! AND             [ shift and go to state 36 ]
  ! OR              [ shift and go to state 37 ]


state 49

    (23) expression -> expression MINUS expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . EXPONENT expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULUS expression
    (28) expression -> expression . LESS expression
    (29) expression -> expression . LESS_EQ expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_EQ expression
    (32) expression -> expression . IS_EQ expression
    (33) expression -> expression . NOT_EQ expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    PLUS            reduce using rule 23 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 23 (expression -> expression MINUS expression .)
    LESS            reduce using rule 23 (expression -> expression MINUS expression .)
    LESS_EQ         reduce using rule 23 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 23 (expression -> expression MINUS expression .)
    GREATER_EQ      reduce using rule 23 (expression -> expression MINUS expression .)
    IS_EQ           reduce using rule 23 (expression -> expression MINUS expression .)
    NOT_EQ          reduce using rule 23 (expression -> expression MINUS expression .)
    AND             reduce using rule 23 (expression -> expression MINUS expression .)
    OR              reduce using rule 23 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 23 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 23 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 23 (expression -> expression MINUS expression .)
    LBRACE          reduce using rule 23 (expression -> expression MINUS expression .)
    EXPONENT        shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    MODULUS         shift and go to state 29

  ! EXPONENT        [ reduce using rule 23 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 23 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression MINUS expression .) ]
  ! MODULUS         [ reduce using rule 23 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 25 ]
  ! LESS            [ shift and go to state 30 ]
  ! LESS_EQ         [ shift and go to state 31 ]
  ! GREATER         [ shift and go to state 32 ]
  ! GREATER_EQ      [ shift and go to state 33 ]
  ! IS_EQ           [ shift and go to state 34 ]
  ! NOT_EQ          [ shift and go to state 35 ]
  ! AND             [ shift and go to state 36 ]
  ! OR              [ shift and go to state 37 ]


state 50

    (24) expression -> expression EXPONENT expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . EXPONENT expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULUS expression
    (28) expression -> expression . LESS expression
    (29) expression -> expression . LESS_EQ expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_EQ expression
    (32) expression -> expression . IS_EQ expression
    (33) expression -> expression . NOT_EQ expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    PLUS            reduce using rule 24 (expression -> expression EXPONENT expression .)
    MINUS           reduce using rule 24 (expression -> expression EXPONENT expression .)
    TIMES           reduce using rule 24 (expression -> expression EXPONENT expression .)
    DIVIDE          reduce using rule 24 (expression -> expression EXPONENT expression .)
    MODULUS         reduce using rule 24 (expression -> expression EXPONENT expression .)
    LESS            reduce using rule 24 (expression -> expression EXPONENT expression .)
    LESS_EQ         reduce using rule 24 (expression -> expression EXPONENT expression .)
    GREATER         reduce using rule 24 (expression -> expression EXPONENT expression .)
    GREATER_EQ      reduce using rule 24 (expression -> expression EXPONENT expression .)
    IS_EQ           reduce using rule 24 (expression -> expression EXPONENT expression .)
    NOT_EQ          reduce using rule 24 (expression -> expression EXPONENT expression .)
    AND             reduce using rule 24 (expression -> expression EXPONENT expression .)
    OR              reduce using rule 24 (expression -> expression EXPONENT expression .)
    SEMICOLON       reduce using rule 24 (expression -> expression EXPONENT expression .)
    RBRACE          reduce using rule 24 (expression -> expression EXPONENT expression .)
    RPAREN          reduce using rule 24 (expression -> expression EXPONENT expression .)
    LBRACE          reduce using rule 24 (expression -> expression EXPONENT expression .)
    EXPONENT        shift and go to state 26

  ! EXPONENT        [ reduce using rule 24 (expression -> expression EXPONENT expression .) ]
  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 25 ]
  ! TIMES           [ shift and go to state 27 ]
  ! DIVIDE          [ shift and go to state 28 ]
  ! MODULUS         [ shift and go to state 29 ]
  ! LESS            [ shift and go to state 30 ]
  ! LESS_EQ         [ shift and go to state 31 ]
  ! GREATER         [ shift and go to state 32 ]
  ! GREATER_EQ      [ shift and go to state 33 ]
  ! IS_EQ           [ shift and go to state 34 ]
  ! NOT_EQ          [ shift and go to state 35 ]
  ! AND             [ shift and go to state 36 ]
  ! OR              [ shift and go to state 37 ]


state 51

    (25) expression -> expression TIMES expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . EXPONENT expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULUS expression
    (28) expression -> expression . LESS expression
    (29) expression -> expression . LESS_EQ expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_EQ expression
    (32) expression -> expression . IS_EQ expression
    (33) expression -> expression . NOT_EQ expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    PLUS            reduce using rule 25 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 25 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 25 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 25 (expression -> expression TIMES expression .)
    MODULUS         reduce using rule 25 (expression -> expression TIMES expression .)
    LESS            reduce using rule 25 (expression -> expression TIMES expression .)
    LESS_EQ         reduce using rule 25 (expression -> expression TIMES expression .)
    GREATER         reduce using rule 25 (expression -> expression TIMES expression .)
    GREATER_EQ      reduce using rule 25 (expression -> expression TIMES expression .)
    IS_EQ           reduce using rule 25 (expression -> expression TIMES expression .)
    NOT_EQ          reduce using rule 25 (expression -> expression TIMES expression .)
    AND             reduce using rule 25 (expression -> expression TIMES expression .)
    OR              reduce using rule 25 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 25 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 25 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 25 (expression -> expression TIMES expression .)
    LBRACE          reduce using rule 25 (expression -> expression TIMES expression .)
    EXPONENT        shift and go to state 26

  ! EXPONENT        [ reduce using rule 25 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 25 ]
  ! TIMES           [ shift and go to state 27 ]
  ! DIVIDE          [ shift and go to state 28 ]
  ! MODULUS         [ shift and go to state 29 ]
  ! LESS            [ shift and go to state 30 ]
  ! LESS_EQ         [ shift and go to state 31 ]
  ! GREATER         [ shift and go to state 32 ]
  ! GREATER_EQ      [ shift and go to state 33 ]
  ! IS_EQ           [ shift and go to state 34 ]
  ! NOT_EQ          [ shift and go to state 35 ]
  ! AND             [ shift and go to state 36 ]
  ! OR              [ shift and go to state 37 ]


state 52

    (26) expression -> expression DIVIDE expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . EXPONENT expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULUS expression
    (28) expression -> expression . LESS expression
    (29) expression -> expression . LESS_EQ expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_EQ expression
    (32) expression -> expression . IS_EQ expression
    (33) expression -> expression . NOT_EQ expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    PLUS            reduce using rule 26 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 26 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 26 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 26 (expression -> expression DIVIDE expression .)
    MODULUS         reduce using rule 26 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 26 (expression -> expression DIVIDE expression .)
    LESS_EQ         reduce using rule 26 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 26 (expression -> expression DIVIDE expression .)
    GREATER_EQ      reduce using rule 26 (expression -> expression DIVIDE expression .)
    IS_EQ           reduce using rule 26 (expression -> expression DIVIDE expression .)
    NOT_EQ          reduce using rule 26 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 26 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 26 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 26 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 26 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 26 (expression -> expression DIVIDE expression .)
    LBRACE          reduce using rule 26 (expression -> expression DIVIDE expression .)
    EXPONENT        shift and go to state 26

  ! EXPONENT        [ reduce using rule 26 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 25 ]
  ! TIMES           [ shift and go to state 27 ]
  ! DIVIDE          [ shift and go to state 28 ]
  ! MODULUS         [ shift and go to state 29 ]
  ! LESS            [ shift and go to state 30 ]
  ! LESS_EQ         [ shift and go to state 31 ]
  ! GREATER         [ shift and go to state 32 ]
  ! GREATER_EQ      [ shift and go to state 33 ]
  ! IS_EQ           [ shift and go to state 34 ]
  ! NOT_EQ          [ shift and go to state 35 ]
  ! AND             [ shift and go to state 36 ]
  ! OR              [ shift and go to state 37 ]


state 53

    (27) expression -> expression MODULUS expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . EXPONENT expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULUS expression
    (28) expression -> expression . LESS expression
    (29) expression -> expression . LESS_EQ expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_EQ expression
    (32) expression -> expression . IS_EQ expression
    (33) expression -> expression . NOT_EQ expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    PLUS            reduce using rule 27 (expression -> expression MODULUS expression .)
    MINUS           reduce using rule 27 (expression -> expression MODULUS expression .)
    TIMES           reduce using rule 27 (expression -> expression MODULUS expression .)
    DIVIDE          reduce using rule 27 (expression -> expression MODULUS expression .)
    MODULUS         reduce using rule 27 (expression -> expression MODULUS expression .)
    LESS            reduce using rule 27 (expression -> expression MODULUS expression .)
    LESS_EQ         reduce using rule 27 (expression -> expression MODULUS expression .)
    GREATER         reduce using rule 27 (expression -> expression MODULUS expression .)
    GREATER_EQ      reduce using rule 27 (expression -> expression MODULUS expression .)
    IS_EQ           reduce using rule 27 (expression -> expression MODULUS expression .)
    NOT_EQ          reduce using rule 27 (expression -> expression MODULUS expression .)
    AND             reduce using rule 27 (expression -> expression MODULUS expression .)
    OR              reduce using rule 27 (expression -> expression MODULUS expression .)
    SEMICOLON       reduce using rule 27 (expression -> expression MODULUS expression .)
    RBRACE          reduce using rule 27 (expression -> expression MODULUS expression .)
    RPAREN          reduce using rule 27 (expression -> expression MODULUS expression .)
    LBRACE          reduce using rule 27 (expression -> expression MODULUS expression .)
    EXPONENT        shift and go to state 26

  ! EXPONENT        [ reduce using rule 27 (expression -> expression MODULUS expression .) ]
  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 25 ]
  ! TIMES           [ shift and go to state 27 ]
  ! DIVIDE          [ shift and go to state 28 ]
  ! MODULUS         [ shift and go to state 29 ]
  ! LESS            [ shift and go to state 30 ]
  ! LESS_EQ         [ shift and go to state 31 ]
  ! GREATER         [ shift and go to state 32 ]
  ! GREATER_EQ      [ shift and go to state 33 ]
  ! IS_EQ           [ shift and go to state 34 ]
  ! NOT_EQ          [ shift and go to state 35 ]
  ! AND             [ shift and go to state 36 ]
  ! OR              [ shift and go to state 37 ]


state 54

    (28) expression -> expression LESS expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . EXPONENT expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULUS expression
    (28) expression -> expression . LESS expression
    (29) expression -> expression . LESS_EQ expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_EQ expression
    (32) expression -> expression . IS_EQ expression
    (33) expression -> expression . NOT_EQ expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    LESS            reduce using rule 28 (expression -> expression LESS expression .)
    LESS_EQ         reduce using rule 28 (expression -> expression LESS expression .)
    GREATER         reduce using rule 28 (expression -> expression LESS expression .)
    GREATER_EQ      reduce using rule 28 (expression -> expression LESS expression .)
    IS_EQ           reduce using rule 28 (expression -> expression LESS expression .)
    NOT_EQ          reduce using rule 28 (expression -> expression LESS expression .)
    AND             reduce using rule 28 (expression -> expression LESS expression .)
    OR              reduce using rule 28 (expression -> expression LESS expression .)
    SEMICOLON       reduce using rule 28 (expression -> expression LESS expression .)
    RBRACE          reduce using rule 28 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 28 (expression -> expression LESS expression .)
    LBRACE          reduce using rule 28 (expression -> expression LESS expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    EXPONENT        shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    MODULUS         shift and go to state 29

  ! PLUS            [ reduce using rule 28 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression LESS expression .) ]
  ! EXPONENT        [ reduce using rule 28 (expression -> expression LESS expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression LESS expression .) ]
  ! MODULUS         [ reduce using rule 28 (expression -> expression LESS expression .) ]
  ! LESS            [ shift and go to state 30 ]
  ! LESS_EQ         [ shift and go to state 31 ]
  ! GREATER         [ shift and go to state 32 ]
  ! GREATER_EQ      [ shift and go to state 33 ]
  ! IS_EQ           [ shift and go to state 34 ]
  ! NOT_EQ          [ shift and go to state 35 ]
  ! AND             [ shift and go to state 36 ]
  ! OR              [ shift and go to state 37 ]


state 55

    (29) expression -> expression LESS_EQ expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . EXPONENT expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULUS expression
    (28) expression -> expression . LESS expression
    (29) expression -> expression . LESS_EQ expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_EQ expression
    (32) expression -> expression . IS_EQ expression
    (33) expression -> expression . NOT_EQ expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    LESS            reduce using rule 29 (expression -> expression LESS_EQ expression .)
    LESS_EQ         reduce using rule 29 (expression -> expression LESS_EQ expression .)
    GREATER         reduce using rule 29 (expression -> expression LESS_EQ expression .)
    GREATER_EQ      reduce using rule 29 (expression -> expression LESS_EQ expression .)
    IS_EQ           reduce using rule 29 (expression -> expression LESS_EQ expression .)
    NOT_EQ          reduce using rule 29 (expression -> expression LESS_EQ expression .)
    AND             reduce using rule 29 (expression -> expression LESS_EQ expression .)
    OR              reduce using rule 29 (expression -> expression LESS_EQ expression .)
    SEMICOLON       reduce using rule 29 (expression -> expression LESS_EQ expression .)
    RBRACE          reduce using rule 29 (expression -> expression LESS_EQ expression .)
    RPAREN          reduce using rule 29 (expression -> expression LESS_EQ expression .)
    LBRACE          reduce using rule 29 (expression -> expression LESS_EQ expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    EXPONENT        shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    MODULUS         shift and go to state 29

  ! PLUS            [ reduce using rule 29 (expression -> expression LESS_EQ expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression LESS_EQ expression .) ]
  ! EXPONENT        [ reduce using rule 29 (expression -> expression LESS_EQ expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression LESS_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression LESS_EQ expression .) ]
  ! MODULUS         [ reduce using rule 29 (expression -> expression LESS_EQ expression .) ]
  ! LESS            [ shift and go to state 30 ]
  ! LESS_EQ         [ shift and go to state 31 ]
  ! GREATER         [ shift and go to state 32 ]
  ! GREATER_EQ      [ shift and go to state 33 ]
  ! IS_EQ           [ shift and go to state 34 ]
  ! NOT_EQ          [ shift and go to state 35 ]
  ! AND             [ shift and go to state 36 ]
  ! OR              [ shift and go to state 37 ]


state 56

    (30) expression -> expression GREATER expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . EXPONENT expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULUS expression
    (28) expression -> expression . LESS expression
    (29) expression -> expression . LESS_EQ expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_EQ expression
    (32) expression -> expression . IS_EQ expression
    (33) expression -> expression . NOT_EQ expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    LESS            reduce using rule 30 (expression -> expression GREATER expression .)
    LESS_EQ         reduce using rule 30 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 30 (expression -> expression GREATER expression .)
    GREATER_EQ      reduce using rule 30 (expression -> expression GREATER expression .)
    IS_EQ           reduce using rule 30 (expression -> expression GREATER expression .)
    NOT_EQ          reduce using rule 30 (expression -> expression GREATER expression .)
    AND             reduce using rule 30 (expression -> expression GREATER expression .)
    OR              reduce using rule 30 (expression -> expression GREATER expression .)
    SEMICOLON       reduce using rule 30 (expression -> expression GREATER expression .)
    RBRACE          reduce using rule 30 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 30 (expression -> expression GREATER expression .)
    LBRACE          reduce using rule 30 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    EXPONENT        shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    MODULUS         shift and go to state 29

  ! PLUS            [ reduce using rule 30 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression GREATER expression .) ]
  ! EXPONENT        [ reduce using rule 30 (expression -> expression GREATER expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression GREATER expression .) ]
  ! MODULUS         [ reduce using rule 30 (expression -> expression GREATER expression .) ]
  ! LESS            [ shift and go to state 30 ]
  ! LESS_EQ         [ shift and go to state 31 ]
  ! GREATER         [ shift and go to state 32 ]
  ! GREATER_EQ      [ shift and go to state 33 ]
  ! IS_EQ           [ shift and go to state 34 ]
  ! NOT_EQ          [ shift and go to state 35 ]
  ! AND             [ shift and go to state 36 ]
  ! OR              [ shift and go to state 37 ]


state 57

    (31) expression -> expression GREATER_EQ expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . EXPONENT expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULUS expression
    (28) expression -> expression . LESS expression
    (29) expression -> expression . LESS_EQ expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_EQ expression
    (32) expression -> expression . IS_EQ expression
    (33) expression -> expression . NOT_EQ expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    LESS            reduce using rule 31 (expression -> expression GREATER_EQ expression .)
    LESS_EQ         reduce using rule 31 (expression -> expression GREATER_EQ expression .)
    GREATER         reduce using rule 31 (expression -> expression GREATER_EQ expression .)
    GREATER_EQ      reduce using rule 31 (expression -> expression GREATER_EQ expression .)
    IS_EQ           reduce using rule 31 (expression -> expression GREATER_EQ expression .)
    NOT_EQ          reduce using rule 31 (expression -> expression GREATER_EQ expression .)
    AND             reduce using rule 31 (expression -> expression GREATER_EQ expression .)
    OR              reduce using rule 31 (expression -> expression GREATER_EQ expression .)
    SEMICOLON       reduce using rule 31 (expression -> expression GREATER_EQ expression .)
    RBRACE          reduce using rule 31 (expression -> expression GREATER_EQ expression .)
    RPAREN          reduce using rule 31 (expression -> expression GREATER_EQ expression .)
    LBRACE          reduce using rule 31 (expression -> expression GREATER_EQ expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    EXPONENT        shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    MODULUS         shift and go to state 29

  ! PLUS            [ reduce using rule 31 (expression -> expression GREATER_EQ expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression GREATER_EQ expression .) ]
  ! EXPONENT        [ reduce using rule 31 (expression -> expression GREATER_EQ expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression GREATER_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression GREATER_EQ expression .) ]
  ! MODULUS         [ reduce using rule 31 (expression -> expression GREATER_EQ expression .) ]
  ! LESS            [ shift and go to state 30 ]
  ! LESS_EQ         [ shift and go to state 31 ]
  ! GREATER         [ shift and go to state 32 ]
  ! GREATER_EQ      [ shift and go to state 33 ]
  ! IS_EQ           [ shift and go to state 34 ]
  ! NOT_EQ          [ shift and go to state 35 ]
  ! AND             [ shift and go to state 36 ]
  ! OR              [ shift and go to state 37 ]


state 58

    (32) expression -> expression IS_EQ expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . EXPONENT expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULUS expression
    (28) expression -> expression . LESS expression
    (29) expression -> expression . LESS_EQ expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_EQ expression
    (32) expression -> expression . IS_EQ expression
    (33) expression -> expression . NOT_EQ expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    IS_EQ           reduce using rule 32 (expression -> expression IS_EQ expression .)
    NOT_EQ          reduce using rule 32 (expression -> expression IS_EQ expression .)
    AND             reduce using rule 32 (expression -> expression IS_EQ expression .)
    OR              reduce using rule 32 (expression -> expression IS_EQ expression .)
    SEMICOLON       reduce using rule 32 (expression -> expression IS_EQ expression .)
    RBRACE          reduce using rule 32 (expression -> expression IS_EQ expression .)
    RPAREN          reduce using rule 32 (expression -> expression IS_EQ expression .)
    LBRACE          reduce using rule 32 (expression -> expression IS_EQ expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    EXPONENT        shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    MODULUS         shift and go to state 29
    LESS            shift and go to state 30
    LESS_EQ         shift and go to state 31
    GREATER         shift and go to state 32
    GREATER_EQ      shift and go to state 33

  ! PLUS            [ reduce using rule 32 (expression -> expression IS_EQ expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression IS_EQ expression .) ]
  ! EXPONENT        [ reduce using rule 32 (expression -> expression IS_EQ expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression IS_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression IS_EQ expression .) ]
  ! MODULUS         [ reduce using rule 32 (expression -> expression IS_EQ expression .) ]
  ! LESS            [ reduce using rule 32 (expression -> expression IS_EQ expression .) ]
  ! LESS_EQ         [ reduce using rule 32 (expression -> expression IS_EQ expression .) ]
  ! GREATER         [ reduce using rule 32 (expression -> expression IS_EQ expression .) ]
  ! GREATER_EQ      [ reduce using rule 32 (expression -> expression IS_EQ expression .) ]
  ! IS_EQ           [ shift and go to state 34 ]
  ! NOT_EQ          [ shift and go to state 35 ]
  ! AND             [ shift and go to state 36 ]
  ! OR              [ shift and go to state 37 ]


state 59

    (33) expression -> expression NOT_EQ expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . EXPONENT expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULUS expression
    (28) expression -> expression . LESS expression
    (29) expression -> expression . LESS_EQ expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_EQ expression
    (32) expression -> expression . IS_EQ expression
    (33) expression -> expression . NOT_EQ expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    IS_EQ           reduce using rule 33 (expression -> expression NOT_EQ expression .)
    NOT_EQ          reduce using rule 33 (expression -> expression NOT_EQ expression .)
    AND             reduce using rule 33 (expression -> expression NOT_EQ expression .)
    OR              reduce using rule 33 (expression -> expression NOT_EQ expression .)
    SEMICOLON       reduce using rule 33 (expression -> expression NOT_EQ expression .)
    RBRACE          reduce using rule 33 (expression -> expression NOT_EQ expression .)
    RPAREN          reduce using rule 33 (expression -> expression NOT_EQ expression .)
    LBRACE          reduce using rule 33 (expression -> expression NOT_EQ expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    EXPONENT        shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    MODULUS         shift and go to state 29
    LESS            shift and go to state 30
    LESS_EQ         shift and go to state 31
    GREATER         shift and go to state 32
    GREATER_EQ      shift and go to state 33

  ! PLUS            [ reduce using rule 33 (expression -> expression NOT_EQ expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression NOT_EQ expression .) ]
  ! EXPONENT        [ reduce using rule 33 (expression -> expression NOT_EQ expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression NOT_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression NOT_EQ expression .) ]
  ! MODULUS         [ reduce using rule 33 (expression -> expression NOT_EQ expression .) ]
  ! LESS            [ reduce using rule 33 (expression -> expression NOT_EQ expression .) ]
  ! LESS_EQ         [ reduce using rule 33 (expression -> expression NOT_EQ expression .) ]
  ! GREATER         [ reduce using rule 33 (expression -> expression NOT_EQ expression .) ]
  ! GREATER_EQ      [ reduce using rule 33 (expression -> expression NOT_EQ expression .) ]
  ! IS_EQ           [ shift and go to state 34 ]
  ! NOT_EQ          [ shift and go to state 35 ]
  ! AND             [ shift and go to state 36 ]
  ! OR              [ shift and go to state 37 ]


state 60

    (34) expression -> expression AND expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . EXPONENT expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULUS expression
    (28) expression -> expression . LESS expression
    (29) expression -> expression . LESS_EQ expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_EQ expression
    (32) expression -> expression . IS_EQ expression
    (33) expression -> expression . NOT_EQ expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    AND             reduce using rule 34 (expression -> expression AND expression .)
    OR              reduce using rule 34 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 34 (expression -> expression AND expression .)
    RBRACE          reduce using rule 34 (expression -> expression AND expression .)
    RPAREN          reduce using rule 34 (expression -> expression AND expression .)
    LBRACE          reduce using rule 34 (expression -> expression AND expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    EXPONENT        shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    MODULUS         shift and go to state 29
    LESS            shift and go to state 30
    LESS_EQ         shift and go to state 31
    GREATER         shift and go to state 32
    GREATER_EQ      shift and go to state 33
    IS_EQ           shift and go to state 34
    NOT_EQ          shift and go to state 35

  ! PLUS            [ reduce using rule 34 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression AND expression .) ]
  ! EXPONENT        [ reduce using rule 34 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression AND expression .) ]
  ! MODULUS         [ reduce using rule 34 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 34 (expression -> expression AND expression .) ]
  ! LESS_EQ         [ reduce using rule 34 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 34 (expression -> expression AND expression .) ]
  ! GREATER_EQ      [ reduce using rule 34 (expression -> expression AND expression .) ]
  ! IS_EQ           [ reduce using rule 34 (expression -> expression AND expression .) ]
  ! NOT_EQ          [ reduce using rule 34 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 36 ]
  ! OR              [ shift and go to state 37 ]


state 61

    (35) expression -> expression OR expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . EXPONENT expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULUS expression
    (28) expression -> expression . LESS expression
    (29) expression -> expression . LESS_EQ expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_EQ expression
    (32) expression -> expression . IS_EQ expression
    (33) expression -> expression . NOT_EQ expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    OR              reduce using rule 35 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 35 (expression -> expression OR expression .)
    RBRACE          reduce using rule 35 (expression -> expression OR expression .)
    RPAREN          reduce using rule 35 (expression -> expression OR expression .)
    LBRACE          reduce using rule 35 (expression -> expression OR expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    EXPONENT        shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    MODULUS         shift and go to state 29
    LESS            shift and go to state 30
    LESS_EQ         shift and go to state 31
    GREATER         shift and go to state 32
    GREATER_EQ      shift and go to state 33
    IS_EQ           shift and go to state 34
    NOT_EQ          shift and go to state 35
    AND             shift and go to state 36

  ! PLUS            [ reduce using rule 35 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression OR expression .) ]
  ! EXPONENT        [ reduce using rule 35 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression OR expression .) ]
  ! MODULUS         [ reduce using rule 35 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 35 (expression -> expression OR expression .) ]
  ! LESS_EQ         [ reduce using rule 35 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 35 (expression -> expression OR expression .) ]
  ! GREATER_EQ      [ reduce using rule 35 (expression -> expression OR expression .) ]
  ! IS_EQ           [ reduce using rule 35 (expression -> expression OR expression .) ]
  ! NOT_EQ          [ reduce using rule 35 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 35 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 37 ]


state 62

    (13) decl -> ID COLON type . Initiation
    (14) Initiation -> . EQUALS expression
    (15) Initiation -> . epsilon
    (41) epsilon -> .

    EQUALS          shift and go to state 68
    SEMICOLON       reduce using rule 41 (epsilon -> .)
    RBRACE          reduce using rule 41 (epsilon -> .)

    Initiation                     shift and go to state 67
    epsilon                        shift and go to state 69

state 63

    (18) type -> INT .

    EQUALS          reduce using rule 18 (type -> INT .)
    SEMICOLON       reduce using rule 18 (type -> INT .)
    RBRACE          reduce using rule 18 (type -> INT .)


state 64

    (36) expression -> identifier EQUALS expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . EXPONENT expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULUS expression
    (28) expression -> expression . LESS expression
    (29) expression -> expression . LESS_EQ expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_EQ expression
    (32) expression -> expression . IS_EQ expression
    (33) expression -> expression . NOT_EQ expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    SEMICOLON       reduce using rule 36 (expression -> identifier EQUALS expression .)
    RBRACE          reduce using rule 36 (expression -> identifier EQUALS expression .)
    RPAREN          reduce using rule 36 (expression -> identifier EQUALS expression .)
    LBRACE          reduce using rule 36 (expression -> identifier EQUALS expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    EXPONENT        shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    MODULUS         shift and go to state 29
    LESS            shift and go to state 30
    LESS_EQ         shift and go to state 31
    GREATER         shift and go to state 32
    GREATER_EQ      shift and go to state 33
    IS_EQ           shift and go to state 34
    NOT_EQ          shift and go to state 35
    AND             shift and go to state 36
    OR              shift and go to state 37

  ! PLUS            [ reduce using rule 36 (expression -> identifier EQUALS expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> identifier EQUALS expression .) ]
  ! EXPONENT        [ reduce using rule 36 (expression -> identifier EQUALS expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> identifier EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> identifier EQUALS expression .) ]
  ! MODULUS         [ reduce using rule 36 (expression -> identifier EQUALS expression .) ]
  ! LESS            [ reduce using rule 36 (expression -> identifier EQUALS expression .) ]
  ! LESS_EQ         [ reduce using rule 36 (expression -> identifier EQUALS expression .) ]
  ! GREATER         [ reduce using rule 36 (expression -> identifier EQUALS expression .) ]
  ! GREATER_EQ      [ reduce using rule 36 (expression -> identifier EQUALS expression .) ]
  ! IS_EQ           [ reduce using rule 36 (expression -> identifier EQUALS expression .) ]
  ! NOT_EQ          [ reduce using rule 36 (expression -> identifier EQUALS expression .) ]
  ! AND             [ reduce using rule 36 (expression -> identifier EQUALS expression .) ]
  ! OR              [ reduce using rule 36 (expression -> identifier EQUALS expression .) ]


state 65

    (37) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    EXPONENT        reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    MODULUS         reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    LESS_EQ         reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    GREATER_EQ      reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    IS_EQ           reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    NOT_EQ          reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 37 (expression -> LPAREN expression RPAREN .)


state 66

    (16) if_then_statement -> IF expression block_statement .

    SEMICOLON       reduce using rule 16 (if_then_statement -> IF expression block_statement .)
    RBRACE          reduce using rule 16 (if_then_statement -> IF expression block_statement .)


state 67

    (13) decl -> ID COLON type Initiation .

    SEMICOLON       reduce using rule 13 (decl -> ID COLON type Initiation .)
    RBRACE          reduce using rule 13 (decl -> ID COLON type Initiation .)


state 68

    (14) Initiation -> EQUALS . expression
    (19) expression -> . PLUS expression
    (20) expression -> . MINUS expression
    (21) expression -> . NOT expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression EXPONENT expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULUS expression
    (28) expression -> . expression LESS expression
    (29) expression -> . expression LESS_EQ expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_EQ expression
    (32) expression -> . expression IS_EQ expression
    (33) expression -> . expression NOT_EQ expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . identifier EQUALS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . INT_LITERAL
    (40) expression -> . lvalue
    (17) identifier -> . ID
    (39) lvalue -> . identifier

    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 17
    INT_LITERAL     shift and go to state 18
    ID              shift and go to state 40

    expression                     shift and go to state 70
    identifier                     shift and go to state 16
    lvalue                         shift and go to state 19

state 69

    (15) Initiation -> epsilon .

    SEMICOLON       reduce using rule 15 (Initiation -> epsilon .)
    RBRACE          reduce using rule 15 (Initiation -> epsilon .)


state 70

    (14) Initiation -> EQUALS expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . EXPONENT expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULUS expression
    (28) expression -> expression . LESS expression
    (29) expression -> expression . LESS_EQ expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_EQ expression
    (32) expression -> expression . IS_EQ expression
    (33) expression -> expression . NOT_EQ expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    SEMICOLON       reduce using rule 14 (Initiation -> EQUALS expression .)
    RBRACE          reduce using rule 14 (Initiation -> EQUALS expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    EXPONENT        shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    MODULUS         shift and go to state 29
    LESS            shift and go to state 30
    LESS_EQ         shift and go to state 31
    GREATER         shift and go to state 32
    GREATER_EQ      shift and go to state 33
    IS_EQ           shift and go to state 34
    NOT_EQ          shift and go to state 35
    AND             shift and go to state 36
    OR              shift and go to state 37

