Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> block_statement
Rule 2     semicolon_opt -> epsilon
Rule 3     semicolon_opt -> SEMICOLON
Rule 4     block_statement -> LBRACE statement_decl_list semicolon_opt RBRACE
Rule 5     statement -> expression
Rule 6     statement -> block_statement
Rule 7     statement -> if_then_statement
Rule 8     statement -> while_statement
Rule 9     statement_decl_list -> statement_decl_list SEMICOLON statement_decl
Rule 10    statement_decl_list -> statement_decl
Rule 11    statement_decl_list -> epsilon
Rule 12    statement_decl -> statement
Rule 13    statement_decl -> decl
Rule 14    decl -> ID COLON type Initiation
Rule 15    Initiation -> EQUALS expression
Rule 16    Initiation -> epsilon
Rule 17    if_then_statement -> IF expression block_statement
Rule 18    if_then_statement -> IF expression block_statement ELSE block_statement
Rule 19    while_statement -> WHILE expression block_statement
Rule 20    identifier -> ID
Rule 21    type -> INT
Rule 22    expression -> PLUS expression
Rule 23    expression -> MINUS expression
Rule 24    expression -> NOT expression
Rule 25    expression -> expression PLUS expression
Rule 26    expression -> expression MINUS expression
Rule 27    expression -> expression EXPONENT expression
Rule 28    expression -> expression TIMES expression
Rule 29    expression -> expression DIVIDE expression
Rule 30    expression -> expression MODULUS expression
Rule 31    expression -> expression LESS expression
Rule 32    expression -> expression LESS_EQ expression
Rule 33    expression -> expression GREATER expression
Rule 34    expression -> expression GREATER_EQ expression
Rule 35    expression -> expression IS_EQ expression
Rule 36    expression -> expression NOT_EQ expression
Rule 37    expression -> expression AND expression
Rule 38    expression -> expression OR expression
Rule 39    expression -> lvalue EQUALS expression
Rule 40    expression -> LPAREN expression RPAREN
Rule 41    expression -> INT_LITERAL
Rule 42    lvalue -> identifier
Rule 43    expression -> lvalue
Rule 44    epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 37
COLON                : 14
DIVIDE               : 29
ELSE                 : 18
EQUALS               : 15 39
EXPONENT             : 27
GREATER              : 33
GREATER_EQ           : 34
ID                   : 14 20
IF                   : 17 18
INT                  : 21
INT_LITERAL          : 41
IS_EQ                : 35
LBRACE               : 4
LESS                 : 31
LESS_EQ              : 32
LPAREN               : 40
MINUS                : 23 26
MODULUS              : 30
NOT                  : 24
NOT_EQ               : 36
OR                   : 38
PLUS                 : 22 25
RBRACE               : 4
RPAREN               : 40
SEMICOLON            : 3 9
TIMES                : 28
WHILE                : 19
error                : 

Nonterminals, with rules where they appear

Initiation           : 14
block_statement      : 1 6 17 18 18 19
decl                 : 13
epsilon              : 2 11 16
expression           : 5 15 17 18 19 22 23 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 40
identifier           : 42
if_then_statement    : 7
lvalue               : 39 43
program              : 0
semicolon_opt        : 4
statement            : 12
statement_decl       : 9 10
statement_decl_list  : 4 9
type                 : 14
while_statement      : 8

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . block_statement
    (4) block_statement -> . LBRACE statement_decl_list semicolon_opt RBRACE

    LBRACE          shift and go to state 3

    program                        shift and go to state 1
    block_statement                shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> block_statement .

    $end            reduce using rule 1 (program -> block_statement .)


state 3

    (4) block_statement -> LBRACE . statement_decl_list semicolon_opt RBRACE
    (9) statement_decl_list -> . statement_decl_list SEMICOLON statement_decl
    (10) statement_decl_list -> . statement_decl
    (11) statement_decl_list -> . epsilon
    (12) statement_decl -> . statement
    (13) statement_decl -> . decl
    (44) epsilon -> .
    (5) statement -> . expression
    (6) statement -> . block_statement
    (7) statement -> . if_then_statement
    (8) statement -> . while_statement
    (14) decl -> . ID COLON type Initiation
    (22) expression -> . PLUS expression
    (23) expression -> . MINUS expression
    (24) expression -> . NOT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression MODULUS expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression LESS_EQ expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression GREATER_EQ expression
    (35) expression -> . expression IS_EQ expression
    (36) expression -> . expression NOT_EQ expression
    (37) expression -> . expression AND expression
    (38) expression -> . expression OR expression
    (39) expression -> . lvalue EQUALS expression
    (40) expression -> . LPAREN expression RPAREN
    (41) expression -> . INT_LITERAL
    (43) expression -> . lvalue
    (4) block_statement -> . LBRACE statement_decl_list semicolon_opt RBRACE
    (17) if_then_statement -> . IF expression block_statement
    (18) if_then_statement -> . IF expression block_statement ELSE block_statement
    (19) while_statement -> . WHILE expression block_statement
    (42) lvalue -> . identifier
    (20) identifier -> . ID

    SEMICOLON       reduce using rule 44 (epsilon -> .)
    RBRACE          reduce using rule 44 (epsilon -> .)
    ID              shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    NOT             shift and go to state 16
    LPAREN          shift and go to state 18
    INT_LITERAL     shift and go to state 19
    LBRACE          shift and go to state 3
    IF              shift and go to state 20
    WHILE           shift and go to state 21

    statement_decl_list            shift and go to state 4
    statement_decl                 shift and go to state 5
    epsilon                        shift and go to state 6
    statement                      shift and go to state 7
    decl                           shift and go to state 8
    expression                     shift and go to state 9
    block_statement                shift and go to state 10
    if_then_statement              shift and go to state 11
    while_statement                shift and go to state 12
    lvalue                         shift and go to state 17
    identifier                     shift and go to state 22

state 4

    (4) block_statement -> LBRACE statement_decl_list . semicolon_opt RBRACE
    (9) statement_decl_list -> statement_decl_list . SEMICOLON statement_decl
    (2) semicolon_opt -> . epsilon
    (3) semicolon_opt -> . SEMICOLON
    (44) epsilon -> .

    SEMICOLON       shift and go to state 24
    RBRACE          reduce using rule 44 (epsilon -> .)

    semicolon_opt                  shift and go to state 23
    epsilon                        shift and go to state 25

state 5

    (10) statement_decl_list -> statement_decl .

    SEMICOLON       reduce using rule 10 (statement_decl_list -> statement_decl .)
    RBRACE          reduce using rule 10 (statement_decl_list -> statement_decl .)


state 6

    (11) statement_decl_list -> epsilon .

    SEMICOLON       reduce using rule 11 (statement_decl_list -> epsilon .)
    RBRACE          reduce using rule 11 (statement_decl_list -> epsilon .)


state 7

    (12) statement_decl -> statement .

    SEMICOLON       reduce using rule 12 (statement_decl -> statement .)
    RBRACE          reduce using rule 12 (statement_decl -> statement .)


state 8

    (13) statement_decl -> decl .

    SEMICOLON       reduce using rule 13 (statement_decl -> decl .)
    RBRACE          reduce using rule 13 (statement_decl -> decl .)


state 9

    (5) statement -> expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . MODULUS expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . LESS_EQ expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . GREATER_EQ expression
    (35) expression -> expression . IS_EQ expression
    (36) expression -> expression . NOT_EQ expression
    (37) expression -> expression . AND expression
    (38) expression -> expression . OR expression

    SEMICOLON       reduce using rule 5 (statement -> expression .)
    RBRACE          reduce using rule 5 (statement -> expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    EXPONENT        shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULUS         shift and go to state 31
    LESS            shift and go to state 32
    LESS_EQ         shift and go to state 33
    GREATER         shift and go to state 34
    GREATER_EQ      shift and go to state 35
    IS_EQ           shift and go to state 36
    NOT_EQ          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39


state 10

    (6) statement -> block_statement .

    SEMICOLON       reduce using rule 6 (statement -> block_statement .)
    RBRACE          reduce using rule 6 (statement -> block_statement .)


state 11

    (7) statement -> if_then_statement .

    SEMICOLON       reduce using rule 7 (statement -> if_then_statement .)
    RBRACE          reduce using rule 7 (statement -> if_then_statement .)


state 12

    (8) statement -> while_statement .

    SEMICOLON       reduce using rule 8 (statement -> while_statement .)
    RBRACE          reduce using rule 8 (statement -> while_statement .)


state 13

    (14) decl -> ID . COLON type Initiation
    (20) identifier -> ID .

    COLON           shift and go to state 40
    EQUALS          reduce using rule 20 (identifier -> ID .)
    PLUS            reduce using rule 20 (identifier -> ID .)
    MINUS           reduce using rule 20 (identifier -> ID .)
    EXPONENT        reduce using rule 20 (identifier -> ID .)
    TIMES           reduce using rule 20 (identifier -> ID .)
    DIVIDE          reduce using rule 20 (identifier -> ID .)
    MODULUS         reduce using rule 20 (identifier -> ID .)
    LESS            reduce using rule 20 (identifier -> ID .)
    LESS_EQ         reduce using rule 20 (identifier -> ID .)
    GREATER         reduce using rule 20 (identifier -> ID .)
    GREATER_EQ      reduce using rule 20 (identifier -> ID .)
    IS_EQ           reduce using rule 20 (identifier -> ID .)
    NOT_EQ          reduce using rule 20 (identifier -> ID .)
    AND             reduce using rule 20 (identifier -> ID .)
    OR              reduce using rule 20 (identifier -> ID .)
    SEMICOLON       reduce using rule 20 (identifier -> ID .)
    RBRACE          reduce using rule 20 (identifier -> ID .)


state 14

    (22) expression -> PLUS . expression
    (22) expression -> . PLUS expression
    (23) expression -> . MINUS expression
    (24) expression -> . NOT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression MODULUS expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression LESS_EQ expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression GREATER_EQ expression
    (35) expression -> . expression IS_EQ expression
    (36) expression -> . expression NOT_EQ expression
    (37) expression -> . expression AND expression
    (38) expression -> . expression OR expression
    (39) expression -> . lvalue EQUALS expression
    (40) expression -> . LPAREN expression RPAREN
    (41) expression -> . INT_LITERAL
    (43) expression -> . lvalue
    (42) lvalue -> . identifier
    (20) identifier -> . ID

    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    NOT             shift and go to state 16
    LPAREN          shift and go to state 18
    INT_LITERAL     shift and go to state 19
    ID              shift and go to state 42

    expression                     shift and go to state 41
    lvalue                         shift and go to state 17
    identifier                     shift and go to state 22

state 15

    (23) expression -> MINUS . expression
    (22) expression -> . PLUS expression
    (23) expression -> . MINUS expression
    (24) expression -> . NOT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression MODULUS expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression LESS_EQ expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression GREATER_EQ expression
    (35) expression -> . expression IS_EQ expression
    (36) expression -> . expression NOT_EQ expression
    (37) expression -> . expression AND expression
    (38) expression -> . expression OR expression
    (39) expression -> . lvalue EQUALS expression
    (40) expression -> . LPAREN expression RPAREN
    (41) expression -> . INT_LITERAL
    (43) expression -> . lvalue
    (42) lvalue -> . identifier
    (20) identifier -> . ID

    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    NOT             shift and go to state 16
    LPAREN          shift and go to state 18
    INT_LITERAL     shift and go to state 19
    ID              shift and go to state 42

    expression                     shift and go to state 43
    lvalue                         shift and go to state 17
    identifier                     shift and go to state 22

state 16

    (24) expression -> NOT . expression
    (22) expression -> . PLUS expression
    (23) expression -> . MINUS expression
    (24) expression -> . NOT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression MODULUS expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression LESS_EQ expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression GREATER_EQ expression
    (35) expression -> . expression IS_EQ expression
    (36) expression -> . expression NOT_EQ expression
    (37) expression -> . expression AND expression
    (38) expression -> . expression OR expression
    (39) expression -> . lvalue EQUALS expression
    (40) expression -> . LPAREN expression RPAREN
    (41) expression -> . INT_LITERAL
    (43) expression -> . lvalue
    (42) lvalue -> . identifier
    (20) identifier -> . ID

    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    NOT             shift and go to state 16
    LPAREN          shift and go to state 18
    INT_LITERAL     shift and go to state 19
    ID              shift and go to state 42

    expression                     shift and go to state 44
    lvalue                         shift and go to state 17
    identifier                     shift and go to state 22

state 17

    (39) expression -> lvalue . EQUALS expression
    (43) expression -> lvalue .

    EQUALS          shift and go to state 45
    PLUS            reduce using rule 43 (expression -> lvalue .)
    MINUS           reduce using rule 43 (expression -> lvalue .)
    EXPONENT        reduce using rule 43 (expression -> lvalue .)
    TIMES           reduce using rule 43 (expression -> lvalue .)
    DIVIDE          reduce using rule 43 (expression -> lvalue .)
    MODULUS         reduce using rule 43 (expression -> lvalue .)
    LESS            reduce using rule 43 (expression -> lvalue .)
    LESS_EQ         reduce using rule 43 (expression -> lvalue .)
    GREATER         reduce using rule 43 (expression -> lvalue .)
    GREATER_EQ      reduce using rule 43 (expression -> lvalue .)
    IS_EQ           reduce using rule 43 (expression -> lvalue .)
    NOT_EQ          reduce using rule 43 (expression -> lvalue .)
    AND             reduce using rule 43 (expression -> lvalue .)
    OR              reduce using rule 43 (expression -> lvalue .)
    SEMICOLON       reduce using rule 43 (expression -> lvalue .)
    RBRACE          reduce using rule 43 (expression -> lvalue .)
    RPAREN          reduce using rule 43 (expression -> lvalue .)
    LBRACE          reduce using rule 43 (expression -> lvalue .)


state 18

    (40) expression -> LPAREN . expression RPAREN
    (22) expression -> . PLUS expression
    (23) expression -> . MINUS expression
    (24) expression -> . NOT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression MODULUS expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression LESS_EQ expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression GREATER_EQ expression
    (35) expression -> . expression IS_EQ expression
    (36) expression -> . expression NOT_EQ expression
    (37) expression -> . expression AND expression
    (38) expression -> . expression OR expression
    (39) expression -> . lvalue EQUALS expression
    (40) expression -> . LPAREN expression RPAREN
    (41) expression -> . INT_LITERAL
    (43) expression -> . lvalue
    (42) lvalue -> . identifier
    (20) identifier -> . ID

    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    NOT             shift and go to state 16
    LPAREN          shift and go to state 18
    INT_LITERAL     shift and go to state 19
    ID              shift and go to state 42

    expression                     shift and go to state 46
    lvalue                         shift and go to state 17
    identifier                     shift and go to state 22

state 19

    (41) expression -> INT_LITERAL .

    PLUS            reduce using rule 41 (expression -> INT_LITERAL .)
    MINUS           reduce using rule 41 (expression -> INT_LITERAL .)
    EXPONENT        reduce using rule 41 (expression -> INT_LITERAL .)
    TIMES           reduce using rule 41 (expression -> INT_LITERAL .)
    DIVIDE          reduce using rule 41 (expression -> INT_LITERAL .)
    MODULUS         reduce using rule 41 (expression -> INT_LITERAL .)
    LESS            reduce using rule 41 (expression -> INT_LITERAL .)
    LESS_EQ         reduce using rule 41 (expression -> INT_LITERAL .)
    GREATER         reduce using rule 41 (expression -> INT_LITERAL .)
    GREATER_EQ      reduce using rule 41 (expression -> INT_LITERAL .)
    IS_EQ           reduce using rule 41 (expression -> INT_LITERAL .)
    NOT_EQ          reduce using rule 41 (expression -> INT_LITERAL .)
    AND             reduce using rule 41 (expression -> INT_LITERAL .)
    OR              reduce using rule 41 (expression -> INT_LITERAL .)
    SEMICOLON       reduce using rule 41 (expression -> INT_LITERAL .)
    RBRACE          reduce using rule 41 (expression -> INT_LITERAL .)
    RPAREN          reduce using rule 41 (expression -> INT_LITERAL .)
    LBRACE          reduce using rule 41 (expression -> INT_LITERAL .)


state 20

    (17) if_then_statement -> IF . expression block_statement
    (18) if_then_statement -> IF . expression block_statement ELSE block_statement
    (22) expression -> . PLUS expression
    (23) expression -> . MINUS expression
    (24) expression -> . NOT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression MODULUS expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression LESS_EQ expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression GREATER_EQ expression
    (35) expression -> . expression IS_EQ expression
    (36) expression -> . expression NOT_EQ expression
    (37) expression -> . expression AND expression
    (38) expression -> . expression OR expression
    (39) expression -> . lvalue EQUALS expression
    (40) expression -> . LPAREN expression RPAREN
    (41) expression -> . INT_LITERAL
    (43) expression -> . lvalue
    (42) lvalue -> . identifier
    (20) identifier -> . ID

    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    NOT             shift and go to state 16
    LPAREN          shift and go to state 18
    INT_LITERAL     shift and go to state 19
    ID              shift and go to state 42

    expression                     shift and go to state 47
    lvalue                         shift and go to state 17
    identifier                     shift and go to state 22

state 21

    (19) while_statement -> WHILE . expression block_statement
    (22) expression -> . PLUS expression
    (23) expression -> . MINUS expression
    (24) expression -> . NOT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression MODULUS expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression LESS_EQ expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression GREATER_EQ expression
    (35) expression -> . expression IS_EQ expression
    (36) expression -> . expression NOT_EQ expression
    (37) expression -> . expression AND expression
    (38) expression -> . expression OR expression
    (39) expression -> . lvalue EQUALS expression
    (40) expression -> . LPAREN expression RPAREN
    (41) expression -> . INT_LITERAL
    (43) expression -> . lvalue
    (42) lvalue -> . identifier
    (20) identifier -> . ID

    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    NOT             shift and go to state 16
    LPAREN          shift and go to state 18
    INT_LITERAL     shift and go to state 19
    ID              shift and go to state 42

    expression                     shift and go to state 48
    lvalue                         shift and go to state 17
    identifier                     shift and go to state 22

state 22

    (42) lvalue -> identifier .

    EQUALS          reduce using rule 42 (lvalue -> identifier .)
    PLUS            reduce using rule 42 (lvalue -> identifier .)
    MINUS           reduce using rule 42 (lvalue -> identifier .)
    EXPONENT        reduce using rule 42 (lvalue -> identifier .)
    TIMES           reduce using rule 42 (lvalue -> identifier .)
    DIVIDE          reduce using rule 42 (lvalue -> identifier .)
    MODULUS         reduce using rule 42 (lvalue -> identifier .)
    LESS            reduce using rule 42 (lvalue -> identifier .)
    LESS_EQ         reduce using rule 42 (lvalue -> identifier .)
    GREATER         reduce using rule 42 (lvalue -> identifier .)
    GREATER_EQ      reduce using rule 42 (lvalue -> identifier .)
    IS_EQ           reduce using rule 42 (lvalue -> identifier .)
    NOT_EQ          reduce using rule 42 (lvalue -> identifier .)
    AND             reduce using rule 42 (lvalue -> identifier .)
    OR              reduce using rule 42 (lvalue -> identifier .)
    SEMICOLON       reduce using rule 42 (lvalue -> identifier .)
    RBRACE          reduce using rule 42 (lvalue -> identifier .)
    RPAREN          reduce using rule 42 (lvalue -> identifier .)
    LBRACE          reduce using rule 42 (lvalue -> identifier .)


state 23

    (4) block_statement -> LBRACE statement_decl_list semicolon_opt . RBRACE

    RBRACE          shift and go to state 49


state 24

    (9) statement_decl_list -> statement_decl_list SEMICOLON . statement_decl
    (3) semicolon_opt -> SEMICOLON .
    (12) statement_decl -> . statement
    (13) statement_decl -> . decl
    (5) statement -> . expression
    (6) statement -> . block_statement
    (7) statement -> . if_then_statement
    (8) statement -> . while_statement
    (14) decl -> . ID COLON type Initiation
    (22) expression -> . PLUS expression
    (23) expression -> . MINUS expression
    (24) expression -> . NOT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression MODULUS expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression LESS_EQ expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression GREATER_EQ expression
    (35) expression -> . expression IS_EQ expression
    (36) expression -> . expression NOT_EQ expression
    (37) expression -> . expression AND expression
    (38) expression -> . expression OR expression
    (39) expression -> . lvalue EQUALS expression
    (40) expression -> . LPAREN expression RPAREN
    (41) expression -> . INT_LITERAL
    (43) expression -> . lvalue
    (4) block_statement -> . LBRACE statement_decl_list semicolon_opt RBRACE
    (17) if_then_statement -> . IF expression block_statement
    (18) if_then_statement -> . IF expression block_statement ELSE block_statement
    (19) while_statement -> . WHILE expression block_statement
    (42) lvalue -> . identifier
    (20) identifier -> . ID

    RBRACE          reduce using rule 3 (semicolon_opt -> SEMICOLON .)
    ID              shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    NOT             shift and go to state 16
    LPAREN          shift and go to state 18
    INT_LITERAL     shift and go to state 19
    LBRACE          shift and go to state 3
    IF              shift and go to state 20
    WHILE           shift and go to state 21

    statement_decl                 shift and go to state 50
    statement                      shift and go to state 7
    decl                           shift and go to state 8
    expression                     shift and go to state 9
    block_statement                shift and go to state 10
    if_then_statement              shift and go to state 11
    while_statement                shift and go to state 12
    lvalue                         shift and go to state 17
    identifier                     shift and go to state 22

state 25

    (2) semicolon_opt -> epsilon .

    RBRACE          reduce using rule 2 (semicolon_opt -> epsilon .)


state 26

    (25) expression -> expression PLUS . expression
    (22) expression -> . PLUS expression
    (23) expression -> . MINUS expression
    (24) expression -> . NOT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression MODULUS expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression LESS_EQ expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression GREATER_EQ expression
    (35) expression -> . expression IS_EQ expression
    (36) expression -> . expression NOT_EQ expression
    (37) expression -> . expression AND expression
    (38) expression -> . expression OR expression
    (39) expression -> . lvalue EQUALS expression
    (40) expression -> . LPAREN expression RPAREN
    (41) expression -> . INT_LITERAL
    (43) expression -> . lvalue
    (42) lvalue -> . identifier
    (20) identifier -> . ID

    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    NOT             shift and go to state 16
    LPAREN          shift and go to state 18
    INT_LITERAL     shift and go to state 19
    ID              shift and go to state 42

    expression                     shift and go to state 51
    lvalue                         shift and go to state 17
    identifier                     shift and go to state 22

state 27

    (26) expression -> expression MINUS . expression
    (22) expression -> . PLUS expression
    (23) expression -> . MINUS expression
    (24) expression -> . NOT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression MODULUS expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression LESS_EQ expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression GREATER_EQ expression
    (35) expression -> . expression IS_EQ expression
    (36) expression -> . expression NOT_EQ expression
    (37) expression -> . expression AND expression
    (38) expression -> . expression OR expression
    (39) expression -> . lvalue EQUALS expression
    (40) expression -> . LPAREN expression RPAREN
    (41) expression -> . INT_LITERAL
    (43) expression -> . lvalue
    (42) lvalue -> . identifier
    (20) identifier -> . ID

    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    NOT             shift and go to state 16
    LPAREN          shift and go to state 18
    INT_LITERAL     shift and go to state 19
    ID              shift and go to state 42

    expression                     shift and go to state 52
    lvalue                         shift and go to state 17
    identifier                     shift and go to state 22

state 28

    (27) expression -> expression EXPONENT . expression
    (22) expression -> . PLUS expression
    (23) expression -> . MINUS expression
    (24) expression -> . NOT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression MODULUS expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression LESS_EQ expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression GREATER_EQ expression
    (35) expression -> . expression IS_EQ expression
    (36) expression -> . expression NOT_EQ expression
    (37) expression -> . expression AND expression
    (38) expression -> . expression OR expression
    (39) expression -> . lvalue EQUALS expression
    (40) expression -> . LPAREN expression RPAREN
    (41) expression -> . INT_LITERAL
    (43) expression -> . lvalue
    (42) lvalue -> . identifier
    (20) identifier -> . ID

    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    NOT             shift and go to state 16
    LPAREN          shift and go to state 18
    INT_LITERAL     shift and go to state 19
    ID              shift and go to state 42

    expression                     shift and go to state 53
    lvalue                         shift and go to state 17
    identifier                     shift and go to state 22

state 29

    (28) expression -> expression TIMES . expression
    (22) expression -> . PLUS expression
    (23) expression -> . MINUS expression
    (24) expression -> . NOT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression MODULUS expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression LESS_EQ expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression GREATER_EQ expression
    (35) expression -> . expression IS_EQ expression
    (36) expression -> . expression NOT_EQ expression
    (37) expression -> . expression AND expression
    (38) expression -> . expression OR expression
    (39) expression -> . lvalue EQUALS expression
    (40) expression -> . LPAREN expression RPAREN
    (41) expression -> . INT_LITERAL
    (43) expression -> . lvalue
    (42) lvalue -> . identifier
    (20) identifier -> . ID

    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    NOT             shift and go to state 16
    LPAREN          shift and go to state 18
    INT_LITERAL     shift and go to state 19
    ID              shift and go to state 42

    expression                     shift and go to state 54
    lvalue                         shift and go to state 17
    identifier                     shift and go to state 22

state 30

    (29) expression -> expression DIVIDE . expression
    (22) expression -> . PLUS expression
    (23) expression -> . MINUS expression
    (24) expression -> . NOT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression MODULUS expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression LESS_EQ expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression GREATER_EQ expression
    (35) expression -> . expression IS_EQ expression
    (36) expression -> . expression NOT_EQ expression
    (37) expression -> . expression AND expression
    (38) expression -> . expression OR expression
    (39) expression -> . lvalue EQUALS expression
    (40) expression -> . LPAREN expression RPAREN
    (41) expression -> . INT_LITERAL
    (43) expression -> . lvalue
    (42) lvalue -> . identifier
    (20) identifier -> . ID

    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    NOT             shift and go to state 16
    LPAREN          shift and go to state 18
    INT_LITERAL     shift and go to state 19
    ID              shift and go to state 42

    expression                     shift and go to state 55
    lvalue                         shift and go to state 17
    identifier                     shift and go to state 22

state 31

    (30) expression -> expression MODULUS . expression
    (22) expression -> . PLUS expression
    (23) expression -> . MINUS expression
    (24) expression -> . NOT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression MODULUS expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression LESS_EQ expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression GREATER_EQ expression
    (35) expression -> . expression IS_EQ expression
    (36) expression -> . expression NOT_EQ expression
    (37) expression -> . expression AND expression
    (38) expression -> . expression OR expression
    (39) expression -> . lvalue EQUALS expression
    (40) expression -> . LPAREN expression RPAREN
    (41) expression -> . INT_LITERAL
    (43) expression -> . lvalue
    (42) lvalue -> . identifier
    (20) identifier -> . ID

    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    NOT             shift and go to state 16
    LPAREN          shift and go to state 18
    INT_LITERAL     shift and go to state 19
    ID              shift and go to state 42

    expression                     shift and go to state 56
    lvalue                         shift and go to state 17
    identifier                     shift and go to state 22

state 32

    (31) expression -> expression LESS . expression
    (22) expression -> . PLUS expression
    (23) expression -> . MINUS expression
    (24) expression -> . NOT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression MODULUS expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression LESS_EQ expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression GREATER_EQ expression
    (35) expression -> . expression IS_EQ expression
    (36) expression -> . expression NOT_EQ expression
    (37) expression -> . expression AND expression
    (38) expression -> . expression OR expression
    (39) expression -> . lvalue EQUALS expression
    (40) expression -> . LPAREN expression RPAREN
    (41) expression -> . INT_LITERAL
    (43) expression -> . lvalue
    (42) lvalue -> . identifier
    (20) identifier -> . ID

    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    NOT             shift and go to state 16
    LPAREN          shift and go to state 18
    INT_LITERAL     shift and go to state 19
    ID              shift and go to state 42

    expression                     shift and go to state 57
    lvalue                         shift and go to state 17
    identifier                     shift and go to state 22

state 33

    (32) expression -> expression LESS_EQ . expression
    (22) expression -> . PLUS expression
    (23) expression -> . MINUS expression
    (24) expression -> . NOT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression MODULUS expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression LESS_EQ expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression GREATER_EQ expression
    (35) expression -> . expression IS_EQ expression
    (36) expression -> . expression NOT_EQ expression
    (37) expression -> . expression AND expression
    (38) expression -> . expression OR expression
    (39) expression -> . lvalue EQUALS expression
    (40) expression -> . LPAREN expression RPAREN
    (41) expression -> . INT_LITERAL
    (43) expression -> . lvalue
    (42) lvalue -> . identifier
    (20) identifier -> . ID

    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    NOT             shift and go to state 16
    LPAREN          shift and go to state 18
    INT_LITERAL     shift and go to state 19
    ID              shift and go to state 42

    expression                     shift and go to state 58
    lvalue                         shift and go to state 17
    identifier                     shift and go to state 22

state 34

    (33) expression -> expression GREATER . expression
    (22) expression -> . PLUS expression
    (23) expression -> . MINUS expression
    (24) expression -> . NOT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression MODULUS expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression LESS_EQ expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression GREATER_EQ expression
    (35) expression -> . expression IS_EQ expression
    (36) expression -> . expression NOT_EQ expression
    (37) expression -> . expression AND expression
    (38) expression -> . expression OR expression
    (39) expression -> . lvalue EQUALS expression
    (40) expression -> . LPAREN expression RPAREN
    (41) expression -> . INT_LITERAL
    (43) expression -> . lvalue
    (42) lvalue -> . identifier
    (20) identifier -> . ID

    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    NOT             shift and go to state 16
    LPAREN          shift and go to state 18
    INT_LITERAL     shift and go to state 19
    ID              shift and go to state 42

    expression                     shift and go to state 59
    lvalue                         shift and go to state 17
    identifier                     shift and go to state 22

state 35

    (34) expression -> expression GREATER_EQ . expression
    (22) expression -> . PLUS expression
    (23) expression -> . MINUS expression
    (24) expression -> . NOT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression MODULUS expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression LESS_EQ expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression GREATER_EQ expression
    (35) expression -> . expression IS_EQ expression
    (36) expression -> . expression NOT_EQ expression
    (37) expression -> . expression AND expression
    (38) expression -> . expression OR expression
    (39) expression -> . lvalue EQUALS expression
    (40) expression -> . LPAREN expression RPAREN
    (41) expression -> . INT_LITERAL
    (43) expression -> . lvalue
    (42) lvalue -> . identifier
    (20) identifier -> . ID

    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    NOT             shift and go to state 16
    LPAREN          shift and go to state 18
    INT_LITERAL     shift and go to state 19
    ID              shift and go to state 42

    expression                     shift and go to state 60
    lvalue                         shift and go to state 17
    identifier                     shift and go to state 22

state 36

    (35) expression -> expression IS_EQ . expression
    (22) expression -> . PLUS expression
    (23) expression -> . MINUS expression
    (24) expression -> . NOT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression MODULUS expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression LESS_EQ expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression GREATER_EQ expression
    (35) expression -> . expression IS_EQ expression
    (36) expression -> . expression NOT_EQ expression
    (37) expression -> . expression AND expression
    (38) expression -> . expression OR expression
    (39) expression -> . lvalue EQUALS expression
    (40) expression -> . LPAREN expression RPAREN
    (41) expression -> . INT_LITERAL
    (43) expression -> . lvalue
    (42) lvalue -> . identifier
    (20) identifier -> . ID

    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    NOT             shift and go to state 16
    LPAREN          shift and go to state 18
    INT_LITERAL     shift and go to state 19
    ID              shift and go to state 42

    expression                     shift and go to state 61
    lvalue                         shift and go to state 17
    identifier                     shift and go to state 22

state 37

    (36) expression -> expression NOT_EQ . expression
    (22) expression -> . PLUS expression
    (23) expression -> . MINUS expression
    (24) expression -> . NOT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression MODULUS expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression LESS_EQ expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression GREATER_EQ expression
    (35) expression -> . expression IS_EQ expression
    (36) expression -> . expression NOT_EQ expression
    (37) expression -> . expression AND expression
    (38) expression -> . expression OR expression
    (39) expression -> . lvalue EQUALS expression
    (40) expression -> . LPAREN expression RPAREN
    (41) expression -> . INT_LITERAL
    (43) expression -> . lvalue
    (42) lvalue -> . identifier
    (20) identifier -> . ID

    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    NOT             shift and go to state 16
    LPAREN          shift and go to state 18
    INT_LITERAL     shift and go to state 19
    ID              shift and go to state 42

    expression                     shift and go to state 62
    lvalue                         shift and go to state 17
    identifier                     shift and go to state 22

state 38

    (37) expression -> expression AND . expression
    (22) expression -> . PLUS expression
    (23) expression -> . MINUS expression
    (24) expression -> . NOT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression MODULUS expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression LESS_EQ expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression GREATER_EQ expression
    (35) expression -> . expression IS_EQ expression
    (36) expression -> . expression NOT_EQ expression
    (37) expression -> . expression AND expression
    (38) expression -> . expression OR expression
    (39) expression -> . lvalue EQUALS expression
    (40) expression -> . LPAREN expression RPAREN
    (41) expression -> . INT_LITERAL
    (43) expression -> . lvalue
    (42) lvalue -> . identifier
    (20) identifier -> . ID

    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    NOT             shift and go to state 16
    LPAREN          shift and go to state 18
    INT_LITERAL     shift and go to state 19
    ID              shift and go to state 42

    expression                     shift and go to state 63
    lvalue                         shift and go to state 17
    identifier                     shift and go to state 22

state 39

    (38) expression -> expression OR . expression
    (22) expression -> . PLUS expression
    (23) expression -> . MINUS expression
    (24) expression -> . NOT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression MODULUS expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression LESS_EQ expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression GREATER_EQ expression
    (35) expression -> . expression IS_EQ expression
    (36) expression -> . expression NOT_EQ expression
    (37) expression -> . expression AND expression
    (38) expression -> . expression OR expression
    (39) expression -> . lvalue EQUALS expression
    (40) expression -> . LPAREN expression RPAREN
    (41) expression -> . INT_LITERAL
    (43) expression -> . lvalue
    (42) lvalue -> . identifier
    (20) identifier -> . ID

    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    NOT             shift and go to state 16
    LPAREN          shift and go to state 18
    INT_LITERAL     shift and go to state 19
    ID              shift and go to state 42

    expression                     shift and go to state 64
    lvalue                         shift and go to state 17
    identifier                     shift and go to state 22

state 40

    (14) decl -> ID COLON . type Initiation
    (21) type -> . INT

    INT             shift and go to state 66

    type                           shift and go to state 65

state 41

    (22) expression -> PLUS expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . MODULUS expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . LESS_EQ expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . GREATER_EQ expression
    (35) expression -> expression . IS_EQ expression
    (36) expression -> expression . NOT_EQ expression
    (37) expression -> expression . AND expression
    (38) expression -> expression . OR expression

    PLUS            reduce using rule 22 (expression -> PLUS expression .)
    MINUS           reduce using rule 22 (expression -> PLUS expression .)
    EXPONENT        reduce using rule 22 (expression -> PLUS expression .)
    TIMES           reduce using rule 22 (expression -> PLUS expression .)
    DIVIDE          reduce using rule 22 (expression -> PLUS expression .)
    MODULUS         reduce using rule 22 (expression -> PLUS expression .)
    LESS            reduce using rule 22 (expression -> PLUS expression .)
    LESS_EQ         reduce using rule 22 (expression -> PLUS expression .)
    GREATER         reduce using rule 22 (expression -> PLUS expression .)
    GREATER_EQ      reduce using rule 22 (expression -> PLUS expression .)
    IS_EQ           reduce using rule 22 (expression -> PLUS expression .)
    NOT_EQ          reduce using rule 22 (expression -> PLUS expression .)
    AND             reduce using rule 22 (expression -> PLUS expression .)
    OR              reduce using rule 22 (expression -> PLUS expression .)
    SEMICOLON       reduce using rule 22 (expression -> PLUS expression .)
    RBRACE          reduce using rule 22 (expression -> PLUS expression .)
    RPAREN          reduce using rule 22 (expression -> PLUS expression .)
    LBRACE          reduce using rule 22 (expression -> PLUS expression .)

  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! EXPONENT        [ shift and go to state 28 ]
  ! TIMES           [ shift and go to state 29 ]
  ! DIVIDE          [ shift and go to state 30 ]
  ! MODULUS         [ shift and go to state 31 ]
  ! LESS            [ shift and go to state 32 ]
  ! LESS_EQ         [ shift and go to state 33 ]
  ! GREATER         [ shift and go to state 34 ]
  ! GREATER_EQ      [ shift and go to state 35 ]
  ! IS_EQ           [ shift and go to state 36 ]
  ! NOT_EQ          [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]


state 42

    (20) identifier -> ID .

    EQUALS          reduce using rule 20 (identifier -> ID .)
    PLUS            reduce using rule 20 (identifier -> ID .)
    MINUS           reduce using rule 20 (identifier -> ID .)
    EXPONENT        reduce using rule 20 (identifier -> ID .)
    TIMES           reduce using rule 20 (identifier -> ID .)
    DIVIDE          reduce using rule 20 (identifier -> ID .)
    MODULUS         reduce using rule 20 (identifier -> ID .)
    LESS            reduce using rule 20 (identifier -> ID .)
    LESS_EQ         reduce using rule 20 (identifier -> ID .)
    GREATER         reduce using rule 20 (identifier -> ID .)
    GREATER_EQ      reduce using rule 20 (identifier -> ID .)
    IS_EQ           reduce using rule 20 (identifier -> ID .)
    NOT_EQ          reduce using rule 20 (identifier -> ID .)
    AND             reduce using rule 20 (identifier -> ID .)
    OR              reduce using rule 20 (identifier -> ID .)
    SEMICOLON       reduce using rule 20 (identifier -> ID .)
    RBRACE          reduce using rule 20 (identifier -> ID .)
    RPAREN          reduce using rule 20 (identifier -> ID .)
    LBRACE          reduce using rule 20 (identifier -> ID .)


state 43

    (23) expression -> MINUS expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . MODULUS expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . LESS_EQ expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . GREATER_EQ expression
    (35) expression -> expression . IS_EQ expression
    (36) expression -> expression . NOT_EQ expression
    (37) expression -> expression . AND expression
    (38) expression -> expression . OR expression

    PLUS            reduce using rule 23 (expression -> MINUS expression .)
    MINUS           reduce using rule 23 (expression -> MINUS expression .)
    EXPONENT        reduce using rule 23 (expression -> MINUS expression .)
    TIMES           reduce using rule 23 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 23 (expression -> MINUS expression .)
    MODULUS         reduce using rule 23 (expression -> MINUS expression .)
    LESS            reduce using rule 23 (expression -> MINUS expression .)
    LESS_EQ         reduce using rule 23 (expression -> MINUS expression .)
    GREATER         reduce using rule 23 (expression -> MINUS expression .)
    GREATER_EQ      reduce using rule 23 (expression -> MINUS expression .)
    IS_EQ           reduce using rule 23 (expression -> MINUS expression .)
    NOT_EQ          reduce using rule 23 (expression -> MINUS expression .)
    AND             reduce using rule 23 (expression -> MINUS expression .)
    OR              reduce using rule 23 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 23 (expression -> MINUS expression .)
    RBRACE          reduce using rule 23 (expression -> MINUS expression .)
    RPAREN          reduce using rule 23 (expression -> MINUS expression .)
    LBRACE          reduce using rule 23 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! EXPONENT        [ shift and go to state 28 ]
  ! TIMES           [ shift and go to state 29 ]
  ! DIVIDE          [ shift and go to state 30 ]
  ! MODULUS         [ shift and go to state 31 ]
  ! LESS            [ shift and go to state 32 ]
  ! LESS_EQ         [ shift and go to state 33 ]
  ! GREATER         [ shift and go to state 34 ]
  ! GREATER_EQ      [ shift and go to state 35 ]
  ! IS_EQ           [ shift and go to state 36 ]
  ! NOT_EQ          [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]


state 44

    (24) expression -> NOT expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . MODULUS expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . LESS_EQ expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . GREATER_EQ expression
    (35) expression -> expression . IS_EQ expression
    (36) expression -> expression . NOT_EQ expression
    (37) expression -> expression . AND expression
    (38) expression -> expression . OR expression

    PLUS            reduce using rule 24 (expression -> NOT expression .)
    MINUS           reduce using rule 24 (expression -> NOT expression .)
    EXPONENT        reduce using rule 24 (expression -> NOT expression .)
    TIMES           reduce using rule 24 (expression -> NOT expression .)
    DIVIDE          reduce using rule 24 (expression -> NOT expression .)
    MODULUS         reduce using rule 24 (expression -> NOT expression .)
    LESS            reduce using rule 24 (expression -> NOT expression .)
    LESS_EQ         reduce using rule 24 (expression -> NOT expression .)
    GREATER         reduce using rule 24 (expression -> NOT expression .)
    GREATER_EQ      reduce using rule 24 (expression -> NOT expression .)
    IS_EQ           reduce using rule 24 (expression -> NOT expression .)
    NOT_EQ          reduce using rule 24 (expression -> NOT expression .)
    AND             reduce using rule 24 (expression -> NOT expression .)
    OR              reduce using rule 24 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 24 (expression -> NOT expression .)
    RBRACE          reduce using rule 24 (expression -> NOT expression .)
    RPAREN          reduce using rule 24 (expression -> NOT expression .)
    LBRACE          reduce using rule 24 (expression -> NOT expression .)

  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! EXPONENT        [ shift and go to state 28 ]
  ! TIMES           [ shift and go to state 29 ]
  ! DIVIDE          [ shift and go to state 30 ]
  ! MODULUS         [ shift and go to state 31 ]
  ! LESS            [ shift and go to state 32 ]
  ! LESS_EQ         [ shift and go to state 33 ]
  ! GREATER         [ shift and go to state 34 ]
  ! GREATER_EQ      [ shift and go to state 35 ]
  ! IS_EQ           [ shift and go to state 36 ]
  ! NOT_EQ          [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]


state 45

    (39) expression -> lvalue EQUALS . expression
    (22) expression -> . PLUS expression
    (23) expression -> . MINUS expression
    (24) expression -> . NOT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression MODULUS expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression LESS_EQ expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression GREATER_EQ expression
    (35) expression -> . expression IS_EQ expression
    (36) expression -> . expression NOT_EQ expression
    (37) expression -> . expression AND expression
    (38) expression -> . expression OR expression
    (39) expression -> . lvalue EQUALS expression
    (40) expression -> . LPAREN expression RPAREN
    (41) expression -> . INT_LITERAL
    (43) expression -> . lvalue
    (42) lvalue -> . identifier
    (20) identifier -> . ID

    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    NOT             shift and go to state 16
    LPAREN          shift and go to state 18
    INT_LITERAL     shift and go to state 19
    ID              shift and go to state 42

    lvalue                         shift and go to state 17
    expression                     shift and go to state 67
    identifier                     shift and go to state 22

state 46

    (40) expression -> LPAREN expression . RPAREN
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . MODULUS expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . LESS_EQ expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . GREATER_EQ expression
    (35) expression -> expression . IS_EQ expression
    (36) expression -> expression . NOT_EQ expression
    (37) expression -> expression . AND expression
    (38) expression -> expression . OR expression

    RPAREN          shift and go to state 68
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    EXPONENT        shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULUS         shift and go to state 31
    LESS            shift and go to state 32
    LESS_EQ         shift and go to state 33
    GREATER         shift and go to state 34
    GREATER_EQ      shift and go to state 35
    IS_EQ           shift and go to state 36
    NOT_EQ          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39


state 47

    (17) if_then_statement -> IF expression . block_statement
    (18) if_then_statement -> IF expression . block_statement ELSE block_statement
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . MODULUS expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . LESS_EQ expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . GREATER_EQ expression
    (35) expression -> expression . IS_EQ expression
    (36) expression -> expression . NOT_EQ expression
    (37) expression -> expression . AND expression
    (38) expression -> expression . OR expression
    (4) block_statement -> . LBRACE statement_decl_list semicolon_opt RBRACE

    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    EXPONENT        shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULUS         shift and go to state 31
    LESS            shift and go to state 32
    LESS_EQ         shift and go to state 33
    GREATER         shift and go to state 34
    GREATER_EQ      shift and go to state 35
    IS_EQ           shift and go to state 36
    NOT_EQ          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    LBRACE          shift and go to state 3

    block_statement                shift and go to state 69

state 48

    (19) while_statement -> WHILE expression . block_statement
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . MODULUS expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . LESS_EQ expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . GREATER_EQ expression
    (35) expression -> expression . IS_EQ expression
    (36) expression -> expression . NOT_EQ expression
    (37) expression -> expression . AND expression
    (38) expression -> expression . OR expression
    (4) block_statement -> . LBRACE statement_decl_list semicolon_opt RBRACE

    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    EXPONENT        shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULUS         shift and go to state 31
    LESS            shift and go to state 32
    LESS_EQ         shift and go to state 33
    GREATER         shift and go to state 34
    GREATER_EQ      shift and go to state 35
    IS_EQ           shift and go to state 36
    NOT_EQ          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    LBRACE          shift and go to state 3

    block_statement                shift and go to state 70

state 49

    (4) block_statement -> LBRACE statement_decl_list semicolon_opt RBRACE .

    $end            reduce using rule 4 (block_statement -> LBRACE statement_decl_list semicolon_opt RBRACE .)
    SEMICOLON       reduce using rule 4 (block_statement -> LBRACE statement_decl_list semicolon_opt RBRACE .)
    RBRACE          reduce using rule 4 (block_statement -> LBRACE statement_decl_list semicolon_opt RBRACE .)
    ELSE            reduce using rule 4 (block_statement -> LBRACE statement_decl_list semicolon_opt RBRACE .)


state 50

    (9) statement_decl_list -> statement_decl_list SEMICOLON statement_decl .

    SEMICOLON       reduce using rule 9 (statement_decl_list -> statement_decl_list SEMICOLON statement_decl .)
    RBRACE          reduce using rule 9 (statement_decl_list -> statement_decl_list SEMICOLON statement_decl .)


state 51

    (25) expression -> expression PLUS expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . MODULUS expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . LESS_EQ expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . GREATER_EQ expression
    (35) expression -> expression . IS_EQ expression
    (36) expression -> expression . NOT_EQ expression
    (37) expression -> expression . AND expression
    (38) expression -> expression . OR expression

    PLUS            reduce using rule 25 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 25 (expression -> expression PLUS expression .)
    LESS            reduce using rule 25 (expression -> expression PLUS expression .)
    LESS_EQ         reduce using rule 25 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 25 (expression -> expression PLUS expression .)
    GREATER_EQ      reduce using rule 25 (expression -> expression PLUS expression .)
    IS_EQ           reduce using rule 25 (expression -> expression PLUS expression .)
    NOT_EQ          reduce using rule 25 (expression -> expression PLUS expression .)
    AND             reduce using rule 25 (expression -> expression PLUS expression .)
    OR              reduce using rule 25 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 25 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 25 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 25 (expression -> expression PLUS expression .)
    LBRACE          reduce using rule 25 (expression -> expression PLUS expression .)
    EXPONENT        shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULUS         shift and go to state 31

  ! EXPONENT        [ reduce using rule 25 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 25 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression PLUS expression .) ]
  ! MODULUS         [ reduce using rule 25 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! LESS            [ shift and go to state 32 ]
  ! LESS_EQ         [ shift and go to state 33 ]
  ! GREATER         [ shift and go to state 34 ]
  ! GREATER_EQ      [ shift and go to state 35 ]
  ! IS_EQ           [ shift and go to state 36 ]
  ! NOT_EQ          [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]


state 52

    (26) expression -> expression MINUS expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . MODULUS expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . LESS_EQ expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . GREATER_EQ expression
    (35) expression -> expression . IS_EQ expression
    (36) expression -> expression . NOT_EQ expression
    (37) expression -> expression . AND expression
    (38) expression -> expression . OR expression

    PLUS            reduce using rule 26 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 26 (expression -> expression MINUS expression .)
    LESS            reduce using rule 26 (expression -> expression MINUS expression .)
    LESS_EQ         reduce using rule 26 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 26 (expression -> expression MINUS expression .)
    GREATER_EQ      reduce using rule 26 (expression -> expression MINUS expression .)
    IS_EQ           reduce using rule 26 (expression -> expression MINUS expression .)
    NOT_EQ          reduce using rule 26 (expression -> expression MINUS expression .)
    AND             reduce using rule 26 (expression -> expression MINUS expression .)
    OR              reduce using rule 26 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 26 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 26 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 26 (expression -> expression MINUS expression .)
    LBRACE          reduce using rule 26 (expression -> expression MINUS expression .)
    EXPONENT        shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULUS         shift and go to state 31

  ! EXPONENT        [ reduce using rule 26 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 26 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression MINUS expression .) ]
  ! MODULUS         [ reduce using rule 26 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! LESS            [ shift and go to state 32 ]
  ! LESS_EQ         [ shift and go to state 33 ]
  ! GREATER         [ shift and go to state 34 ]
  ! GREATER_EQ      [ shift and go to state 35 ]
  ! IS_EQ           [ shift and go to state 36 ]
  ! NOT_EQ          [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]


state 53

    (27) expression -> expression EXPONENT expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . MODULUS expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . LESS_EQ expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . GREATER_EQ expression
    (35) expression -> expression . IS_EQ expression
    (36) expression -> expression . NOT_EQ expression
    (37) expression -> expression . AND expression
    (38) expression -> expression . OR expression

    PLUS            reduce using rule 27 (expression -> expression EXPONENT expression .)
    MINUS           reduce using rule 27 (expression -> expression EXPONENT expression .)
    TIMES           reduce using rule 27 (expression -> expression EXPONENT expression .)
    DIVIDE          reduce using rule 27 (expression -> expression EXPONENT expression .)
    MODULUS         reduce using rule 27 (expression -> expression EXPONENT expression .)
    LESS            reduce using rule 27 (expression -> expression EXPONENT expression .)
    LESS_EQ         reduce using rule 27 (expression -> expression EXPONENT expression .)
    GREATER         reduce using rule 27 (expression -> expression EXPONENT expression .)
    GREATER_EQ      reduce using rule 27 (expression -> expression EXPONENT expression .)
    IS_EQ           reduce using rule 27 (expression -> expression EXPONENT expression .)
    NOT_EQ          reduce using rule 27 (expression -> expression EXPONENT expression .)
    AND             reduce using rule 27 (expression -> expression EXPONENT expression .)
    OR              reduce using rule 27 (expression -> expression EXPONENT expression .)
    SEMICOLON       reduce using rule 27 (expression -> expression EXPONENT expression .)
    RBRACE          reduce using rule 27 (expression -> expression EXPONENT expression .)
    RPAREN          reduce using rule 27 (expression -> expression EXPONENT expression .)
    LBRACE          reduce using rule 27 (expression -> expression EXPONENT expression .)
    EXPONENT        shift and go to state 28

  ! EXPONENT        [ reduce using rule 27 (expression -> expression EXPONENT expression .) ]
  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! TIMES           [ shift and go to state 29 ]
  ! DIVIDE          [ shift and go to state 30 ]
  ! MODULUS         [ shift and go to state 31 ]
  ! LESS            [ shift and go to state 32 ]
  ! LESS_EQ         [ shift and go to state 33 ]
  ! GREATER         [ shift and go to state 34 ]
  ! GREATER_EQ      [ shift and go to state 35 ]
  ! IS_EQ           [ shift and go to state 36 ]
  ! NOT_EQ          [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]


state 54

    (28) expression -> expression TIMES expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . MODULUS expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . LESS_EQ expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . GREATER_EQ expression
    (35) expression -> expression . IS_EQ expression
    (36) expression -> expression . NOT_EQ expression
    (37) expression -> expression . AND expression
    (38) expression -> expression . OR expression

    PLUS            reduce using rule 28 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 28 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 28 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 28 (expression -> expression TIMES expression .)
    MODULUS         reduce using rule 28 (expression -> expression TIMES expression .)
    LESS            reduce using rule 28 (expression -> expression TIMES expression .)
    LESS_EQ         reduce using rule 28 (expression -> expression TIMES expression .)
    GREATER         reduce using rule 28 (expression -> expression TIMES expression .)
    GREATER_EQ      reduce using rule 28 (expression -> expression TIMES expression .)
    IS_EQ           reduce using rule 28 (expression -> expression TIMES expression .)
    NOT_EQ          reduce using rule 28 (expression -> expression TIMES expression .)
    AND             reduce using rule 28 (expression -> expression TIMES expression .)
    OR              reduce using rule 28 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 28 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 28 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 28 (expression -> expression TIMES expression .)
    LBRACE          reduce using rule 28 (expression -> expression TIMES expression .)
    EXPONENT        shift and go to state 28

  ! EXPONENT        [ reduce using rule 28 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! TIMES           [ shift and go to state 29 ]
  ! DIVIDE          [ shift and go to state 30 ]
  ! MODULUS         [ shift and go to state 31 ]
  ! LESS            [ shift and go to state 32 ]
  ! LESS_EQ         [ shift and go to state 33 ]
  ! GREATER         [ shift and go to state 34 ]
  ! GREATER_EQ      [ shift and go to state 35 ]
  ! IS_EQ           [ shift and go to state 36 ]
  ! NOT_EQ          [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]


state 55

    (29) expression -> expression DIVIDE expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . MODULUS expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . LESS_EQ expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . GREATER_EQ expression
    (35) expression -> expression . IS_EQ expression
    (36) expression -> expression . NOT_EQ expression
    (37) expression -> expression . AND expression
    (38) expression -> expression . OR expression

    PLUS            reduce using rule 29 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 29 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 29 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 29 (expression -> expression DIVIDE expression .)
    MODULUS         reduce using rule 29 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 29 (expression -> expression DIVIDE expression .)
    LESS_EQ         reduce using rule 29 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 29 (expression -> expression DIVIDE expression .)
    GREATER_EQ      reduce using rule 29 (expression -> expression DIVIDE expression .)
    IS_EQ           reduce using rule 29 (expression -> expression DIVIDE expression .)
    NOT_EQ          reduce using rule 29 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 29 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 29 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 29 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 29 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 29 (expression -> expression DIVIDE expression .)
    LBRACE          reduce using rule 29 (expression -> expression DIVIDE expression .)
    EXPONENT        shift and go to state 28

  ! EXPONENT        [ reduce using rule 29 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! TIMES           [ shift and go to state 29 ]
  ! DIVIDE          [ shift and go to state 30 ]
  ! MODULUS         [ shift and go to state 31 ]
  ! LESS            [ shift and go to state 32 ]
  ! LESS_EQ         [ shift and go to state 33 ]
  ! GREATER         [ shift and go to state 34 ]
  ! GREATER_EQ      [ shift and go to state 35 ]
  ! IS_EQ           [ shift and go to state 36 ]
  ! NOT_EQ          [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]


state 56

    (30) expression -> expression MODULUS expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . MODULUS expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . LESS_EQ expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . GREATER_EQ expression
    (35) expression -> expression . IS_EQ expression
    (36) expression -> expression . NOT_EQ expression
    (37) expression -> expression . AND expression
    (38) expression -> expression . OR expression

    PLUS            reduce using rule 30 (expression -> expression MODULUS expression .)
    MINUS           reduce using rule 30 (expression -> expression MODULUS expression .)
    TIMES           reduce using rule 30 (expression -> expression MODULUS expression .)
    DIVIDE          reduce using rule 30 (expression -> expression MODULUS expression .)
    MODULUS         reduce using rule 30 (expression -> expression MODULUS expression .)
    LESS            reduce using rule 30 (expression -> expression MODULUS expression .)
    LESS_EQ         reduce using rule 30 (expression -> expression MODULUS expression .)
    GREATER         reduce using rule 30 (expression -> expression MODULUS expression .)
    GREATER_EQ      reduce using rule 30 (expression -> expression MODULUS expression .)
    IS_EQ           reduce using rule 30 (expression -> expression MODULUS expression .)
    NOT_EQ          reduce using rule 30 (expression -> expression MODULUS expression .)
    AND             reduce using rule 30 (expression -> expression MODULUS expression .)
    OR              reduce using rule 30 (expression -> expression MODULUS expression .)
    SEMICOLON       reduce using rule 30 (expression -> expression MODULUS expression .)
    RBRACE          reduce using rule 30 (expression -> expression MODULUS expression .)
    RPAREN          reduce using rule 30 (expression -> expression MODULUS expression .)
    LBRACE          reduce using rule 30 (expression -> expression MODULUS expression .)
    EXPONENT        shift and go to state 28

  ! EXPONENT        [ reduce using rule 30 (expression -> expression MODULUS expression .) ]
  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! TIMES           [ shift and go to state 29 ]
  ! DIVIDE          [ shift and go to state 30 ]
  ! MODULUS         [ shift and go to state 31 ]
  ! LESS            [ shift and go to state 32 ]
  ! LESS_EQ         [ shift and go to state 33 ]
  ! GREATER         [ shift and go to state 34 ]
  ! GREATER_EQ      [ shift and go to state 35 ]
  ! IS_EQ           [ shift and go to state 36 ]
  ! NOT_EQ          [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]


state 57

    (31) expression -> expression LESS expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . MODULUS expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . LESS_EQ expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . GREATER_EQ expression
    (35) expression -> expression . IS_EQ expression
    (36) expression -> expression . NOT_EQ expression
    (37) expression -> expression . AND expression
    (38) expression -> expression . OR expression

    LESS            reduce using rule 31 (expression -> expression LESS expression .)
    LESS_EQ         reduce using rule 31 (expression -> expression LESS expression .)
    GREATER         reduce using rule 31 (expression -> expression LESS expression .)
    GREATER_EQ      reduce using rule 31 (expression -> expression LESS expression .)
    IS_EQ           reduce using rule 31 (expression -> expression LESS expression .)
    NOT_EQ          reduce using rule 31 (expression -> expression LESS expression .)
    AND             reduce using rule 31 (expression -> expression LESS expression .)
    OR              reduce using rule 31 (expression -> expression LESS expression .)
    SEMICOLON       reduce using rule 31 (expression -> expression LESS expression .)
    RBRACE          reduce using rule 31 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 31 (expression -> expression LESS expression .)
    LBRACE          reduce using rule 31 (expression -> expression LESS expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    EXPONENT        shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULUS         shift and go to state 31

  ! PLUS            [ reduce using rule 31 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression LESS expression .) ]
  ! EXPONENT        [ reduce using rule 31 (expression -> expression LESS expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression LESS expression .) ]
  ! MODULUS         [ reduce using rule 31 (expression -> expression LESS expression .) ]
  ! LESS            [ shift and go to state 32 ]
  ! LESS_EQ         [ shift and go to state 33 ]
  ! GREATER         [ shift and go to state 34 ]
  ! GREATER_EQ      [ shift and go to state 35 ]
  ! IS_EQ           [ shift and go to state 36 ]
  ! NOT_EQ          [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]


state 58

    (32) expression -> expression LESS_EQ expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . MODULUS expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . LESS_EQ expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . GREATER_EQ expression
    (35) expression -> expression . IS_EQ expression
    (36) expression -> expression . NOT_EQ expression
    (37) expression -> expression . AND expression
    (38) expression -> expression . OR expression

    LESS            reduce using rule 32 (expression -> expression LESS_EQ expression .)
    LESS_EQ         reduce using rule 32 (expression -> expression LESS_EQ expression .)
    GREATER         reduce using rule 32 (expression -> expression LESS_EQ expression .)
    GREATER_EQ      reduce using rule 32 (expression -> expression LESS_EQ expression .)
    IS_EQ           reduce using rule 32 (expression -> expression LESS_EQ expression .)
    NOT_EQ          reduce using rule 32 (expression -> expression LESS_EQ expression .)
    AND             reduce using rule 32 (expression -> expression LESS_EQ expression .)
    OR              reduce using rule 32 (expression -> expression LESS_EQ expression .)
    SEMICOLON       reduce using rule 32 (expression -> expression LESS_EQ expression .)
    RBRACE          reduce using rule 32 (expression -> expression LESS_EQ expression .)
    RPAREN          reduce using rule 32 (expression -> expression LESS_EQ expression .)
    LBRACE          reduce using rule 32 (expression -> expression LESS_EQ expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    EXPONENT        shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULUS         shift and go to state 31

  ! PLUS            [ reduce using rule 32 (expression -> expression LESS_EQ expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression LESS_EQ expression .) ]
  ! EXPONENT        [ reduce using rule 32 (expression -> expression LESS_EQ expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression LESS_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression LESS_EQ expression .) ]
  ! MODULUS         [ reduce using rule 32 (expression -> expression LESS_EQ expression .) ]
  ! LESS            [ shift and go to state 32 ]
  ! LESS_EQ         [ shift and go to state 33 ]
  ! GREATER         [ shift and go to state 34 ]
  ! GREATER_EQ      [ shift and go to state 35 ]
  ! IS_EQ           [ shift and go to state 36 ]
  ! NOT_EQ          [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]


state 59

    (33) expression -> expression GREATER expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . MODULUS expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . LESS_EQ expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . GREATER_EQ expression
    (35) expression -> expression . IS_EQ expression
    (36) expression -> expression . NOT_EQ expression
    (37) expression -> expression . AND expression
    (38) expression -> expression . OR expression

    LESS            reduce using rule 33 (expression -> expression GREATER expression .)
    LESS_EQ         reduce using rule 33 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 33 (expression -> expression GREATER expression .)
    GREATER_EQ      reduce using rule 33 (expression -> expression GREATER expression .)
    IS_EQ           reduce using rule 33 (expression -> expression GREATER expression .)
    NOT_EQ          reduce using rule 33 (expression -> expression GREATER expression .)
    AND             reduce using rule 33 (expression -> expression GREATER expression .)
    OR              reduce using rule 33 (expression -> expression GREATER expression .)
    SEMICOLON       reduce using rule 33 (expression -> expression GREATER expression .)
    RBRACE          reduce using rule 33 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 33 (expression -> expression GREATER expression .)
    LBRACE          reduce using rule 33 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    EXPONENT        shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULUS         shift and go to state 31

  ! PLUS            [ reduce using rule 33 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression GREATER expression .) ]
  ! EXPONENT        [ reduce using rule 33 (expression -> expression GREATER expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression GREATER expression .) ]
  ! MODULUS         [ reduce using rule 33 (expression -> expression GREATER expression .) ]
  ! LESS            [ shift and go to state 32 ]
  ! LESS_EQ         [ shift and go to state 33 ]
  ! GREATER         [ shift and go to state 34 ]
  ! GREATER_EQ      [ shift and go to state 35 ]
  ! IS_EQ           [ shift and go to state 36 ]
  ! NOT_EQ          [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]


state 60

    (34) expression -> expression GREATER_EQ expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . MODULUS expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . LESS_EQ expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . GREATER_EQ expression
    (35) expression -> expression . IS_EQ expression
    (36) expression -> expression . NOT_EQ expression
    (37) expression -> expression . AND expression
    (38) expression -> expression . OR expression

    LESS            reduce using rule 34 (expression -> expression GREATER_EQ expression .)
    LESS_EQ         reduce using rule 34 (expression -> expression GREATER_EQ expression .)
    GREATER         reduce using rule 34 (expression -> expression GREATER_EQ expression .)
    GREATER_EQ      reduce using rule 34 (expression -> expression GREATER_EQ expression .)
    IS_EQ           reduce using rule 34 (expression -> expression GREATER_EQ expression .)
    NOT_EQ          reduce using rule 34 (expression -> expression GREATER_EQ expression .)
    AND             reduce using rule 34 (expression -> expression GREATER_EQ expression .)
    OR              reduce using rule 34 (expression -> expression GREATER_EQ expression .)
    SEMICOLON       reduce using rule 34 (expression -> expression GREATER_EQ expression .)
    RBRACE          reduce using rule 34 (expression -> expression GREATER_EQ expression .)
    RPAREN          reduce using rule 34 (expression -> expression GREATER_EQ expression .)
    LBRACE          reduce using rule 34 (expression -> expression GREATER_EQ expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    EXPONENT        shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULUS         shift and go to state 31

  ! PLUS            [ reduce using rule 34 (expression -> expression GREATER_EQ expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression GREATER_EQ expression .) ]
  ! EXPONENT        [ reduce using rule 34 (expression -> expression GREATER_EQ expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression GREATER_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression GREATER_EQ expression .) ]
  ! MODULUS         [ reduce using rule 34 (expression -> expression GREATER_EQ expression .) ]
  ! LESS            [ shift and go to state 32 ]
  ! LESS_EQ         [ shift and go to state 33 ]
  ! GREATER         [ shift and go to state 34 ]
  ! GREATER_EQ      [ shift and go to state 35 ]
  ! IS_EQ           [ shift and go to state 36 ]
  ! NOT_EQ          [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]


state 61

    (35) expression -> expression IS_EQ expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . MODULUS expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . LESS_EQ expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . GREATER_EQ expression
    (35) expression -> expression . IS_EQ expression
    (36) expression -> expression . NOT_EQ expression
    (37) expression -> expression . AND expression
    (38) expression -> expression . OR expression

    IS_EQ           reduce using rule 35 (expression -> expression IS_EQ expression .)
    NOT_EQ          reduce using rule 35 (expression -> expression IS_EQ expression .)
    AND             reduce using rule 35 (expression -> expression IS_EQ expression .)
    OR              reduce using rule 35 (expression -> expression IS_EQ expression .)
    SEMICOLON       reduce using rule 35 (expression -> expression IS_EQ expression .)
    RBRACE          reduce using rule 35 (expression -> expression IS_EQ expression .)
    RPAREN          reduce using rule 35 (expression -> expression IS_EQ expression .)
    LBRACE          reduce using rule 35 (expression -> expression IS_EQ expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    EXPONENT        shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULUS         shift and go to state 31
    LESS            shift and go to state 32
    LESS_EQ         shift and go to state 33
    GREATER         shift and go to state 34
    GREATER_EQ      shift and go to state 35

  ! PLUS            [ reduce using rule 35 (expression -> expression IS_EQ expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression IS_EQ expression .) ]
  ! EXPONENT        [ reduce using rule 35 (expression -> expression IS_EQ expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression IS_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression IS_EQ expression .) ]
  ! MODULUS         [ reduce using rule 35 (expression -> expression IS_EQ expression .) ]
  ! LESS            [ reduce using rule 35 (expression -> expression IS_EQ expression .) ]
  ! LESS_EQ         [ reduce using rule 35 (expression -> expression IS_EQ expression .) ]
  ! GREATER         [ reduce using rule 35 (expression -> expression IS_EQ expression .) ]
  ! GREATER_EQ      [ reduce using rule 35 (expression -> expression IS_EQ expression .) ]
  ! IS_EQ           [ shift and go to state 36 ]
  ! NOT_EQ          [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]


state 62

    (36) expression -> expression NOT_EQ expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . MODULUS expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . LESS_EQ expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . GREATER_EQ expression
    (35) expression -> expression . IS_EQ expression
    (36) expression -> expression . NOT_EQ expression
    (37) expression -> expression . AND expression
    (38) expression -> expression . OR expression

    IS_EQ           reduce using rule 36 (expression -> expression NOT_EQ expression .)
    NOT_EQ          reduce using rule 36 (expression -> expression NOT_EQ expression .)
    AND             reduce using rule 36 (expression -> expression NOT_EQ expression .)
    OR              reduce using rule 36 (expression -> expression NOT_EQ expression .)
    SEMICOLON       reduce using rule 36 (expression -> expression NOT_EQ expression .)
    RBRACE          reduce using rule 36 (expression -> expression NOT_EQ expression .)
    RPAREN          reduce using rule 36 (expression -> expression NOT_EQ expression .)
    LBRACE          reduce using rule 36 (expression -> expression NOT_EQ expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    EXPONENT        shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULUS         shift and go to state 31
    LESS            shift and go to state 32
    LESS_EQ         shift and go to state 33
    GREATER         shift and go to state 34
    GREATER_EQ      shift and go to state 35

  ! PLUS            [ reduce using rule 36 (expression -> expression NOT_EQ expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression NOT_EQ expression .) ]
  ! EXPONENT        [ reduce using rule 36 (expression -> expression NOT_EQ expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression NOT_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression NOT_EQ expression .) ]
  ! MODULUS         [ reduce using rule 36 (expression -> expression NOT_EQ expression .) ]
  ! LESS            [ reduce using rule 36 (expression -> expression NOT_EQ expression .) ]
  ! LESS_EQ         [ reduce using rule 36 (expression -> expression NOT_EQ expression .) ]
  ! GREATER         [ reduce using rule 36 (expression -> expression NOT_EQ expression .) ]
  ! GREATER_EQ      [ reduce using rule 36 (expression -> expression NOT_EQ expression .) ]
  ! IS_EQ           [ shift and go to state 36 ]
  ! NOT_EQ          [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]


state 63

    (37) expression -> expression AND expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . MODULUS expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . LESS_EQ expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . GREATER_EQ expression
    (35) expression -> expression . IS_EQ expression
    (36) expression -> expression . NOT_EQ expression
    (37) expression -> expression . AND expression
    (38) expression -> expression . OR expression

    AND             reduce using rule 37 (expression -> expression AND expression .)
    OR              reduce using rule 37 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 37 (expression -> expression AND expression .)
    RBRACE          reduce using rule 37 (expression -> expression AND expression .)
    RPAREN          reduce using rule 37 (expression -> expression AND expression .)
    LBRACE          reduce using rule 37 (expression -> expression AND expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    EXPONENT        shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULUS         shift and go to state 31
    LESS            shift and go to state 32
    LESS_EQ         shift and go to state 33
    GREATER         shift and go to state 34
    GREATER_EQ      shift and go to state 35
    IS_EQ           shift and go to state 36
    NOT_EQ          shift and go to state 37

  ! PLUS            [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! EXPONENT        [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! MODULUS         [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! LESS_EQ         [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! GREATER_EQ      [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! IS_EQ           [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! NOT_EQ          [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]


state 64

    (38) expression -> expression OR expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . MODULUS expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . LESS_EQ expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . GREATER_EQ expression
    (35) expression -> expression . IS_EQ expression
    (36) expression -> expression . NOT_EQ expression
    (37) expression -> expression . AND expression
    (38) expression -> expression . OR expression

    OR              reduce using rule 38 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 38 (expression -> expression OR expression .)
    RBRACE          reduce using rule 38 (expression -> expression OR expression .)
    RPAREN          reduce using rule 38 (expression -> expression OR expression .)
    LBRACE          reduce using rule 38 (expression -> expression OR expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    EXPONENT        shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULUS         shift and go to state 31
    LESS            shift and go to state 32
    LESS_EQ         shift and go to state 33
    GREATER         shift and go to state 34
    GREATER_EQ      shift and go to state 35
    IS_EQ           shift and go to state 36
    NOT_EQ          shift and go to state 37
    AND             shift and go to state 38

  ! PLUS            [ reduce using rule 38 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression OR expression .) ]
  ! EXPONENT        [ reduce using rule 38 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression OR expression .) ]
  ! MODULUS         [ reduce using rule 38 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 38 (expression -> expression OR expression .) ]
  ! LESS_EQ         [ reduce using rule 38 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 38 (expression -> expression OR expression .) ]
  ! GREATER_EQ      [ reduce using rule 38 (expression -> expression OR expression .) ]
  ! IS_EQ           [ reduce using rule 38 (expression -> expression OR expression .) ]
  ! NOT_EQ          [ reduce using rule 38 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 38 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 39 ]


state 65

    (14) decl -> ID COLON type . Initiation
    (15) Initiation -> . EQUALS expression
    (16) Initiation -> . epsilon
    (44) epsilon -> .

    EQUALS          shift and go to state 72
    SEMICOLON       reduce using rule 44 (epsilon -> .)
    RBRACE          reduce using rule 44 (epsilon -> .)

    Initiation                     shift and go to state 71
    epsilon                        shift and go to state 73

state 66

    (21) type -> INT .

    EQUALS          reduce using rule 21 (type -> INT .)
    SEMICOLON       reduce using rule 21 (type -> INT .)
    RBRACE          reduce using rule 21 (type -> INT .)


state 67

    (39) expression -> lvalue EQUALS expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . MODULUS expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . LESS_EQ expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . GREATER_EQ expression
    (35) expression -> expression . IS_EQ expression
    (36) expression -> expression . NOT_EQ expression
    (37) expression -> expression . AND expression
    (38) expression -> expression . OR expression

    SEMICOLON       reduce using rule 39 (expression -> lvalue EQUALS expression .)
    RBRACE          reduce using rule 39 (expression -> lvalue EQUALS expression .)
    RPAREN          reduce using rule 39 (expression -> lvalue EQUALS expression .)
    LBRACE          reduce using rule 39 (expression -> lvalue EQUALS expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    EXPONENT        shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULUS         shift and go to state 31
    LESS            shift and go to state 32
    LESS_EQ         shift and go to state 33
    GREATER         shift and go to state 34
    GREATER_EQ      shift and go to state 35
    IS_EQ           shift and go to state 36
    NOT_EQ          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39

  ! PLUS            [ reduce using rule 39 (expression -> lvalue EQUALS expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> lvalue EQUALS expression .) ]
  ! EXPONENT        [ reduce using rule 39 (expression -> lvalue EQUALS expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> lvalue EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> lvalue EQUALS expression .) ]
  ! MODULUS         [ reduce using rule 39 (expression -> lvalue EQUALS expression .) ]
  ! LESS            [ reduce using rule 39 (expression -> lvalue EQUALS expression .) ]
  ! LESS_EQ         [ reduce using rule 39 (expression -> lvalue EQUALS expression .) ]
  ! GREATER         [ reduce using rule 39 (expression -> lvalue EQUALS expression .) ]
  ! GREATER_EQ      [ reduce using rule 39 (expression -> lvalue EQUALS expression .) ]
  ! IS_EQ           [ reduce using rule 39 (expression -> lvalue EQUALS expression .) ]
  ! NOT_EQ          [ reduce using rule 39 (expression -> lvalue EQUALS expression .) ]
  ! AND             [ reduce using rule 39 (expression -> lvalue EQUALS expression .) ]
  ! OR              [ reduce using rule 39 (expression -> lvalue EQUALS expression .) ]


state 68

    (40) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    EXPONENT        reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    MODULUS         reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    LESS_EQ         reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    GREATER_EQ      reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    IS_EQ           reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    NOT_EQ          reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 40 (expression -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 40 (expression -> LPAREN expression RPAREN .)


state 69

    (17) if_then_statement -> IF expression block_statement .
    (18) if_then_statement -> IF expression block_statement . ELSE block_statement

    SEMICOLON       reduce using rule 17 (if_then_statement -> IF expression block_statement .)
    RBRACE          reduce using rule 17 (if_then_statement -> IF expression block_statement .)
    ELSE            shift and go to state 74


state 70

    (19) while_statement -> WHILE expression block_statement .

    SEMICOLON       reduce using rule 19 (while_statement -> WHILE expression block_statement .)
    RBRACE          reduce using rule 19 (while_statement -> WHILE expression block_statement .)


state 71

    (14) decl -> ID COLON type Initiation .

    SEMICOLON       reduce using rule 14 (decl -> ID COLON type Initiation .)
    RBRACE          reduce using rule 14 (decl -> ID COLON type Initiation .)


state 72

    (15) Initiation -> EQUALS . expression
    (22) expression -> . PLUS expression
    (23) expression -> . MINUS expression
    (24) expression -> . NOT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . expression MODULUS expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression LESS_EQ expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression GREATER_EQ expression
    (35) expression -> . expression IS_EQ expression
    (36) expression -> . expression NOT_EQ expression
    (37) expression -> . expression AND expression
    (38) expression -> . expression OR expression
    (39) expression -> . lvalue EQUALS expression
    (40) expression -> . LPAREN expression RPAREN
    (41) expression -> . INT_LITERAL
    (43) expression -> . lvalue
    (42) lvalue -> . identifier
    (20) identifier -> . ID

    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    NOT             shift and go to state 16
    LPAREN          shift and go to state 18
    INT_LITERAL     shift and go to state 19
    ID              shift and go to state 42

    expression                     shift and go to state 75
    lvalue                         shift and go to state 17
    identifier                     shift and go to state 22

state 73

    (16) Initiation -> epsilon .

    SEMICOLON       reduce using rule 16 (Initiation -> epsilon .)
    RBRACE          reduce using rule 16 (Initiation -> epsilon .)


state 74

    (18) if_then_statement -> IF expression block_statement ELSE . block_statement
    (4) block_statement -> . LBRACE statement_decl_list semicolon_opt RBRACE

    LBRACE          shift and go to state 3

    block_statement                shift and go to state 76

state 75

    (15) Initiation -> EQUALS expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (30) expression -> expression . MODULUS expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . LESS_EQ expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . GREATER_EQ expression
    (35) expression -> expression . IS_EQ expression
    (36) expression -> expression . NOT_EQ expression
    (37) expression -> expression . AND expression
    (38) expression -> expression . OR expression

    SEMICOLON       reduce using rule 15 (Initiation -> EQUALS expression .)
    RBRACE          reduce using rule 15 (Initiation -> EQUALS expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    EXPONENT        shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULUS         shift and go to state 31
    LESS            shift and go to state 32
    LESS_EQ         shift and go to state 33
    GREATER         shift and go to state 34
    GREATER_EQ      shift and go to state 35
    IS_EQ           shift and go to state 36
    NOT_EQ          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39


state 76

    (18) if_then_statement -> IF expression block_statement ELSE block_statement .

    SEMICOLON       reduce using rule 18 (if_then_statement -> IF expression block_statement ELSE block_statement .)
    RBRACE          reduce using rule 18 (if_then_statement -> IF expression block_statement ELSE block_statement .)

