Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> block_statement
Rule 2     semicolon_opt -> epsilon
Rule 3     semicolon_opt -> SEMICOLON
Rule 4     block_statement -> LBRACE statement_decl_list semicolon_opt RBRACE
Rule 5     statement -> expression
Rule 6     statement -> block_statement
Rule 7     statement -> if_then_statement
Rule 8     statement -> while_statement
Rule 9     statement -> read_statement
Rule 10    statement -> write_statement
Rule 11    read_statement -> READ LPAREN lvalue lvalue_list RPAREN
Rule 12    lvalue_list -> lvalue_list COMMA lvalue
Rule 13    lvalue_list -> epsilon
Rule 14    write_statement -> WRITE LPAREN expr_string expr_string_list RPAREN
Rule 15    expr_string_list -> expr_string_list COMMA expr_string
Rule 16    expr_string_list -> epsilon
Rule 17    expr_string -> expression
Rule 18    statement_decl_list -> statement_decl_list SEMICOLON statement_decl
Rule 19    statement_decl_list -> statement_decl
Rule 20    statement_decl_list -> epsilon
Rule 21    statement_decl -> statement
Rule 22    statement_decl -> decl
Rule 23    decl -> ID COLON type Initiation
Rule 24    Initiation -> EQUALS expression
Rule 25    Initiation -> epsilon
Rule 26    if_then_statement -> IF expression block_statement
Rule 27    if_then_statement -> IF expression block_statement ELSE block_statement
Rule 28    while_statement -> WHILE expression block_statement
Rule 29    identifier -> ID
Rule 30    type -> INT
Rule 31    expression -> PLUS expression
Rule 32    expression -> MINUS expression
Rule 33    expression -> NOT expression
Rule 34    expression -> expression PLUS expression
Rule 35    expression -> expression MINUS expression
Rule 36    expression -> expression EXPONENT expression
Rule 37    expression -> expression TIMES expression
Rule 38    expression -> expression DIVIDE expression
Rule 39    expression -> expression MODULUS expression
Rule 40    expression -> expression LESS expression
Rule 41    expression -> expression LESS_EQ expression
Rule 42    expression -> expression GREATER expression
Rule 43    expression -> expression GREATER_EQ expression
Rule 44    expression -> expression IS_EQ expression
Rule 45    expression -> expression NOT_EQ expression
Rule 46    expression -> expression AND expression
Rule 47    expression -> expression OR expression
Rule 48    expression -> lvalue EQUALS expression
Rule 49    expression -> LPAREN expression RPAREN
Rule 50    expression -> INT_LITERAL
Rule 51    expr_string -> STRING_LITERAL
Rule 52    lvalue -> identifier
Rule 53    expression -> lvalue
Rule 54    epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 46
COLON                : 23
COMMA                : 12 15
DIVIDE               : 38
ELSE                 : 27
EQUALS               : 24 48
EXPONENT             : 36
GREATER              : 42
GREATER_EQ           : 43
ID                   : 23 29
IF                   : 26 27
INT                  : 30
INT_LITERAL          : 50
IS_EQ                : 44
LBRACE               : 4
LESS                 : 40
LESS_EQ              : 41
LPAREN               : 11 14 49
MINUS                : 32 35
MODULUS              : 39
NOT                  : 33
NOT_EQ               : 45
OR                   : 47
PLUS                 : 31 34
RBRACE               : 4
READ                 : 11
RPAREN               : 11 14 49
SEMICOLON            : 3 18
STRING_LITERAL       : 51
TIMES                : 37
WHILE                : 28
WRITE                : 14
error                : 

Nonterminals, with rules where they appear

Initiation           : 23
block_statement      : 1 6 26 27 27 28
decl                 : 22
epsilon              : 2 13 16 20 25
expr_string          : 14 15
expr_string_list     : 14 15
expression           : 5 17 24 26 27 28 31 32 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 49
identifier           : 52
if_then_statement    : 7
lvalue               : 11 12 48 53
lvalue_list          : 11 12
program              : 0
read_statement       : 9
semicolon_opt        : 4
statement            : 21
statement_decl       : 18 19
statement_decl_list  : 4 18
type                 : 23
while_statement      : 8
write_statement      : 10

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . block_statement
    (4) block_statement -> . LBRACE statement_decl_list semicolon_opt RBRACE

    LBRACE          shift and go to state 3

    program                        shift and go to state 1
    block_statement                shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> block_statement .

    $end            reduce using rule 1 (program -> block_statement .)


state 3

    (4) block_statement -> LBRACE . statement_decl_list semicolon_opt RBRACE
    (18) statement_decl_list -> . statement_decl_list SEMICOLON statement_decl
    (19) statement_decl_list -> . statement_decl
    (20) statement_decl_list -> . epsilon
    (21) statement_decl -> . statement
    (22) statement_decl -> . decl
    (54) epsilon -> .
    (5) statement -> . expression
    (6) statement -> . block_statement
    (7) statement -> . if_then_statement
    (8) statement -> . while_statement
    (9) statement -> . read_statement
    (10) statement -> . write_statement
    (23) decl -> . ID COLON type Initiation
    (31) expression -> . PLUS expression
    (32) expression -> . MINUS expression
    (33) expression -> . NOT expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression EXPONENT expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression MODULUS expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression LESS_EQ expression
    (42) expression -> . expression GREATER expression
    (43) expression -> . expression GREATER_EQ expression
    (44) expression -> . expression IS_EQ expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . lvalue EQUALS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_LITERAL
    (53) expression -> . lvalue
    (4) block_statement -> . LBRACE statement_decl_list semicolon_opt RBRACE
    (26) if_then_statement -> . IF expression block_statement
    (27) if_then_statement -> . IF expression block_statement ELSE block_statement
    (28) while_statement -> . WHILE expression block_statement
    (11) read_statement -> . READ LPAREN lvalue lvalue_list RPAREN
    (14) write_statement -> . WRITE LPAREN expr_string expr_string_list RPAREN
    (52) lvalue -> . identifier
    (29) identifier -> . ID

    SEMICOLON       reduce using rule 54 (epsilon -> .)
    RBRACE          reduce using rule 54 (epsilon -> .)
    ID              shift and go to state 15
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 20
    INT_LITERAL     shift and go to state 21
    LBRACE          shift and go to state 3
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    READ            shift and go to state 24
    WRITE           shift and go to state 25

    statement_decl_list            shift and go to state 4
    statement_decl                 shift and go to state 5
    epsilon                        shift and go to state 6
    statement                      shift and go to state 7
    decl                           shift and go to state 8
    expression                     shift and go to state 9
    block_statement                shift and go to state 10
    if_then_statement              shift and go to state 11
    while_statement                shift and go to state 12
    read_statement                 shift and go to state 13
    write_statement                shift and go to state 14
    lvalue                         shift and go to state 19
    identifier                     shift and go to state 26

state 4

    (4) block_statement -> LBRACE statement_decl_list . semicolon_opt RBRACE
    (18) statement_decl_list -> statement_decl_list . SEMICOLON statement_decl
    (2) semicolon_opt -> . epsilon
    (3) semicolon_opt -> . SEMICOLON
    (54) epsilon -> .

    SEMICOLON       shift and go to state 28
    RBRACE          reduce using rule 54 (epsilon -> .)

    semicolon_opt                  shift and go to state 27
    epsilon                        shift and go to state 29

state 5

    (19) statement_decl_list -> statement_decl .

    SEMICOLON       reduce using rule 19 (statement_decl_list -> statement_decl .)
    RBRACE          reduce using rule 19 (statement_decl_list -> statement_decl .)


state 6

    (20) statement_decl_list -> epsilon .

    SEMICOLON       reduce using rule 20 (statement_decl_list -> epsilon .)
    RBRACE          reduce using rule 20 (statement_decl_list -> epsilon .)


state 7

    (21) statement_decl -> statement .

    SEMICOLON       reduce using rule 21 (statement_decl -> statement .)
    RBRACE          reduce using rule 21 (statement_decl -> statement .)


state 8

    (22) statement_decl -> decl .

    SEMICOLON       reduce using rule 22 (statement_decl -> decl .)
    RBRACE          reduce using rule 22 (statement_decl -> decl .)


state 9

    (5) statement -> expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . EXPONENT expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . MODULUS expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . LESS_EQ expression
    (42) expression -> expression . GREATER expression
    (43) expression -> expression . GREATER_EQ expression
    (44) expression -> expression . IS_EQ expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    SEMICOLON       reduce using rule 5 (statement -> expression .)
    RBRACE          reduce using rule 5 (statement -> expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    EXPONENT        shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35
    LESS            shift and go to state 36
    LESS_EQ         shift and go to state 37
    GREATER         shift and go to state 38
    GREATER_EQ      shift and go to state 39
    IS_EQ           shift and go to state 40
    NOT_EQ          shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43


state 10

    (6) statement -> block_statement .

    SEMICOLON       reduce using rule 6 (statement -> block_statement .)
    RBRACE          reduce using rule 6 (statement -> block_statement .)


state 11

    (7) statement -> if_then_statement .

    SEMICOLON       reduce using rule 7 (statement -> if_then_statement .)
    RBRACE          reduce using rule 7 (statement -> if_then_statement .)


state 12

    (8) statement -> while_statement .

    SEMICOLON       reduce using rule 8 (statement -> while_statement .)
    RBRACE          reduce using rule 8 (statement -> while_statement .)


state 13

    (9) statement -> read_statement .

    SEMICOLON       reduce using rule 9 (statement -> read_statement .)
    RBRACE          reduce using rule 9 (statement -> read_statement .)


state 14

    (10) statement -> write_statement .

    SEMICOLON       reduce using rule 10 (statement -> write_statement .)
    RBRACE          reduce using rule 10 (statement -> write_statement .)


state 15

    (23) decl -> ID . COLON type Initiation
    (29) identifier -> ID .

    COLON           shift and go to state 44
    EQUALS          reduce using rule 29 (identifier -> ID .)
    PLUS            reduce using rule 29 (identifier -> ID .)
    MINUS           reduce using rule 29 (identifier -> ID .)
    EXPONENT        reduce using rule 29 (identifier -> ID .)
    TIMES           reduce using rule 29 (identifier -> ID .)
    DIVIDE          reduce using rule 29 (identifier -> ID .)
    MODULUS         reduce using rule 29 (identifier -> ID .)
    LESS            reduce using rule 29 (identifier -> ID .)
    LESS_EQ         reduce using rule 29 (identifier -> ID .)
    GREATER         reduce using rule 29 (identifier -> ID .)
    GREATER_EQ      reduce using rule 29 (identifier -> ID .)
    IS_EQ           reduce using rule 29 (identifier -> ID .)
    NOT_EQ          reduce using rule 29 (identifier -> ID .)
    AND             reduce using rule 29 (identifier -> ID .)
    OR              reduce using rule 29 (identifier -> ID .)
    SEMICOLON       reduce using rule 29 (identifier -> ID .)
    RBRACE          reduce using rule 29 (identifier -> ID .)


state 16

    (31) expression -> PLUS . expression
    (31) expression -> . PLUS expression
    (32) expression -> . MINUS expression
    (33) expression -> . NOT expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression EXPONENT expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression MODULUS expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression LESS_EQ expression
    (42) expression -> . expression GREATER expression
    (43) expression -> . expression GREATER_EQ expression
    (44) expression -> . expression IS_EQ expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . lvalue EQUALS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_LITERAL
    (53) expression -> . lvalue
    (52) lvalue -> . identifier
    (29) identifier -> . ID

    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 20
    INT_LITERAL     shift and go to state 21
    ID              shift and go to state 46

    expression                     shift and go to state 45
    lvalue                         shift and go to state 19
    identifier                     shift and go to state 26

state 17

    (32) expression -> MINUS . expression
    (31) expression -> . PLUS expression
    (32) expression -> . MINUS expression
    (33) expression -> . NOT expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression EXPONENT expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression MODULUS expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression LESS_EQ expression
    (42) expression -> . expression GREATER expression
    (43) expression -> . expression GREATER_EQ expression
    (44) expression -> . expression IS_EQ expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . lvalue EQUALS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_LITERAL
    (53) expression -> . lvalue
    (52) lvalue -> . identifier
    (29) identifier -> . ID

    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 20
    INT_LITERAL     shift and go to state 21
    ID              shift and go to state 46

    expression                     shift and go to state 47
    lvalue                         shift and go to state 19
    identifier                     shift and go to state 26

state 18

    (33) expression -> NOT . expression
    (31) expression -> . PLUS expression
    (32) expression -> . MINUS expression
    (33) expression -> . NOT expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression EXPONENT expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression MODULUS expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression LESS_EQ expression
    (42) expression -> . expression GREATER expression
    (43) expression -> . expression GREATER_EQ expression
    (44) expression -> . expression IS_EQ expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . lvalue EQUALS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_LITERAL
    (53) expression -> . lvalue
    (52) lvalue -> . identifier
    (29) identifier -> . ID

    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 20
    INT_LITERAL     shift and go to state 21
    ID              shift and go to state 46

    expression                     shift and go to state 48
    lvalue                         shift and go to state 19
    identifier                     shift and go to state 26

state 19

    (48) expression -> lvalue . EQUALS expression
    (53) expression -> lvalue .

    EQUALS          shift and go to state 49
    PLUS            reduce using rule 53 (expression -> lvalue .)
    MINUS           reduce using rule 53 (expression -> lvalue .)
    EXPONENT        reduce using rule 53 (expression -> lvalue .)
    TIMES           reduce using rule 53 (expression -> lvalue .)
    DIVIDE          reduce using rule 53 (expression -> lvalue .)
    MODULUS         reduce using rule 53 (expression -> lvalue .)
    LESS            reduce using rule 53 (expression -> lvalue .)
    LESS_EQ         reduce using rule 53 (expression -> lvalue .)
    GREATER         reduce using rule 53 (expression -> lvalue .)
    GREATER_EQ      reduce using rule 53 (expression -> lvalue .)
    IS_EQ           reduce using rule 53 (expression -> lvalue .)
    NOT_EQ          reduce using rule 53 (expression -> lvalue .)
    AND             reduce using rule 53 (expression -> lvalue .)
    OR              reduce using rule 53 (expression -> lvalue .)
    SEMICOLON       reduce using rule 53 (expression -> lvalue .)
    RBRACE          reduce using rule 53 (expression -> lvalue .)
    RPAREN          reduce using rule 53 (expression -> lvalue .)
    LBRACE          reduce using rule 53 (expression -> lvalue .)
    COMMA           reduce using rule 53 (expression -> lvalue .)


state 20

    (49) expression -> LPAREN . expression RPAREN
    (31) expression -> . PLUS expression
    (32) expression -> . MINUS expression
    (33) expression -> . NOT expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression EXPONENT expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression MODULUS expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression LESS_EQ expression
    (42) expression -> . expression GREATER expression
    (43) expression -> . expression GREATER_EQ expression
    (44) expression -> . expression IS_EQ expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . lvalue EQUALS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_LITERAL
    (53) expression -> . lvalue
    (52) lvalue -> . identifier
    (29) identifier -> . ID

    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 20
    INT_LITERAL     shift and go to state 21
    ID              shift and go to state 46

    expression                     shift and go to state 50
    lvalue                         shift and go to state 19
    identifier                     shift and go to state 26

state 21

    (50) expression -> INT_LITERAL .

    PLUS            reduce using rule 50 (expression -> INT_LITERAL .)
    MINUS           reduce using rule 50 (expression -> INT_LITERAL .)
    EXPONENT        reduce using rule 50 (expression -> INT_LITERAL .)
    TIMES           reduce using rule 50 (expression -> INT_LITERAL .)
    DIVIDE          reduce using rule 50 (expression -> INT_LITERAL .)
    MODULUS         reduce using rule 50 (expression -> INT_LITERAL .)
    LESS            reduce using rule 50 (expression -> INT_LITERAL .)
    LESS_EQ         reduce using rule 50 (expression -> INT_LITERAL .)
    GREATER         reduce using rule 50 (expression -> INT_LITERAL .)
    GREATER_EQ      reduce using rule 50 (expression -> INT_LITERAL .)
    IS_EQ           reduce using rule 50 (expression -> INT_LITERAL .)
    NOT_EQ          reduce using rule 50 (expression -> INT_LITERAL .)
    AND             reduce using rule 50 (expression -> INT_LITERAL .)
    OR              reduce using rule 50 (expression -> INT_LITERAL .)
    SEMICOLON       reduce using rule 50 (expression -> INT_LITERAL .)
    RBRACE          reduce using rule 50 (expression -> INT_LITERAL .)
    RPAREN          reduce using rule 50 (expression -> INT_LITERAL .)
    LBRACE          reduce using rule 50 (expression -> INT_LITERAL .)
    COMMA           reduce using rule 50 (expression -> INT_LITERAL .)


state 22

    (26) if_then_statement -> IF . expression block_statement
    (27) if_then_statement -> IF . expression block_statement ELSE block_statement
    (31) expression -> . PLUS expression
    (32) expression -> . MINUS expression
    (33) expression -> . NOT expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression EXPONENT expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression MODULUS expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression LESS_EQ expression
    (42) expression -> . expression GREATER expression
    (43) expression -> . expression GREATER_EQ expression
    (44) expression -> . expression IS_EQ expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . lvalue EQUALS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_LITERAL
    (53) expression -> . lvalue
    (52) lvalue -> . identifier
    (29) identifier -> . ID

    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 20
    INT_LITERAL     shift and go to state 21
    ID              shift and go to state 46

    expression                     shift and go to state 51
    lvalue                         shift and go to state 19
    identifier                     shift and go to state 26

state 23

    (28) while_statement -> WHILE . expression block_statement
    (31) expression -> . PLUS expression
    (32) expression -> . MINUS expression
    (33) expression -> . NOT expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression EXPONENT expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression MODULUS expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression LESS_EQ expression
    (42) expression -> . expression GREATER expression
    (43) expression -> . expression GREATER_EQ expression
    (44) expression -> . expression IS_EQ expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . lvalue EQUALS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_LITERAL
    (53) expression -> . lvalue
    (52) lvalue -> . identifier
    (29) identifier -> . ID

    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 20
    INT_LITERAL     shift and go to state 21
    ID              shift and go to state 46

    expression                     shift and go to state 52
    lvalue                         shift and go to state 19
    identifier                     shift and go to state 26

state 24

    (11) read_statement -> READ . LPAREN lvalue lvalue_list RPAREN

    LPAREN          shift and go to state 53


state 25

    (14) write_statement -> WRITE . LPAREN expr_string expr_string_list RPAREN

    LPAREN          shift and go to state 54


state 26

    (52) lvalue -> identifier .

    EQUALS          reduce using rule 52 (lvalue -> identifier .)
    PLUS            reduce using rule 52 (lvalue -> identifier .)
    MINUS           reduce using rule 52 (lvalue -> identifier .)
    EXPONENT        reduce using rule 52 (lvalue -> identifier .)
    TIMES           reduce using rule 52 (lvalue -> identifier .)
    DIVIDE          reduce using rule 52 (lvalue -> identifier .)
    MODULUS         reduce using rule 52 (lvalue -> identifier .)
    LESS            reduce using rule 52 (lvalue -> identifier .)
    LESS_EQ         reduce using rule 52 (lvalue -> identifier .)
    GREATER         reduce using rule 52 (lvalue -> identifier .)
    GREATER_EQ      reduce using rule 52 (lvalue -> identifier .)
    IS_EQ           reduce using rule 52 (lvalue -> identifier .)
    NOT_EQ          reduce using rule 52 (lvalue -> identifier .)
    AND             reduce using rule 52 (lvalue -> identifier .)
    OR              reduce using rule 52 (lvalue -> identifier .)
    SEMICOLON       reduce using rule 52 (lvalue -> identifier .)
    RBRACE          reduce using rule 52 (lvalue -> identifier .)
    RPAREN          reduce using rule 52 (lvalue -> identifier .)
    LBRACE          reduce using rule 52 (lvalue -> identifier .)
    COMMA           reduce using rule 52 (lvalue -> identifier .)


state 27

    (4) block_statement -> LBRACE statement_decl_list semicolon_opt . RBRACE

    RBRACE          shift and go to state 55


state 28

    (18) statement_decl_list -> statement_decl_list SEMICOLON . statement_decl
    (3) semicolon_opt -> SEMICOLON .
    (21) statement_decl -> . statement
    (22) statement_decl -> . decl
    (5) statement -> . expression
    (6) statement -> . block_statement
    (7) statement -> . if_then_statement
    (8) statement -> . while_statement
    (9) statement -> . read_statement
    (10) statement -> . write_statement
    (23) decl -> . ID COLON type Initiation
    (31) expression -> . PLUS expression
    (32) expression -> . MINUS expression
    (33) expression -> . NOT expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression EXPONENT expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression MODULUS expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression LESS_EQ expression
    (42) expression -> . expression GREATER expression
    (43) expression -> . expression GREATER_EQ expression
    (44) expression -> . expression IS_EQ expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . lvalue EQUALS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_LITERAL
    (53) expression -> . lvalue
    (4) block_statement -> . LBRACE statement_decl_list semicolon_opt RBRACE
    (26) if_then_statement -> . IF expression block_statement
    (27) if_then_statement -> . IF expression block_statement ELSE block_statement
    (28) while_statement -> . WHILE expression block_statement
    (11) read_statement -> . READ LPAREN lvalue lvalue_list RPAREN
    (14) write_statement -> . WRITE LPAREN expr_string expr_string_list RPAREN
    (52) lvalue -> . identifier
    (29) identifier -> . ID

    RBRACE          reduce using rule 3 (semicolon_opt -> SEMICOLON .)
    ID              shift and go to state 15
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 20
    INT_LITERAL     shift and go to state 21
    LBRACE          shift and go to state 3
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    READ            shift and go to state 24
    WRITE           shift and go to state 25

    statement_decl                 shift and go to state 56
    statement                      shift and go to state 7
    decl                           shift and go to state 8
    expression                     shift and go to state 9
    block_statement                shift and go to state 10
    if_then_statement              shift and go to state 11
    while_statement                shift and go to state 12
    read_statement                 shift and go to state 13
    write_statement                shift and go to state 14
    lvalue                         shift and go to state 19
    identifier                     shift and go to state 26

state 29

    (2) semicolon_opt -> epsilon .

    RBRACE          reduce using rule 2 (semicolon_opt -> epsilon .)


state 30

    (34) expression -> expression PLUS . expression
    (31) expression -> . PLUS expression
    (32) expression -> . MINUS expression
    (33) expression -> . NOT expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression EXPONENT expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression MODULUS expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression LESS_EQ expression
    (42) expression -> . expression GREATER expression
    (43) expression -> . expression GREATER_EQ expression
    (44) expression -> . expression IS_EQ expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . lvalue EQUALS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_LITERAL
    (53) expression -> . lvalue
    (52) lvalue -> . identifier
    (29) identifier -> . ID

    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 20
    INT_LITERAL     shift and go to state 21
    ID              shift and go to state 46

    expression                     shift and go to state 57
    lvalue                         shift and go to state 19
    identifier                     shift and go to state 26

state 31

    (35) expression -> expression MINUS . expression
    (31) expression -> . PLUS expression
    (32) expression -> . MINUS expression
    (33) expression -> . NOT expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression EXPONENT expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression MODULUS expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression LESS_EQ expression
    (42) expression -> . expression GREATER expression
    (43) expression -> . expression GREATER_EQ expression
    (44) expression -> . expression IS_EQ expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . lvalue EQUALS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_LITERAL
    (53) expression -> . lvalue
    (52) lvalue -> . identifier
    (29) identifier -> . ID

    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 20
    INT_LITERAL     shift and go to state 21
    ID              shift and go to state 46

    expression                     shift and go to state 58
    lvalue                         shift and go to state 19
    identifier                     shift and go to state 26

state 32

    (36) expression -> expression EXPONENT . expression
    (31) expression -> . PLUS expression
    (32) expression -> . MINUS expression
    (33) expression -> . NOT expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression EXPONENT expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression MODULUS expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression LESS_EQ expression
    (42) expression -> . expression GREATER expression
    (43) expression -> . expression GREATER_EQ expression
    (44) expression -> . expression IS_EQ expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . lvalue EQUALS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_LITERAL
    (53) expression -> . lvalue
    (52) lvalue -> . identifier
    (29) identifier -> . ID

    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 20
    INT_LITERAL     shift and go to state 21
    ID              shift and go to state 46

    expression                     shift and go to state 59
    lvalue                         shift and go to state 19
    identifier                     shift and go to state 26

state 33

    (37) expression -> expression TIMES . expression
    (31) expression -> . PLUS expression
    (32) expression -> . MINUS expression
    (33) expression -> . NOT expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression EXPONENT expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression MODULUS expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression LESS_EQ expression
    (42) expression -> . expression GREATER expression
    (43) expression -> . expression GREATER_EQ expression
    (44) expression -> . expression IS_EQ expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . lvalue EQUALS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_LITERAL
    (53) expression -> . lvalue
    (52) lvalue -> . identifier
    (29) identifier -> . ID

    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 20
    INT_LITERAL     shift and go to state 21
    ID              shift and go to state 46

    expression                     shift and go to state 60
    lvalue                         shift and go to state 19
    identifier                     shift and go to state 26

state 34

    (38) expression -> expression DIVIDE . expression
    (31) expression -> . PLUS expression
    (32) expression -> . MINUS expression
    (33) expression -> . NOT expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression EXPONENT expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression MODULUS expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression LESS_EQ expression
    (42) expression -> . expression GREATER expression
    (43) expression -> . expression GREATER_EQ expression
    (44) expression -> . expression IS_EQ expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . lvalue EQUALS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_LITERAL
    (53) expression -> . lvalue
    (52) lvalue -> . identifier
    (29) identifier -> . ID

    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 20
    INT_LITERAL     shift and go to state 21
    ID              shift and go to state 46

    expression                     shift and go to state 61
    lvalue                         shift and go to state 19
    identifier                     shift and go to state 26

state 35

    (39) expression -> expression MODULUS . expression
    (31) expression -> . PLUS expression
    (32) expression -> . MINUS expression
    (33) expression -> . NOT expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression EXPONENT expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression MODULUS expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression LESS_EQ expression
    (42) expression -> . expression GREATER expression
    (43) expression -> . expression GREATER_EQ expression
    (44) expression -> . expression IS_EQ expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . lvalue EQUALS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_LITERAL
    (53) expression -> . lvalue
    (52) lvalue -> . identifier
    (29) identifier -> . ID

    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 20
    INT_LITERAL     shift and go to state 21
    ID              shift and go to state 46

    expression                     shift and go to state 62
    lvalue                         shift and go to state 19
    identifier                     shift and go to state 26

state 36

    (40) expression -> expression LESS . expression
    (31) expression -> . PLUS expression
    (32) expression -> . MINUS expression
    (33) expression -> . NOT expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression EXPONENT expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression MODULUS expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression LESS_EQ expression
    (42) expression -> . expression GREATER expression
    (43) expression -> . expression GREATER_EQ expression
    (44) expression -> . expression IS_EQ expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . lvalue EQUALS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_LITERAL
    (53) expression -> . lvalue
    (52) lvalue -> . identifier
    (29) identifier -> . ID

    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 20
    INT_LITERAL     shift and go to state 21
    ID              shift and go to state 46

    expression                     shift and go to state 63
    lvalue                         shift and go to state 19
    identifier                     shift and go to state 26

state 37

    (41) expression -> expression LESS_EQ . expression
    (31) expression -> . PLUS expression
    (32) expression -> . MINUS expression
    (33) expression -> . NOT expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression EXPONENT expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression MODULUS expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression LESS_EQ expression
    (42) expression -> . expression GREATER expression
    (43) expression -> . expression GREATER_EQ expression
    (44) expression -> . expression IS_EQ expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . lvalue EQUALS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_LITERAL
    (53) expression -> . lvalue
    (52) lvalue -> . identifier
    (29) identifier -> . ID

    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 20
    INT_LITERAL     shift and go to state 21
    ID              shift and go to state 46

    expression                     shift and go to state 64
    lvalue                         shift and go to state 19
    identifier                     shift and go to state 26

state 38

    (42) expression -> expression GREATER . expression
    (31) expression -> . PLUS expression
    (32) expression -> . MINUS expression
    (33) expression -> . NOT expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression EXPONENT expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression MODULUS expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression LESS_EQ expression
    (42) expression -> . expression GREATER expression
    (43) expression -> . expression GREATER_EQ expression
    (44) expression -> . expression IS_EQ expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . lvalue EQUALS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_LITERAL
    (53) expression -> . lvalue
    (52) lvalue -> . identifier
    (29) identifier -> . ID

    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 20
    INT_LITERAL     shift and go to state 21
    ID              shift and go to state 46

    expression                     shift and go to state 65
    lvalue                         shift and go to state 19
    identifier                     shift and go to state 26

state 39

    (43) expression -> expression GREATER_EQ . expression
    (31) expression -> . PLUS expression
    (32) expression -> . MINUS expression
    (33) expression -> . NOT expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression EXPONENT expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression MODULUS expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression LESS_EQ expression
    (42) expression -> . expression GREATER expression
    (43) expression -> . expression GREATER_EQ expression
    (44) expression -> . expression IS_EQ expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . lvalue EQUALS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_LITERAL
    (53) expression -> . lvalue
    (52) lvalue -> . identifier
    (29) identifier -> . ID

    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 20
    INT_LITERAL     shift and go to state 21
    ID              shift and go to state 46

    expression                     shift and go to state 66
    lvalue                         shift and go to state 19
    identifier                     shift and go to state 26

state 40

    (44) expression -> expression IS_EQ . expression
    (31) expression -> . PLUS expression
    (32) expression -> . MINUS expression
    (33) expression -> . NOT expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression EXPONENT expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression MODULUS expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression LESS_EQ expression
    (42) expression -> . expression GREATER expression
    (43) expression -> . expression GREATER_EQ expression
    (44) expression -> . expression IS_EQ expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . lvalue EQUALS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_LITERAL
    (53) expression -> . lvalue
    (52) lvalue -> . identifier
    (29) identifier -> . ID

    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 20
    INT_LITERAL     shift and go to state 21
    ID              shift and go to state 46

    expression                     shift and go to state 67
    lvalue                         shift and go to state 19
    identifier                     shift and go to state 26

state 41

    (45) expression -> expression NOT_EQ . expression
    (31) expression -> . PLUS expression
    (32) expression -> . MINUS expression
    (33) expression -> . NOT expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression EXPONENT expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression MODULUS expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression LESS_EQ expression
    (42) expression -> . expression GREATER expression
    (43) expression -> . expression GREATER_EQ expression
    (44) expression -> . expression IS_EQ expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . lvalue EQUALS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_LITERAL
    (53) expression -> . lvalue
    (52) lvalue -> . identifier
    (29) identifier -> . ID

    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 20
    INT_LITERAL     shift and go to state 21
    ID              shift and go to state 46

    expression                     shift and go to state 68
    lvalue                         shift and go to state 19
    identifier                     shift and go to state 26

state 42

    (46) expression -> expression AND . expression
    (31) expression -> . PLUS expression
    (32) expression -> . MINUS expression
    (33) expression -> . NOT expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression EXPONENT expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression MODULUS expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression LESS_EQ expression
    (42) expression -> . expression GREATER expression
    (43) expression -> . expression GREATER_EQ expression
    (44) expression -> . expression IS_EQ expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . lvalue EQUALS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_LITERAL
    (53) expression -> . lvalue
    (52) lvalue -> . identifier
    (29) identifier -> . ID

    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 20
    INT_LITERAL     shift and go to state 21
    ID              shift and go to state 46

    expression                     shift and go to state 69
    lvalue                         shift and go to state 19
    identifier                     shift and go to state 26

state 43

    (47) expression -> expression OR . expression
    (31) expression -> . PLUS expression
    (32) expression -> . MINUS expression
    (33) expression -> . NOT expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression EXPONENT expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression MODULUS expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression LESS_EQ expression
    (42) expression -> . expression GREATER expression
    (43) expression -> . expression GREATER_EQ expression
    (44) expression -> . expression IS_EQ expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . lvalue EQUALS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_LITERAL
    (53) expression -> . lvalue
    (52) lvalue -> . identifier
    (29) identifier -> . ID

    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 20
    INT_LITERAL     shift and go to state 21
    ID              shift and go to state 46

    expression                     shift and go to state 70
    lvalue                         shift and go to state 19
    identifier                     shift and go to state 26

state 44

    (23) decl -> ID COLON . type Initiation
    (30) type -> . INT

    INT             shift and go to state 72

    type                           shift and go to state 71

state 45

    (31) expression -> PLUS expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . EXPONENT expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . MODULUS expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . LESS_EQ expression
    (42) expression -> expression . GREATER expression
    (43) expression -> expression . GREATER_EQ expression
    (44) expression -> expression . IS_EQ expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    PLUS            reduce using rule 31 (expression -> PLUS expression .)
    MINUS           reduce using rule 31 (expression -> PLUS expression .)
    EXPONENT        reduce using rule 31 (expression -> PLUS expression .)
    TIMES           reduce using rule 31 (expression -> PLUS expression .)
    DIVIDE          reduce using rule 31 (expression -> PLUS expression .)
    MODULUS         reduce using rule 31 (expression -> PLUS expression .)
    LESS            reduce using rule 31 (expression -> PLUS expression .)
    LESS_EQ         reduce using rule 31 (expression -> PLUS expression .)
    GREATER         reduce using rule 31 (expression -> PLUS expression .)
    GREATER_EQ      reduce using rule 31 (expression -> PLUS expression .)
    IS_EQ           reduce using rule 31 (expression -> PLUS expression .)
    NOT_EQ          reduce using rule 31 (expression -> PLUS expression .)
    AND             reduce using rule 31 (expression -> PLUS expression .)
    OR              reduce using rule 31 (expression -> PLUS expression .)
    SEMICOLON       reduce using rule 31 (expression -> PLUS expression .)
    RBRACE          reduce using rule 31 (expression -> PLUS expression .)
    RPAREN          reduce using rule 31 (expression -> PLUS expression .)
    LBRACE          reduce using rule 31 (expression -> PLUS expression .)
    COMMA           reduce using rule 31 (expression -> PLUS expression .)

  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! EXPONENT        [ shift and go to state 32 ]
  ! TIMES           [ shift and go to state 33 ]
  ! DIVIDE          [ shift and go to state 34 ]
  ! MODULUS         [ shift and go to state 35 ]
  ! LESS            [ shift and go to state 36 ]
  ! LESS_EQ         [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! GREATER_EQ      [ shift and go to state 39 ]
  ! IS_EQ           [ shift and go to state 40 ]
  ! NOT_EQ          [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]


state 46

    (29) identifier -> ID .

    EQUALS          reduce using rule 29 (identifier -> ID .)
    PLUS            reduce using rule 29 (identifier -> ID .)
    MINUS           reduce using rule 29 (identifier -> ID .)
    EXPONENT        reduce using rule 29 (identifier -> ID .)
    TIMES           reduce using rule 29 (identifier -> ID .)
    DIVIDE          reduce using rule 29 (identifier -> ID .)
    MODULUS         reduce using rule 29 (identifier -> ID .)
    LESS            reduce using rule 29 (identifier -> ID .)
    LESS_EQ         reduce using rule 29 (identifier -> ID .)
    GREATER         reduce using rule 29 (identifier -> ID .)
    GREATER_EQ      reduce using rule 29 (identifier -> ID .)
    IS_EQ           reduce using rule 29 (identifier -> ID .)
    NOT_EQ          reduce using rule 29 (identifier -> ID .)
    AND             reduce using rule 29 (identifier -> ID .)
    OR              reduce using rule 29 (identifier -> ID .)
    SEMICOLON       reduce using rule 29 (identifier -> ID .)
    RBRACE          reduce using rule 29 (identifier -> ID .)
    RPAREN          reduce using rule 29 (identifier -> ID .)
    LBRACE          reduce using rule 29 (identifier -> ID .)
    COMMA           reduce using rule 29 (identifier -> ID .)


state 47

    (32) expression -> MINUS expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . EXPONENT expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . MODULUS expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . LESS_EQ expression
    (42) expression -> expression . GREATER expression
    (43) expression -> expression . GREATER_EQ expression
    (44) expression -> expression . IS_EQ expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    PLUS            reduce using rule 32 (expression -> MINUS expression .)
    MINUS           reduce using rule 32 (expression -> MINUS expression .)
    EXPONENT        reduce using rule 32 (expression -> MINUS expression .)
    TIMES           reduce using rule 32 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 32 (expression -> MINUS expression .)
    MODULUS         reduce using rule 32 (expression -> MINUS expression .)
    LESS            reduce using rule 32 (expression -> MINUS expression .)
    LESS_EQ         reduce using rule 32 (expression -> MINUS expression .)
    GREATER         reduce using rule 32 (expression -> MINUS expression .)
    GREATER_EQ      reduce using rule 32 (expression -> MINUS expression .)
    IS_EQ           reduce using rule 32 (expression -> MINUS expression .)
    NOT_EQ          reduce using rule 32 (expression -> MINUS expression .)
    AND             reduce using rule 32 (expression -> MINUS expression .)
    OR              reduce using rule 32 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 32 (expression -> MINUS expression .)
    RBRACE          reduce using rule 32 (expression -> MINUS expression .)
    RPAREN          reduce using rule 32 (expression -> MINUS expression .)
    LBRACE          reduce using rule 32 (expression -> MINUS expression .)
    COMMA           reduce using rule 32 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! EXPONENT        [ shift and go to state 32 ]
  ! TIMES           [ shift and go to state 33 ]
  ! DIVIDE          [ shift and go to state 34 ]
  ! MODULUS         [ shift and go to state 35 ]
  ! LESS            [ shift and go to state 36 ]
  ! LESS_EQ         [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! GREATER_EQ      [ shift and go to state 39 ]
  ! IS_EQ           [ shift and go to state 40 ]
  ! NOT_EQ          [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]


state 48

    (33) expression -> NOT expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . EXPONENT expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . MODULUS expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . LESS_EQ expression
    (42) expression -> expression . GREATER expression
    (43) expression -> expression . GREATER_EQ expression
    (44) expression -> expression . IS_EQ expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    PLUS            reduce using rule 33 (expression -> NOT expression .)
    MINUS           reduce using rule 33 (expression -> NOT expression .)
    EXPONENT        reduce using rule 33 (expression -> NOT expression .)
    TIMES           reduce using rule 33 (expression -> NOT expression .)
    DIVIDE          reduce using rule 33 (expression -> NOT expression .)
    MODULUS         reduce using rule 33 (expression -> NOT expression .)
    LESS            reduce using rule 33 (expression -> NOT expression .)
    LESS_EQ         reduce using rule 33 (expression -> NOT expression .)
    GREATER         reduce using rule 33 (expression -> NOT expression .)
    GREATER_EQ      reduce using rule 33 (expression -> NOT expression .)
    IS_EQ           reduce using rule 33 (expression -> NOT expression .)
    NOT_EQ          reduce using rule 33 (expression -> NOT expression .)
    AND             reduce using rule 33 (expression -> NOT expression .)
    OR              reduce using rule 33 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 33 (expression -> NOT expression .)
    RBRACE          reduce using rule 33 (expression -> NOT expression .)
    RPAREN          reduce using rule 33 (expression -> NOT expression .)
    LBRACE          reduce using rule 33 (expression -> NOT expression .)
    COMMA           reduce using rule 33 (expression -> NOT expression .)

  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! EXPONENT        [ shift and go to state 32 ]
  ! TIMES           [ shift and go to state 33 ]
  ! DIVIDE          [ shift and go to state 34 ]
  ! MODULUS         [ shift and go to state 35 ]
  ! LESS            [ shift and go to state 36 ]
  ! LESS_EQ         [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! GREATER_EQ      [ shift and go to state 39 ]
  ! IS_EQ           [ shift and go to state 40 ]
  ! NOT_EQ          [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]


state 49

    (48) expression -> lvalue EQUALS . expression
    (31) expression -> . PLUS expression
    (32) expression -> . MINUS expression
    (33) expression -> . NOT expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression EXPONENT expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression MODULUS expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression LESS_EQ expression
    (42) expression -> . expression GREATER expression
    (43) expression -> . expression GREATER_EQ expression
    (44) expression -> . expression IS_EQ expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . lvalue EQUALS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_LITERAL
    (53) expression -> . lvalue
    (52) lvalue -> . identifier
    (29) identifier -> . ID

    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 20
    INT_LITERAL     shift and go to state 21
    ID              shift and go to state 46

    lvalue                         shift and go to state 19
    expression                     shift and go to state 73
    identifier                     shift and go to state 26

state 50

    (49) expression -> LPAREN expression . RPAREN
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . EXPONENT expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . MODULUS expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . LESS_EQ expression
    (42) expression -> expression . GREATER expression
    (43) expression -> expression . GREATER_EQ expression
    (44) expression -> expression . IS_EQ expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    RPAREN          shift and go to state 74
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    EXPONENT        shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35
    LESS            shift and go to state 36
    LESS_EQ         shift and go to state 37
    GREATER         shift and go to state 38
    GREATER_EQ      shift and go to state 39
    IS_EQ           shift and go to state 40
    NOT_EQ          shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43


state 51

    (26) if_then_statement -> IF expression . block_statement
    (27) if_then_statement -> IF expression . block_statement ELSE block_statement
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . EXPONENT expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . MODULUS expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . LESS_EQ expression
    (42) expression -> expression . GREATER expression
    (43) expression -> expression . GREATER_EQ expression
    (44) expression -> expression . IS_EQ expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression
    (4) block_statement -> . LBRACE statement_decl_list semicolon_opt RBRACE

    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    EXPONENT        shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35
    LESS            shift and go to state 36
    LESS_EQ         shift and go to state 37
    GREATER         shift and go to state 38
    GREATER_EQ      shift and go to state 39
    IS_EQ           shift and go to state 40
    NOT_EQ          shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    LBRACE          shift and go to state 3

    block_statement                shift and go to state 75

state 52

    (28) while_statement -> WHILE expression . block_statement
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . EXPONENT expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . MODULUS expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . LESS_EQ expression
    (42) expression -> expression . GREATER expression
    (43) expression -> expression . GREATER_EQ expression
    (44) expression -> expression . IS_EQ expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression
    (4) block_statement -> . LBRACE statement_decl_list semicolon_opt RBRACE

    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    EXPONENT        shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35
    LESS            shift and go to state 36
    LESS_EQ         shift and go to state 37
    GREATER         shift and go to state 38
    GREATER_EQ      shift and go to state 39
    IS_EQ           shift and go to state 40
    NOT_EQ          shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    LBRACE          shift and go to state 3

    block_statement                shift and go to state 76

state 53

    (11) read_statement -> READ LPAREN . lvalue lvalue_list RPAREN
    (52) lvalue -> . identifier
    (29) identifier -> . ID

    ID              shift and go to state 46

    lvalue                         shift and go to state 77
    identifier                     shift and go to state 26

state 54

    (14) write_statement -> WRITE LPAREN . expr_string expr_string_list RPAREN
    (17) expr_string -> . expression
    (51) expr_string -> . STRING_LITERAL
    (31) expression -> . PLUS expression
    (32) expression -> . MINUS expression
    (33) expression -> . NOT expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression EXPONENT expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression MODULUS expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression LESS_EQ expression
    (42) expression -> . expression GREATER expression
    (43) expression -> . expression GREATER_EQ expression
    (44) expression -> . expression IS_EQ expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . lvalue EQUALS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_LITERAL
    (53) expression -> . lvalue
    (52) lvalue -> . identifier
    (29) identifier -> . ID

    STRING_LITERAL  shift and go to state 80
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 20
    INT_LITERAL     shift and go to state 21
    ID              shift and go to state 46

    expr_string                    shift and go to state 78
    expression                     shift and go to state 79
    lvalue                         shift and go to state 19
    identifier                     shift and go to state 26

state 55

    (4) block_statement -> LBRACE statement_decl_list semicolon_opt RBRACE .

    $end            reduce using rule 4 (block_statement -> LBRACE statement_decl_list semicolon_opt RBRACE .)
    SEMICOLON       reduce using rule 4 (block_statement -> LBRACE statement_decl_list semicolon_opt RBRACE .)
    RBRACE          reduce using rule 4 (block_statement -> LBRACE statement_decl_list semicolon_opt RBRACE .)
    ELSE            reduce using rule 4 (block_statement -> LBRACE statement_decl_list semicolon_opt RBRACE .)


state 56

    (18) statement_decl_list -> statement_decl_list SEMICOLON statement_decl .

    SEMICOLON       reduce using rule 18 (statement_decl_list -> statement_decl_list SEMICOLON statement_decl .)
    RBRACE          reduce using rule 18 (statement_decl_list -> statement_decl_list SEMICOLON statement_decl .)


state 57

    (34) expression -> expression PLUS expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . EXPONENT expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . MODULUS expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . LESS_EQ expression
    (42) expression -> expression . GREATER expression
    (43) expression -> expression . GREATER_EQ expression
    (44) expression -> expression . IS_EQ expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    PLUS            reduce using rule 34 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 34 (expression -> expression PLUS expression .)
    LESS            reduce using rule 34 (expression -> expression PLUS expression .)
    LESS_EQ         reduce using rule 34 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 34 (expression -> expression PLUS expression .)
    GREATER_EQ      reduce using rule 34 (expression -> expression PLUS expression .)
    IS_EQ           reduce using rule 34 (expression -> expression PLUS expression .)
    NOT_EQ          reduce using rule 34 (expression -> expression PLUS expression .)
    AND             reduce using rule 34 (expression -> expression PLUS expression .)
    OR              reduce using rule 34 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 34 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 34 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 34 (expression -> expression PLUS expression .)
    LBRACE          reduce using rule 34 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 34 (expression -> expression PLUS expression .)
    EXPONENT        shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35

  ! EXPONENT        [ reduce using rule 34 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression PLUS expression .) ]
  ! MODULUS         [ reduce using rule 34 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! LESS            [ shift and go to state 36 ]
  ! LESS_EQ         [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! GREATER_EQ      [ shift and go to state 39 ]
  ! IS_EQ           [ shift and go to state 40 ]
  ! NOT_EQ          [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]


state 58

    (35) expression -> expression MINUS expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . EXPONENT expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . MODULUS expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . LESS_EQ expression
    (42) expression -> expression . GREATER expression
    (43) expression -> expression . GREATER_EQ expression
    (44) expression -> expression . IS_EQ expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    PLUS            reduce using rule 35 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 35 (expression -> expression MINUS expression .)
    LESS            reduce using rule 35 (expression -> expression MINUS expression .)
    LESS_EQ         reduce using rule 35 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 35 (expression -> expression MINUS expression .)
    GREATER_EQ      reduce using rule 35 (expression -> expression MINUS expression .)
    IS_EQ           reduce using rule 35 (expression -> expression MINUS expression .)
    NOT_EQ          reduce using rule 35 (expression -> expression MINUS expression .)
    AND             reduce using rule 35 (expression -> expression MINUS expression .)
    OR              reduce using rule 35 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 35 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 35 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 35 (expression -> expression MINUS expression .)
    LBRACE          reduce using rule 35 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 35 (expression -> expression MINUS expression .)
    EXPONENT        shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35

  ! EXPONENT        [ reduce using rule 35 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression MINUS expression .) ]
  ! MODULUS         [ reduce using rule 35 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! LESS            [ shift and go to state 36 ]
  ! LESS_EQ         [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! GREATER_EQ      [ shift and go to state 39 ]
  ! IS_EQ           [ shift and go to state 40 ]
  ! NOT_EQ          [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]


state 59

    (36) expression -> expression EXPONENT expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . EXPONENT expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . MODULUS expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . LESS_EQ expression
    (42) expression -> expression . GREATER expression
    (43) expression -> expression . GREATER_EQ expression
    (44) expression -> expression . IS_EQ expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    PLUS            reduce using rule 36 (expression -> expression EXPONENT expression .)
    MINUS           reduce using rule 36 (expression -> expression EXPONENT expression .)
    TIMES           reduce using rule 36 (expression -> expression EXPONENT expression .)
    DIVIDE          reduce using rule 36 (expression -> expression EXPONENT expression .)
    MODULUS         reduce using rule 36 (expression -> expression EXPONENT expression .)
    LESS            reduce using rule 36 (expression -> expression EXPONENT expression .)
    LESS_EQ         reduce using rule 36 (expression -> expression EXPONENT expression .)
    GREATER         reduce using rule 36 (expression -> expression EXPONENT expression .)
    GREATER_EQ      reduce using rule 36 (expression -> expression EXPONENT expression .)
    IS_EQ           reduce using rule 36 (expression -> expression EXPONENT expression .)
    NOT_EQ          reduce using rule 36 (expression -> expression EXPONENT expression .)
    AND             reduce using rule 36 (expression -> expression EXPONENT expression .)
    OR              reduce using rule 36 (expression -> expression EXPONENT expression .)
    SEMICOLON       reduce using rule 36 (expression -> expression EXPONENT expression .)
    RBRACE          reduce using rule 36 (expression -> expression EXPONENT expression .)
    RPAREN          reduce using rule 36 (expression -> expression EXPONENT expression .)
    LBRACE          reduce using rule 36 (expression -> expression EXPONENT expression .)
    COMMA           reduce using rule 36 (expression -> expression EXPONENT expression .)
    EXPONENT        shift and go to state 32

  ! EXPONENT        [ reduce using rule 36 (expression -> expression EXPONENT expression .) ]
  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! TIMES           [ shift and go to state 33 ]
  ! DIVIDE          [ shift and go to state 34 ]
  ! MODULUS         [ shift and go to state 35 ]
  ! LESS            [ shift and go to state 36 ]
  ! LESS_EQ         [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! GREATER_EQ      [ shift and go to state 39 ]
  ! IS_EQ           [ shift and go to state 40 ]
  ! NOT_EQ          [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]


state 60

    (37) expression -> expression TIMES expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . EXPONENT expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . MODULUS expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . LESS_EQ expression
    (42) expression -> expression . GREATER expression
    (43) expression -> expression . GREATER_EQ expression
    (44) expression -> expression . IS_EQ expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    PLUS            reduce using rule 37 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 37 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 37 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 37 (expression -> expression TIMES expression .)
    MODULUS         reduce using rule 37 (expression -> expression TIMES expression .)
    LESS            reduce using rule 37 (expression -> expression TIMES expression .)
    LESS_EQ         reduce using rule 37 (expression -> expression TIMES expression .)
    GREATER         reduce using rule 37 (expression -> expression TIMES expression .)
    GREATER_EQ      reduce using rule 37 (expression -> expression TIMES expression .)
    IS_EQ           reduce using rule 37 (expression -> expression TIMES expression .)
    NOT_EQ          reduce using rule 37 (expression -> expression TIMES expression .)
    AND             reduce using rule 37 (expression -> expression TIMES expression .)
    OR              reduce using rule 37 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 37 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 37 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 37 (expression -> expression TIMES expression .)
    LBRACE          reduce using rule 37 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 37 (expression -> expression TIMES expression .)
    EXPONENT        shift and go to state 32

  ! EXPONENT        [ reduce using rule 37 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! TIMES           [ shift and go to state 33 ]
  ! DIVIDE          [ shift and go to state 34 ]
  ! MODULUS         [ shift and go to state 35 ]
  ! LESS            [ shift and go to state 36 ]
  ! LESS_EQ         [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! GREATER_EQ      [ shift and go to state 39 ]
  ! IS_EQ           [ shift and go to state 40 ]
  ! NOT_EQ          [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]


state 61

    (38) expression -> expression DIVIDE expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . EXPONENT expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . MODULUS expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . LESS_EQ expression
    (42) expression -> expression . GREATER expression
    (43) expression -> expression . GREATER_EQ expression
    (44) expression -> expression . IS_EQ expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    PLUS            reduce using rule 38 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 38 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 38 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 38 (expression -> expression DIVIDE expression .)
    MODULUS         reduce using rule 38 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 38 (expression -> expression DIVIDE expression .)
    LESS_EQ         reduce using rule 38 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 38 (expression -> expression DIVIDE expression .)
    GREATER_EQ      reduce using rule 38 (expression -> expression DIVIDE expression .)
    IS_EQ           reduce using rule 38 (expression -> expression DIVIDE expression .)
    NOT_EQ          reduce using rule 38 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 38 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 38 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 38 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 38 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 38 (expression -> expression DIVIDE expression .)
    LBRACE          reduce using rule 38 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 38 (expression -> expression DIVIDE expression .)
    EXPONENT        shift and go to state 32

  ! EXPONENT        [ reduce using rule 38 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! TIMES           [ shift and go to state 33 ]
  ! DIVIDE          [ shift and go to state 34 ]
  ! MODULUS         [ shift and go to state 35 ]
  ! LESS            [ shift and go to state 36 ]
  ! LESS_EQ         [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! GREATER_EQ      [ shift and go to state 39 ]
  ! IS_EQ           [ shift and go to state 40 ]
  ! NOT_EQ          [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]


state 62

    (39) expression -> expression MODULUS expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . EXPONENT expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . MODULUS expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . LESS_EQ expression
    (42) expression -> expression . GREATER expression
    (43) expression -> expression . GREATER_EQ expression
    (44) expression -> expression . IS_EQ expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    PLUS            reduce using rule 39 (expression -> expression MODULUS expression .)
    MINUS           reduce using rule 39 (expression -> expression MODULUS expression .)
    TIMES           reduce using rule 39 (expression -> expression MODULUS expression .)
    DIVIDE          reduce using rule 39 (expression -> expression MODULUS expression .)
    MODULUS         reduce using rule 39 (expression -> expression MODULUS expression .)
    LESS            reduce using rule 39 (expression -> expression MODULUS expression .)
    LESS_EQ         reduce using rule 39 (expression -> expression MODULUS expression .)
    GREATER         reduce using rule 39 (expression -> expression MODULUS expression .)
    GREATER_EQ      reduce using rule 39 (expression -> expression MODULUS expression .)
    IS_EQ           reduce using rule 39 (expression -> expression MODULUS expression .)
    NOT_EQ          reduce using rule 39 (expression -> expression MODULUS expression .)
    AND             reduce using rule 39 (expression -> expression MODULUS expression .)
    OR              reduce using rule 39 (expression -> expression MODULUS expression .)
    SEMICOLON       reduce using rule 39 (expression -> expression MODULUS expression .)
    RBRACE          reduce using rule 39 (expression -> expression MODULUS expression .)
    RPAREN          reduce using rule 39 (expression -> expression MODULUS expression .)
    LBRACE          reduce using rule 39 (expression -> expression MODULUS expression .)
    COMMA           reduce using rule 39 (expression -> expression MODULUS expression .)
    EXPONENT        shift and go to state 32

  ! EXPONENT        [ reduce using rule 39 (expression -> expression MODULUS expression .) ]
  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! TIMES           [ shift and go to state 33 ]
  ! DIVIDE          [ shift and go to state 34 ]
  ! MODULUS         [ shift and go to state 35 ]
  ! LESS            [ shift and go to state 36 ]
  ! LESS_EQ         [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! GREATER_EQ      [ shift and go to state 39 ]
  ! IS_EQ           [ shift and go to state 40 ]
  ! NOT_EQ          [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]


state 63

    (40) expression -> expression LESS expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . EXPONENT expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . MODULUS expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . LESS_EQ expression
    (42) expression -> expression . GREATER expression
    (43) expression -> expression . GREATER_EQ expression
    (44) expression -> expression . IS_EQ expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    LESS            reduce using rule 40 (expression -> expression LESS expression .)
    LESS_EQ         reduce using rule 40 (expression -> expression LESS expression .)
    GREATER         reduce using rule 40 (expression -> expression LESS expression .)
    GREATER_EQ      reduce using rule 40 (expression -> expression LESS expression .)
    IS_EQ           reduce using rule 40 (expression -> expression LESS expression .)
    NOT_EQ          reduce using rule 40 (expression -> expression LESS expression .)
    AND             reduce using rule 40 (expression -> expression LESS expression .)
    OR              reduce using rule 40 (expression -> expression LESS expression .)
    SEMICOLON       reduce using rule 40 (expression -> expression LESS expression .)
    RBRACE          reduce using rule 40 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 40 (expression -> expression LESS expression .)
    LBRACE          reduce using rule 40 (expression -> expression LESS expression .)
    COMMA           reduce using rule 40 (expression -> expression LESS expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    EXPONENT        shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35

  ! PLUS            [ reduce using rule 40 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression LESS expression .) ]
  ! EXPONENT        [ reduce using rule 40 (expression -> expression LESS expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression LESS expression .) ]
  ! MODULUS         [ reduce using rule 40 (expression -> expression LESS expression .) ]
  ! LESS            [ shift and go to state 36 ]
  ! LESS_EQ         [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! GREATER_EQ      [ shift and go to state 39 ]
  ! IS_EQ           [ shift and go to state 40 ]
  ! NOT_EQ          [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]


state 64

    (41) expression -> expression LESS_EQ expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . EXPONENT expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . MODULUS expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . LESS_EQ expression
    (42) expression -> expression . GREATER expression
    (43) expression -> expression . GREATER_EQ expression
    (44) expression -> expression . IS_EQ expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    LESS            reduce using rule 41 (expression -> expression LESS_EQ expression .)
    LESS_EQ         reduce using rule 41 (expression -> expression LESS_EQ expression .)
    GREATER         reduce using rule 41 (expression -> expression LESS_EQ expression .)
    GREATER_EQ      reduce using rule 41 (expression -> expression LESS_EQ expression .)
    IS_EQ           reduce using rule 41 (expression -> expression LESS_EQ expression .)
    NOT_EQ          reduce using rule 41 (expression -> expression LESS_EQ expression .)
    AND             reduce using rule 41 (expression -> expression LESS_EQ expression .)
    OR              reduce using rule 41 (expression -> expression LESS_EQ expression .)
    SEMICOLON       reduce using rule 41 (expression -> expression LESS_EQ expression .)
    RBRACE          reduce using rule 41 (expression -> expression LESS_EQ expression .)
    RPAREN          reduce using rule 41 (expression -> expression LESS_EQ expression .)
    LBRACE          reduce using rule 41 (expression -> expression LESS_EQ expression .)
    COMMA           reduce using rule 41 (expression -> expression LESS_EQ expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    EXPONENT        shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35

  ! PLUS            [ reduce using rule 41 (expression -> expression LESS_EQ expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression LESS_EQ expression .) ]
  ! EXPONENT        [ reduce using rule 41 (expression -> expression LESS_EQ expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression LESS_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression LESS_EQ expression .) ]
  ! MODULUS         [ reduce using rule 41 (expression -> expression LESS_EQ expression .) ]
  ! LESS            [ shift and go to state 36 ]
  ! LESS_EQ         [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! GREATER_EQ      [ shift and go to state 39 ]
  ! IS_EQ           [ shift and go to state 40 ]
  ! NOT_EQ          [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]


state 65

    (42) expression -> expression GREATER expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . EXPONENT expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . MODULUS expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . LESS_EQ expression
    (42) expression -> expression . GREATER expression
    (43) expression -> expression . GREATER_EQ expression
    (44) expression -> expression . IS_EQ expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    LESS            reduce using rule 42 (expression -> expression GREATER expression .)
    LESS_EQ         reduce using rule 42 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 42 (expression -> expression GREATER expression .)
    GREATER_EQ      reduce using rule 42 (expression -> expression GREATER expression .)
    IS_EQ           reduce using rule 42 (expression -> expression GREATER expression .)
    NOT_EQ          reduce using rule 42 (expression -> expression GREATER expression .)
    AND             reduce using rule 42 (expression -> expression GREATER expression .)
    OR              reduce using rule 42 (expression -> expression GREATER expression .)
    SEMICOLON       reduce using rule 42 (expression -> expression GREATER expression .)
    RBRACE          reduce using rule 42 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 42 (expression -> expression GREATER expression .)
    LBRACE          reduce using rule 42 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 42 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    EXPONENT        shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35

  ! PLUS            [ reduce using rule 42 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression GREATER expression .) ]
  ! EXPONENT        [ reduce using rule 42 (expression -> expression GREATER expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression GREATER expression .) ]
  ! MODULUS         [ reduce using rule 42 (expression -> expression GREATER expression .) ]
  ! LESS            [ shift and go to state 36 ]
  ! LESS_EQ         [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! GREATER_EQ      [ shift and go to state 39 ]
  ! IS_EQ           [ shift and go to state 40 ]
  ! NOT_EQ          [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]


state 66

    (43) expression -> expression GREATER_EQ expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . EXPONENT expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . MODULUS expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . LESS_EQ expression
    (42) expression -> expression . GREATER expression
    (43) expression -> expression . GREATER_EQ expression
    (44) expression -> expression . IS_EQ expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    LESS            reduce using rule 43 (expression -> expression GREATER_EQ expression .)
    LESS_EQ         reduce using rule 43 (expression -> expression GREATER_EQ expression .)
    GREATER         reduce using rule 43 (expression -> expression GREATER_EQ expression .)
    GREATER_EQ      reduce using rule 43 (expression -> expression GREATER_EQ expression .)
    IS_EQ           reduce using rule 43 (expression -> expression GREATER_EQ expression .)
    NOT_EQ          reduce using rule 43 (expression -> expression GREATER_EQ expression .)
    AND             reduce using rule 43 (expression -> expression GREATER_EQ expression .)
    OR              reduce using rule 43 (expression -> expression GREATER_EQ expression .)
    SEMICOLON       reduce using rule 43 (expression -> expression GREATER_EQ expression .)
    RBRACE          reduce using rule 43 (expression -> expression GREATER_EQ expression .)
    RPAREN          reduce using rule 43 (expression -> expression GREATER_EQ expression .)
    LBRACE          reduce using rule 43 (expression -> expression GREATER_EQ expression .)
    COMMA           reduce using rule 43 (expression -> expression GREATER_EQ expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    EXPONENT        shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35

  ! PLUS            [ reduce using rule 43 (expression -> expression GREATER_EQ expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression GREATER_EQ expression .) ]
  ! EXPONENT        [ reduce using rule 43 (expression -> expression GREATER_EQ expression .) ]
  ! TIMES           [ reduce using rule 43 (expression -> expression GREATER_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression GREATER_EQ expression .) ]
  ! MODULUS         [ reduce using rule 43 (expression -> expression GREATER_EQ expression .) ]
  ! LESS            [ shift and go to state 36 ]
  ! LESS_EQ         [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! GREATER_EQ      [ shift and go to state 39 ]
  ! IS_EQ           [ shift and go to state 40 ]
  ! NOT_EQ          [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]


state 67

    (44) expression -> expression IS_EQ expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . EXPONENT expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . MODULUS expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . LESS_EQ expression
    (42) expression -> expression . GREATER expression
    (43) expression -> expression . GREATER_EQ expression
    (44) expression -> expression . IS_EQ expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    IS_EQ           reduce using rule 44 (expression -> expression IS_EQ expression .)
    NOT_EQ          reduce using rule 44 (expression -> expression IS_EQ expression .)
    AND             reduce using rule 44 (expression -> expression IS_EQ expression .)
    OR              reduce using rule 44 (expression -> expression IS_EQ expression .)
    SEMICOLON       reduce using rule 44 (expression -> expression IS_EQ expression .)
    RBRACE          reduce using rule 44 (expression -> expression IS_EQ expression .)
    RPAREN          reduce using rule 44 (expression -> expression IS_EQ expression .)
    LBRACE          reduce using rule 44 (expression -> expression IS_EQ expression .)
    COMMA           reduce using rule 44 (expression -> expression IS_EQ expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    EXPONENT        shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35
    LESS            shift and go to state 36
    LESS_EQ         shift and go to state 37
    GREATER         shift and go to state 38
    GREATER_EQ      shift and go to state 39

  ! PLUS            [ reduce using rule 44 (expression -> expression IS_EQ expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression IS_EQ expression .) ]
  ! EXPONENT        [ reduce using rule 44 (expression -> expression IS_EQ expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> expression IS_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression IS_EQ expression .) ]
  ! MODULUS         [ reduce using rule 44 (expression -> expression IS_EQ expression .) ]
  ! LESS            [ reduce using rule 44 (expression -> expression IS_EQ expression .) ]
  ! LESS_EQ         [ reduce using rule 44 (expression -> expression IS_EQ expression .) ]
  ! GREATER         [ reduce using rule 44 (expression -> expression IS_EQ expression .) ]
  ! GREATER_EQ      [ reduce using rule 44 (expression -> expression IS_EQ expression .) ]
  ! IS_EQ           [ shift and go to state 40 ]
  ! NOT_EQ          [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]


state 68

    (45) expression -> expression NOT_EQ expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . EXPONENT expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . MODULUS expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . LESS_EQ expression
    (42) expression -> expression . GREATER expression
    (43) expression -> expression . GREATER_EQ expression
    (44) expression -> expression . IS_EQ expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    IS_EQ           reduce using rule 45 (expression -> expression NOT_EQ expression .)
    NOT_EQ          reduce using rule 45 (expression -> expression NOT_EQ expression .)
    AND             reduce using rule 45 (expression -> expression NOT_EQ expression .)
    OR              reduce using rule 45 (expression -> expression NOT_EQ expression .)
    SEMICOLON       reduce using rule 45 (expression -> expression NOT_EQ expression .)
    RBRACE          reduce using rule 45 (expression -> expression NOT_EQ expression .)
    RPAREN          reduce using rule 45 (expression -> expression NOT_EQ expression .)
    LBRACE          reduce using rule 45 (expression -> expression NOT_EQ expression .)
    COMMA           reduce using rule 45 (expression -> expression NOT_EQ expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    EXPONENT        shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35
    LESS            shift and go to state 36
    LESS_EQ         shift and go to state 37
    GREATER         shift and go to state 38
    GREATER_EQ      shift and go to state 39

  ! PLUS            [ reduce using rule 45 (expression -> expression NOT_EQ expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression NOT_EQ expression .) ]
  ! EXPONENT        [ reduce using rule 45 (expression -> expression NOT_EQ expression .) ]
  ! TIMES           [ reduce using rule 45 (expression -> expression NOT_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression NOT_EQ expression .) ]
  ! MODULUS         [ reduce using rule 45 (expression -> expression NOT_EQ expression .) ]
  ! LESS            [ reduce using rule 45 (expression -> expression NOT_EQ expression .) ]
  ! LESS_EQ         [ reduce using rule 45 (expression -> expression NOT_EQ expression .) ]
  ! GREATER         [ reduce using rule 45 (expression -> expression NOT_EQ expression .) ]
  ! GREATER_EQ      [ reduce using rule 45 (expression -> expression NOT_EQ expression .) ]
  ! IS_EQ           [ shift and go to state 40 ]
  ! NOT_EQ          [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]


state 69

    (46) expression -> expression AND expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . EXPONENT expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . MODULUS expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . LESS_EQ expression
    (42) expression -> expression . GREATER expression
    (43) expression -> expression . GREATER_EQ expression
    (44) expression -> expression . IS_EQ expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    AND             reduce using rule 46 (expression -> expression AND expression .)
    OR              reduce using rule 46 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 46 (expression -> expression AND expression .)
    RBRACE          reduce using rule 46 (expression -> expression AND expression .)
    RPAREN          reduce using rule 46 (expression -> expression AND expression .)
    LBRACE          reduce using rule 46 (expression -> expression AND expression .)
    COMMA           reduce using rule 46 (expression -> expression AND expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    EXPONENT        shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35
    LESS            shift and go to state 36
    LESS_EQ         shift and go to state 37
    GREATER         shift and go to state 38
    GREATER_EQ      shift and go to state 39
    IS_EQ           shift and go to state 40
    NOT_EQ          shift and go to state 41

  ! PLUS            [ reduce using rule 46 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression AND expression .) ]
  ! EXPONENT        [ reduce using rule 46 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression AND expression .) ]
  ! MODULUS         [ reduce using rule 46 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 46 (expression -> expression AND expression .) ]
  ! LESS_EQ         [ reduce using rule 46 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 46 (expression -> expression AND expression .) ]
  ! GREATER_EQ      [ reduce using rule 46 (expression -> expression AND expression .) ]
  ! IS_EQ           [ reduce using rule 46 (expression -> expression AND expression .) ]
  ! NOT_EQ          [ reduce using rule 46 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]


state 70

    (47) expression -> expression OR expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . EXPONENT expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . MODULUS expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . LESS_EQ expression
    (42) expression -> expression . GREATER expression
    (43) expression -> expression . GREATER_EQ expression
    (44) expression -> expression . IS_EQ expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    OR              reduce using rule 47 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 47 (expression -> expression OR expression .)
    RBRACE          reduce using rule 47 (expression -> expression OR expression .)
    RPAREN          reduce using rule 47 (expression -> expression OR expression .)
    LBRACE          reduce using rule 47 (expression -> expression OR expression .)
    COMMA           reduce using rule 47 (expression -> expression OR expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    EXPONENT        shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35
    LESS            shift and go to state 36
    LESS_EQ         shift and go to state 37
    GREATER         shift and go to state 38
    GREATER_EQ      shift and go to state 39
    IS_EQ           shift and go to state 40
    NOT_EQ          shift and go to state 41
    AND             shift and go to state 42

  ! PLUS            [ reduce using rule 47 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression OR expression .) ]
  ! EXPONENT        [ reduce using rule 47 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 47 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression OR expression .) ]
  ! MODULUS         [ reduce using rule 47 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 47 (expression -> expression OR expression .) ]
  ! LESS_EQ         [ reduce using rule 47 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 47 (expression -> expression OR expression .) ]
  ! GREATER_EQ      [ reduce using rule 47 (expression -> expression OR expression .) ]
  ! IS_EQ           [ reduce using rule 47 (expression -> expression OR expression .) ]
  ! NOT_EQ          [ reduce using rule 47 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 47 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 43 ]


state 71

    (23) decl -> ID COLON type . Initiation
    (24) Initiation -> . EQUALS expression
    (25) Initiation -> . epsilon
    (54) epsilon -> .

    EQUALS          shift and go to state 82
    SEMICOLON       reduce using rule 54 (epsilon -> .)
    RBRACE          reduce using rule 54 (epsilon -> .)

    Initiation                     shift and go to state 81
    epsilon                        shift and go to state 83

state 72

    (30) type -> INT .

    EQUALS          reduce using rule 30 (type -> INT .)
    SEMICOLON       reduce using rule 30 (type -> INT .)
    RBRACE          reduce using rule 30 (type -> INT .)


state 73

    (48) expression -> lvalue EQUALS expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . EXPONENT expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . MODULUS expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . LESS_EQ expression
    (42) expression -> expression . GREATER expression
    (43) expression -> expression . GREATER_EQ expression
    (44) expression -> expression . IS_EQ expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    SEMICOLON       reduce using rule 48 (expression -> lvalue EQUALS expression .)
    RBRACE          reduce using rule 48 (expression -> lvalue EQUALS expression .)
    RPAREN          reduce using rule 48 (expression -> lvalue EQUALS expression .)
    LBRACE          reduce using rule 48 (expression -> lvalue EQUALS expression .)
    COMMA           reduce using rule 48 (expression -> lvalue EQUALS expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    EXPONENT        shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35
    LESS            shift and go to state 36
    LESS_EQ         shift and go to state 37
    GREATER         shift and go to state 38
    GREATER_EQ      shift and go to state 39
    IS_EQ           shift and go to state 40
    NOT_EQ          shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43

  ! PLUS            [ reduce using rule 48 (expression -> lvalue EQUALS expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> lvalue EQUALS expression .) ]
  ! EXPONENT        [ reduce using rule 48 (expression -> lvalue EQUALS expression .) ]
  ! TIMES           [ reduce using rule 48 (expression -> lvalue EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression -> lvalue EQUALS expression .) ]
  ! MODULUS         [ reduce using rule 48 (expression -> lvalue EQUALS expression .) ]
  ! LESS            [ reduce using rule 48 (expression -> lvalue EQUALS expression .) ]
  ! LESS_EQ         [ reduce using rule 48 (expression -> lvalue EQUALS expression .) ]
  ! GREATER         [ reduce using rule 48 (expression -> lvalue EQUALS expression .) ]
  ! GREATER_EQ      [ reduce using rule 48 (expression -> lvalue EQUALS expression .) ]
  ! IS_EQ           [ reduce using rule 48 (expression -> lvalue EQUALS expression .) ]
  ! NOT_EQ          [ reduce using rule 48 (expression -> lvalue EQUALS expression .) ]
  ! AND             [ reduce using rule 48 (expression -> lvalue EQUALS expression .) ]
  ! OR              [ reduce using rule 48 (expression -> lvalue EQUALS expression .) ]


state 74

    (49) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    EXPONENT        reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    MODULUS         reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    LESS_EQ         reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    GREATER_EQ      reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    IS_EQ           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    NOT_EQ          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 49 (expression -> LPAREN expression RPAREN .)


state 75

    (26) if_then_statement -> IF expression block_statement .
    (27) if_then_statement -> IF expression block_statement . ELSE block_statement

    SEMICOLON       reduce using rule 26 (if_then_statement -> IF expression block_statement .)
    RBRACE          reduce using rule 26 (if_then_statement -> IF expression block_statement .)
    ELSE            shift and go to state 84


state 76

    (28) while_statement -> WHILE expression block_statement .

    SEMICOLON       reduce using rule 28 (while_statement -> WHILE expression block_statement .)
    RBRACE          reduce using rule 28 (while_statement -> WHILE expression block_statement .)


state 77

    (11) read_statement -> READ LPAREN lvalue . lvalue_list RPAREN
    (12) lvalue_list -> . lvalue_list COMMA lvalue
    (13) lvalue_list -> . epsilon
    (54) epsilon -> .

    RPAREN          reduce using rule 54 (epsilon -> .)
    COMMA           reduce using rule 54 (epsilon -> .)

    lvalue_list                    shift and go to state 85
    epsilon                        shift and go to state 86

state 78

    (14) write_statement -> WRITE LPAREN expr_string . expr_string_list RPAREN
    (15) expr_string_list -> . expr_string_list COMMA expr_string
    (16) expr_string_list -> . epsilon
    (54) epsilon -> .

    RPAREN          reduce using rule 54 (epsilon -> .)
    COMMA           reduce using rule 54 (epsilon -> .)

    expr_string_list               shift and go to state 87
    epsilon                        shift and go to state 88

state 79

    (17) expr_string -> expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . EXPONENT expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . MODULUS expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . LESS_EQ expression
    (42) expression -> expression . GREATER expression
    (43) expression -> expression . GREATER_EQ expression
    (44) expression -> expression . IS_EQ expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    RPAREN          reduce using rule 17 (expr_string -> expression .)
    COMMA           reduce using rule 17 (expr_string -> expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    EXPONENT        shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35
    LESS            shift and go to state 36
    LESS_EQ         shift and go to state 37
    GREATER         shift and go to state 38
    GREATER_EQ      shift and go to state 39
    IS_EQ           shift and go to state 40
    NOT_EQ          shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43


state 80

    (51) expr_string -> STRING_LITERAL .

    RPAREN          reduce using rule 51 (expr_string -> STRING_LITERAL .)
    COMMA           reduce using rule 51 (expr_string -> STRING_LITERAL .)


state 81

    (23) decl -> ID COLON type Initiation .

    SEMICOLON       reduce using rule 23 (decl -> ID COLON type Initiation .)
    RBRACE          reduce using rule 23 (decl -> ID COLON type Initiation .)


state 82

    (24) Initiation -> EQUALS . expression
    (31) expression -> . PLUS expression
    (32) expression -> . MINUS expression
    (33) expression -> . NOT expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression EXPONENT expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression MODULUS expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression LESS_EQ expression
    (42) expression -> . expression GREATER expression
    (43) expression -> . expression GREATER_EQ expression
    (44) expression -> . expression IS_EQ expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . lvalue EQUALS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_LITERAL
    (53) expression -> . lvalue
    (52) lvalue -> . identifier
    (29) identifier -> . ID

    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 20
    INT_LITERAL     shift and go to state 21
    ID              shift and go to state 46

    expression                     shift and go to state 89
    lvalue                         shift and go to state 19
    identifier                     shift and go to state 26

state 83

    (25) Initiation -> epsilon .

    SEMICOLON       reduce using rule 25 (Initiation -> epsilon .)
    RBRACE          reduce using rule 25 (Initiation -> epsilon .)


state 84

    (27) if_then_statement -> IF expression block_statement ELSE . block_statement
    (4) block_statement -> . LBRACE statement_decl_list semicolon_opt RBRACE

    LBRACE          shift and go to state 3

    block_statement                shift and go to state 90

state 85

    (11) read_statement -> READ LPAREN lvalue lvalue_list . RPAREN
    (12) lvalue_list -> lvalue_list . COMMA lvalue

    RPAREN          shift and go to state 91
    COMMA           shift and go to state 92


state 86

    (13) lvalue_list -> epsilon .

    RPAREN          reduce using rule 13 (lvalue_list -> epsilon .)
    COMMA           reduce using rule 13 (lvalue_list -> epsilon .)


state 87

    (14) write_statement -> WRITE LPAREN expr_string expr_string_list . RPAREN
    (15) expr_string_list -> expr_string_list . COMMA expr_string

    RPAREN          shift and go to state 93
    COMMA           shift and go to state 94


state 88

    (16) expr_string_list -> epsilon .

    RPAREN          reduce using rule 16 (expr_string_list -> epsilon .)
    COMMA           reduce using rule 16 (expr_string_list -> epsilon .)


state 89

    (24) Initiation -> EQUALS expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . EXPONENT expression
    (37) expression -> expression . TIMES expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . MODULUS expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . LESS_EQ expression
    (42) expression -> expression . GREATER expression
    (43) expression -> expression . GREATER_EQ expression
    (44) expression -> expression . IS_EQ expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    SEMICOLON       reduce using rule 24 (Initiation -> EQUALS expression .)
    RBRACE          reduce using rule 24 (Initiation -> EQUALS expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    EXPONENT        shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35
    LESS            shift and go to state 36
    LESS_EQ         shift and go to state 37
    GREATER         shift and go to state 38
    GREATER_EQ      shift and go to state 39
    IS_EQ           shift and go to state 40
    NOT_EQ          shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43


state 90

    (27) if_then_statement -> IF expression block_statement ELSE block_statement .

    SEMICOLON       reduce using rule 27 (if_then_statement -> IF expression block_statement ELSE block_statement .)
    RBRACE          reduce using rule 27 (if_then_statement -> IF expression block_statement ELSE block_statement .)


state 91

    (11) read_statement -> READ LPAREN lvalue lvalue_list RPAREN .

    SEMICOLON       reduce using rule 11 (read_statement -> READ LPAREN lvalue lvalue_list RPAREN .)
    RBRACE          reduce using rule 11 (read_statement -> READ LPAREN lvalue lvalue_list RPAREN .)


state 92

    (12) lvalue_list -> lvalue_list COMMA . lvalue
    (52) lvalue -> . identifier
    (29) identifier -> . ID

    ID              shift and go to state 46

    lvalue                         shift and go to state 95
    identifier                     shift and go to state 26

state 93

    (14) write_statement -> WRITE LPAREN expr_string expr_string_list RPAREN .

    SEMICOLON       reduce using rule 14 (write_statement -> WRITE LPAREN expr_string expr_string_list RPAREN .)
    RBRACE          reduce using rule 14 (write_statement -> WRITE LPAREN expr_string expr_string_list RPAREN .)


state 94

    (15) expr_string_list -> expr_string_list COMMA . expr_string
    (17) expr_string -> . expression
    (51) expr_string -> . STRING_LITERAL
    (31) expression -> . PLUS expression
    (32) expression -> . MINUS expression
    (33) expression -> . NOT expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression EXPONENT expression
    (37) expression -> . expression TIMES expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression MODULUS expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression LESS_EQ expression
    (42) expression -> . expression GREATER expression
    (43) expression -> . expression GREATER_EQ expression
    (44) expression -> . expression IS_EQ expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . lvalue EQUALS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . INT_LITERAL
    (53) expression -> . lvalue
    (52) lvalue -> . identifier
    (29) identifier -> . ID

    STRING_LITERAL  shift and go to state 80
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 20
    INT_LITERAL     shift and go to state 21
    ID              shift and go to state 46

    expr_string                    shift and go to state 96
    expression                     shift and go to state 79
    lvalue                         shift and go to state 19
    identifier                     shift and go to state 26

state 95

    (12) lvalue_list -> lvalue_list COMMA lvalue .

    RPAREN          reduce using rule 12 (lvalue_list -> lvalue_list COMMA lvalue .)
    COMMA           reduce using rule 12 (lvalue_list -> lvalue_list COMMA lvalue .)


state 96

    (15) expr_string_list -> expr_string_list COMMA expr_string .

    RPAREN          reduce using rule 15 (expr_string_list -> expr_string_list COMMA expr_string .)
    COMMA           reduce using rule 15 (expr_string_list -> expr_string_list COMMA expr_string .)

