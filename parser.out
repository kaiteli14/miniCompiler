Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> block_statement
Rule 2     semicolon_opt -> epsilon
Rule 3     semicolon_opt -> SEMICOLON
Rule 4     block_statement -> LBRACE statement_list semicolon_opt RBRACE
Rule 5     statement -> expression
Rule 6     statement_list -> statement_list SEMICOLON statement
Rule 7     statement_list -> statement
Rule 8     statement_list -> epsilon
Rule 9     decl -> ID COLON type Initiation
Rule 10    Initiation -> EQUALS expression
Rule 11    Initiation -> epsilon
Rule 12    identifier -> ID
Rule 13    type -> INT
Rule 14    expression -> PLUS expression
Rule 15    expression -> MINUS expression
Rule 16    expression -> NOT expression
Rule 17    expression -> expression PLUS expression
Rule 18    expression -> expression MINUS expression
Rule 19    expression -> expression EXPONENT expression
Rule 20    expression -> expression TIMES expression
Rule 21    expression -> expression DIVIDE expression
Rule 22    expression -> expression MODULUS expression
Rule 23    expression -> expression LESS expression
Rule 24    expression -> expression LESS_EQ expression
Rule 25    expression -> expression GREATER expression
Rule 26    expression -> expression GREATER_EQ expression
Rule 27    expression -> expression IS_EQ expression
Rule 28    expression -> expression NOT_EQ expression
Rule 29    expression -> expression AND expression
Rule 30    expression -> expression OR expression
Rule 31    expression -> identifier EQUALS expression
Rule 32    expression -> LPAREN expression RPAREN
Rule 33    expression -> INT_LITERAL
Rule 34    expression -> identifier
Rule 35    epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 29
COLON                : 9
DIVIDE               : 21
EQUALS               : 10 31
EXPONENT             : 19
GREATER              : 25
GREATER_EQ           : 26
ID                   : 9 12
INT                  : 13
INT_LITERAL          : 33
IS_EQ                : 27
LBRACE               : 4
LESS                 : 23
LESS_EQ              : 24
LPAREN               : 32
MINUS                : 15 18
MODULUS              : 22
NOT                  : 16
NOT_EQ               : 28
OR                   : 30
PLUS                 : 14 17
RBRACE               : 4
RPAREN               : 32
SEMICOLON            : 3 6
TIMES                : 20
error                : 

Nonterminals, with rules where they appear

Initiation           : 9
block_statement      : 1
decl                 : 
epsilon              : 2 8 11
expression           : 5 10 14 15 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 32
identifier           : 31 34
program              : 0
semicolon_opt        : 4
statement            : 6 7
statement_list       : 4 6
type                 : 9

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . block_statement
    (4) block_statement -> . LBRACE statement_list semicolon_opt RBRACE

    LBRACE          shift and go to state 3

    program                        shift and go to state 1
    block_statement                shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> block_statement .

    $end            reduce using rule 1 (program -> block_statement .)


state 3

    (4) block_statement -> LBRACE . statement_list semicolon_opt RBRACE
    (6) statement_list -> . statement_list SEMICOLON statement
    (7) statement_list -> . statement
    (8) statement_list -> . epsilon
    (5) statement -> . expression
    (35) epsilon -> .
    (14) expression -> . PLUS expression
    (15) expression -> . MINUS expression
    (16) expression -> . NOT expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression EXPONENT expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression MODULUS expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression LESS_EQ expression
    (25) expression -> . expression GREATER expression
    (26) expression -> . expression GREATER_EQ expression
    (27) expression -> . expression IS_EQ expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . identifier EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . INT_LITERAL
    (34) expression -> . identifier
    (12) identifier -> . ID

    SEMICOLON       reduce using rule 35 (epsilon -> .)
    RBRACE          reduce using rule 35 (epsilon -> .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    NOT             shift and go to state 10
    LPAREN          shift and go to state 12
    INT_LITERAL     shift and go to state 13
    ID              shift and go to state 14

    statement_list                 shift and go to state 4
    statement                      shift and go to state 5
    epsilon                        shift and go to state 6
    expression                     shift and go to state 7
    identifier                     shift and go to state 11

state 4

    (4) block_statement -> LBRACE statement_list . semicolon_opt RBRACE
    (6) statement_list -> statement_list . SEMICOLON statement
    (2) semicolon_opt -> . epsilon
    (3) semicolon_opt -> . SEMICOLON
    (35) epsilon -> .

    SEMICOLON       shift and go to state 16
    RBRACE          reduce using rule 35 (epsilon -> .)

    semicolon_opt                  shift and go to state 15
    epsilon                        shift and go to state 17

state 5

    (7) statement_list -> statement .

    SEMICOLON       reduce using rule 7 (statement_list -> statement .)
    RBRACE          reduce using rule 7 (statement_list -> statement .)


state 6

    (8) statement_list -> epsilon .

    SEMICOLON       reduce using rule 8 (statement_list -> epsilon .)
    RBRACE          reduce using rule 8 (statement_list -> epsilon .)


state 7

    (5) statement -> expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . EXPONENT expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . MODULUS expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . LESS_EQ expression
    (25) expression -> expression . GREATER expression
    (26) expression -> expression . GREATER_EQ expression
    (27) expression -> expression . IS_EQ expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    SEMICOLON       reduce using rule 5 (statement -> expression .)
    RBRACE          reduce using rule 5 (statement -> expression .)
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    EXPONENT        shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    MODULUS         shift and go to state 23
    LESS            shift and go to state 24
    LESS_EQ         shift and go to state 25
    GREATER         shift and go to state 26
    GREATER_EQ      shift and go to state 27
    IS_EQ           shift and go to state 28
    NOT_EQ          shift and go to state 29
    AND             shift and go to state 30
    OR              shift and go to state 31


state 8

    (14) expression -> PLUS . expression
    (14) expression -> . PLUS expression
    (15) expression -> . MINUS expression
    (16) expression -> . NOT expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression EXPONENT expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression MODULUS expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression LESS_EQ expression
    (25) expression -> . expression GREATER expression
    (26) expression -> . expression GREATER_EQ expression
    (27) expression -> . expression IS_EQ expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . identifier EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . INT_LITERAL
    (34) expression -> . identifier
    (12) identifier -> . ID

    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    NOT             shift and go to state 10
    LPAREN          shift and go to state 12
    INT_LITERAL     shift and go to state 13
    ID              shift and go to state 14

    expression                     shift and go to state 32
    identifier                     shift and go to state 11

state 9

    (15) expression -> MINUS . expression
    (14) expression -> . PLUS expression
    (15) expression -> . MINUS expression
    (16) expression -> . NOT expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression EXPONENT expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression MODULUS expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression LESS_EQ expression
    (25) expression -> . expression GREATER expression
    (26) expression -> . expression GREATER_EQ expression
    (27) expression -> . expression IS_EQ expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . identifier EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . INT_LITERAL
    (34) expression -> . identifier
    (12) identifier -> . ID

    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    NOT             shift and go to state 10
    LPAREN          shift and go to state 12
    INT_LITERAL     shift and go to state 13
    ID              shift and go to state 14

    expression                     shift and go to state 33
    identifier                     shift and go to state 11

state 10

    (16) expression -> NOT . expression
    (14) expression -> . PLUS expression
    (15) expression -> . MINUS expression
    (16) expression -> . NOT expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression EXPONENT expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression MODULUS expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression LESS_EQ expression
    (25) expression -> . expression GREATER expression
    (26) expression -> . expression GREATER_EQ expression
    (27) expression -> . expression IS_EQ expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . identifier EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . INT_LITERAL
    (34) expression -> . identifier
    (12) identifier -> . ID

    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    NOT             shift and go to state 10
    LPAREN          shift and go to state 12
    INT_LITERAL     shift and go to state 13
    ID              shift and go to state 14

    expression                     shift and go to state 34
    identifier                     shift and go to state 11

state 11

    (31) expression -> identifier . EQUALS expression
    (34) expression -> identifier .

    EQUALS          shift and go to state 35
    PLUS            reduce using rule 34 (expression -> identifier .)
    MINUS           reduce using rule 34 (expression -> identifier .)
    EXPONENT        reduce using rule 34 (expression -> identifier .)
    TIMES           reduce using rule 34 (expression -> identifier .)
    DIVIDE          reduce using rule 34 (expression -> identifier .)
    MODULUS         reduce using rule 34 (expression -> identifier .)
    LESS            reduce using rule 34 (expression -> identifier .)
    LESS_EQ         reduce using rule 34 (expression -> identifier .)
    GREATER         reduce using rule 34 (expression -> identifier .)
    GREATER_EQ      reduce using rule 34 (expression -> identifier .)
    IS_EQ           reduce using rule 34 (expression -> identifier .)
    NOT_EQ          reduce using rule 34 (expression -> identifier .)
    AND             reduce using rule 34 (expression -> identifier .)
    OR              reduce using rule 34 (expression -> identifier .)
    SEMICOLON       reduce using rule 34 (expression -> identifier .)
    RBRACE          reduce using rule 34 (expression -> identifier .)
    RPAREN          reduce using rule 34 (expression -> identifier .)


state 12

    (32) expression -> LPAREN . expression RPAREN
    (14) expression -> . PLUS expression
    (15) expression -> . MINUS expression
    (16) expression -> . NOT expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression EXPONENT expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression MODULUS expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression LESS_EQ expression
    (25) expression -> . expression GREATER expression
    (26) expression -> . expression GREATER_EQ expression
    (27) expression -> . expression IS_EQ expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . identifier EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . INT_LITERAL
    (34) expression -> . identifier
    (12) identifier -> . ID

    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    NOT             shift and go to state 10
    LPAREN          shift and go to state 12
    INT_LITERAL     shift and go to state 13
    ID              shift and go to state 14

    expression                     shift and go to state 36
    identifier                     shift and go to state 11

state 13

    (33) expression -> INT_LITERAL .

    PLUS            reduce using rule 33 (expression -> INT_LITERAL .)
    MINUS           reduce using rule 33 (expression -> INT_LITERAL .)
    EXPONENT        reduce using rule 33 (expression -> INT_LITERAL .)
    TIMES           reduce using rule 33 (expression -> INT_LITERAL .)
    DIVIDE          reduce using rule 33 (expression -> INT_LITERAL .)
    MODULUS         reduce using rule 33 (expression -> INT_LITERAL .)
    LESS            reduce using rule 33 (expression -> INT_LITERAL .)
    LESS_EQ         reduce using rule 33 (expression -> INT_LITERAL .)
    GREATER         reduce using rule 33 (expression -> INT_LITERAL .)
    GREATER_EQ      reduce using rule 33 (expression -> INT_LITERAL .)
    IS_EQ           reduce using rule 33 (expression -> INT_LITERAL .)
    NOT_EQ          reduce using rule 33 (expression -> INT_LITERAL .)
    AND             reduce using rule 33 (expression -> INT_LITERAL .)
    OR              reduce using rule 33 (expression -> INT_LITERAL .)
    SEMICOLON       reduce using rule 33 (expression -> INT_LITERAL .)
    RBRACE          reduce using rule 33 (expression -> INT_LITERAL .)
    RPAREN          reduce using rule 33 (expression -> INT_LITERAL .)


state 14

    (12) identifier -> ID .

    EQUALS          reduce using rule 12 (identifier -> ID .)
    PLUS            reduce using rule 12 (identifier -> ID .)
    MINUS           reduce using rule 12 (identifier -> ID .)
    EXPONENT        reduce using rule 12 (identifier -> ID .)
    TIMES           reduce using rule 12 (identifier -> ID .)
    DIVIDE          reduce using rule 12 (identifier -> ID .)
    MODULUS         reduce using rule 12 (identifier -> ID .)
    LESS            reduce using rule 12 (identifier -> ID .)
    LESS_EQ         reduce using rule 12 (identifier -> ID .)
    GREATER         reduce using rule 12 (identifier -> ID .)
    GREATER_EQ      reduce using rule 12 (identifier -> ID .)
    IS_EQ           reduce using rule 12 (identifier -> ID .)
    NOT_EQ          reduce using rule 12 (identifier -> ID .)
    AND             reduce using rule 12 (identifier -> ID .)
    OR              reduce using rule 12 (identifier -> ID .)
    SEMICOLON       reduce using rule 12 (identifier -> ID .)
    RBRACE          reduce using rule 12 (identifier -> ID .)
    RPAREN          reduce using rule 12 (identifier -> ID .)


state 15

    (4) block_statement -> LBRACE statement_list semicolon_opt . RBRACE

    RBRACE          shift and go to state 37


state 16

    (6) statement_list -> statement_list SEMICOLON . statement
    (3) semicolon_opt -> SEMICOLON .
    (5) statement -> . expression
    (14) expression -> . PLUS expression
    (15) expression -> . MINUS expression
    (16) expression -> . NOT expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression EXPONENT expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression MODULUS expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression LESS_EQ expression
    (25) expression -> . expression GREATER expression
    (26) expression -> . expression GREATER_EQ expression
    (27) expression -> . expression IS_EQ expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . identifier EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . INT_LITERAL
    (34) expression -> . identifier
    (12) identifier -> . ID

    RBRACE          reduce using rule 3 (semicolon_opt -> SEMICOLON .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    NOT             shift and go to state 10
    LPAREN          shift and go to state 12
    INT_LITERAL     shift and go to state 13
    ID              shift and go to state 14

    statement                      shift and go to state 38
    expression                     shift and go to state 7
    identifier                     shift and go to state 11

state 17

    (2) semicolon_opt -> epsilon .

    RBRACE          reduce using rule 2 (semicolon_opt -> epsilon .)


state 18

    (17) expression -> expression PLUS . expression
    (14) expression -> . PLUS expression
    (15) expression -> . MINUS expression
    (16) expression -> . NOT expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression EXPONENT expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression MODULUS expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression LESS_EQ expression
    (25) expression -> . expression GREATER expression
    (26) expression -> . expression GREATER_EQ expression
    (27) expression -> . expression IS_EQ expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . identifier EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . INT_LITERAL
    (34) expression -> . identifier
    (12) identifier -> . ID

    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    NOT             shift and go to state 10
    LPAREN          shift and go to state 12
    INT_LITERAL     shift and go to state 13
    ID              shift and go to state 14

    expression                     shift and go to state 39
    identifier                     shift and go to state 11

state 19

    (18) expression -> expression MINUS . expression
    (14) expression -> . PLUS expression
    (15) expression -> . MINUS expression
    (16) expression -> . NOT expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression EXPONENT expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression MODULUS expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression LESS_EQ expression
    (25) expression -> . expression GREATER expression
    (26) expression -> . expression GREATER_EQ expression
    (27) expression -> . expression IS_EQ expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . identifier EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . INT_LITERAL
    (34) expression -> . identifier
    (12) identifier -> . ID

    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    NOT             shift and go to state 10
    LPAREN          shift and go to state 12
    INT_LITERAL     shift and go to state 13
    ID              shift and go to state 14

    expression                     shift and go to state 40
    identifier                     shift and go to state 11

state 20

    (19) expression -> expression EXPONENT . expression
    (14) expression -> . PLUS expression
    (15) expression -> . MINUS expression
    (16) expression -> . NOT expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression EXPONENT expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression MODULUS expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression LESS_EQ expression
    (25) expression -> . expression GREATER expression
    (26) expression -> . expression GREATER_EQ expression
    (27) expression -> . expression IS_EQ expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . identifier EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . INT_LITERAL
    (34) expression -> . identifier
    (12) identifier -> . ID

    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    NOT             shift and go to state 10
    LPAREN          shift and go to state 12
    INT_LITERAL     shift and go to state 13
    ID              shift and go to state 14

    expression                     shift and go to state 41
    identifier                     shift and go to state 11

state 21

    (20) expression -> expression TIMES . expression
    (14) expression -> . PLUS expression
    (15) expression -> . MINUS expression
    (16) expression -> . NOT expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression EXPONENT expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression MODULUS expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression LESS_EQ expression
    (25) expression -> . expression GREATER expression
    (26) expression -> . expression GREATER_EQ expression
    (27) expression -> . expression IS_EQ expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . identifier EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . INT_LITERAL
    (34) expression -> . identifier
    (12) identifier -> . ID

    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    NOT             shift and go to state 10
    LPAREN          shift and go to state 12
    INT_LITERAL     shift and go to state 13
    ID              shift and go to state 14

    expression                     shift and go to state 42
    identifier                     shift and go to state 11

state 22

    (21) expression -> expression DIVIDE . expression
    (14) expression -> . PLUS expression
    (15) expression -> . MINUS expression
    (16) expression -> . NOT expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression EXPONENT expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression MODULUS expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression LESS_EQ expression
    (25) expression -> . expression GREATER expression
    (26) expression -> . expression GREATER_EQ expression
    (27) expression -> . expression IS_EQ expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . identifier EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . INT_LITERAL
    (34) expression -> . identifier
    (12) identifier -> . ID

    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    NOT             shift and go to state 10
    LPAREN          shift and go to state 12
    INT_LITERAL     shift and go to state 13
    ID              shift and go to state 14

    expression                     shift and go to state 43
    identifier                     shift and go to state 11

state 23

    (22) expression -> expression MODULUS . expression
    (14) expression -> . PLUS expression
    (15) expression -> . MINUS expression
    (16) expression -> . NOT expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression EXPONENT expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression MODULUS expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression LESS_EQ expression
    (25) expression -> . expression GREATER expression
    (26) expression -> . expression GREATER_EQ expression
    (27) expression -> . expression IS_EQ expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . identifier EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . INT_LITERAL
    (34) expression -> . identifier
    (12) identifier -> . ID

    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    NOT             shift and go to state 10
    LPAREN          shift and go to state 12
    INT_LITERAL     shift and go to state 13
    ID              shift and go to state 14

    expression                     shift and go to state 44
    identifier                     shift and go to state 11

state 24

    (23) expression -> expression LESS . expression
    (14) expression -> . PLUS expression
    (15) expression -> . MINUS expression
    (16) expression -> . NOT expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression EXPONENT expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression MODULUS expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression LESS_EQ expression
    (25) expression -> . expression GREATER expression
    (26) expression -> . expression GREATER_EQ expression
    (27) expression -> . expression IS_EQ expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . identifier EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . INT_LITERAL
    (34) expression -> . identifier
    (12) identifier -> . ID

    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    NOT             shift and go to state 10
    LPAREN          shift and go to state 12
    INT_LITERAL     shift and go to state 13
    ID              shift and go to state 14

    expression                     shift and go to state 45
    identifier                     shift and go to state 11

state 25

    (24) expression -> expression LESS_EQ . expression
    (14) expression -> . PLUS expression
    (15) expression -> . MINUS expression
    (16) expression -> . NOT expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression EXPONENT expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression MODULUS expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression LESS_EQ expression
    (25) expression -> . expression GREATER expression
    (26) expression -> . expression GREATER_EQ expression
    (27) expression -> . expression IS_EQ expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . identifier EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . INT_LITERAL
    (34) expression -> . identifier
    (12) identifier -> . ID

    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    NOT             shift and go to state 10
    LPAREN          shift and go to state 12
    INT_LITERAL     shift and go to state 13
    ID              shift and go to state 14

    expression                     shift and go to state 46
    identifier                     shift and go to state 11

state 26

    (25) expression -> expression GREATER . expression
    (14) expression -> . PLUS expression
    (15) expression -> . MINUS expression
    (16) expression -> . NOT expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression EXPONENT expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression MODULUS expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression LESS_EQ expression
    (25) expression -> . expression GREATER expression
    (26) expression -> . expression GREATER_EQ expression
    (27) expression -> . expression IS_EQ expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . identifier EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . INT_LITERAL
    (34) expression -> . identifier
    (12) identifier -> . ID

    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    NOT             shift and go to state 10
    LPAREN          shift and go to state 12
    INT_LITERAL     shift and go to state 13
    ID              shift and go to state 14

    expression                     shift and go to state 47
    identifier                     shift and go to state 11

state 27

    (26) expression -> expression GREATER_EQ . expression
    (14) expression -> . PLUS expression
    (15) expression -> . MINUS expression
    (16) expression -> . NOT expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression EXPONENT expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression MODULUS expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression LESS_EQ expression
    (25) expression -> . expression GREATER expression
    (26) expression -> . expression GREATER_EQ expression
    (27) expression -> . expression IS_EQ expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . identifier EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . INT_LITERAL
    (34) expression -> . identifier
    (12) identifier -> . ID

    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    NOT             shift and go to state 10
    LPAREN          shift and go to state 12
    INT_LITERAL     shift and go to state 13
    ID              shift and go to state 14

    expression                     shift and go to state 48
    identifier                     shift and go to state 11

state 28

    (27) expression -> expression IS_EQ . expression
    (14) expression -> . PLUS expression
    (15) expression -> . MINUS expression
    (16) expression -> . NOT expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression EXPONENT expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression MODULUS expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression LESS_EQ expression
    (25) expression -> . expression GREATER expression
    (26) expression -> . expression GREATER_EQ expression
    (27) expression -> . expression IS_EQ expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . identifier EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . INT_LITERAL
    (34) expression -> . identifier
    (12) identifier -> . ID

    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    NOT             shift and go to state 10
    LPAREN          shift and go to state 12
    INT_LITERAL     shift and go to state 13
    ID              shift and go to state 14

    expression                     shift and go to state 49
    identifier                     shift and go to state 11

state 29

    (28) expression -> expression NOT_EQ . expression
    (14) expression -> . PLUS expression
    (15) expression -> . MINUS expression
    (16) expression -> . NOT expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression EXPONENT expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression MODULUS expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression LESS_EQ expression
    (25) expression -> . expression GREATER expression
    (26) expression -> . expression GREATER_EQ expression
    (27) expression -> . expression IS_EQ expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . identifier EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . INT_LITERAL
    (34) expression -> . identifier
    (12) identifier -> . ID

    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    NOT             shift and go to state 10
    LPAREN          shift and go to state 12
    INT_LITERAL     shift and go to state 13
    ID              shift and go to state 14

    expression                     shift and go to state 50
    identifier                     shift and go to state 11

state 30

    (29) expression -> expression AND . expression
    (14) expression -> . PLUS expression
    (15) expression -> . MINUS expression
    (16) expression -> . NOT expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression EXPONENT expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression MODULUS expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression LESS_EQ expression
    (25) expression -> . expression GREATER expression
    (26) expression -> . expression GREATER_EQ expression
    (27) expression -> . expression IS_EQ expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . identifier EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . INT_LITERAL
    (34) expression -> . identifier
    (12) identifier -> . ID

    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    NOT             shift and go to state 10
    LPAREN          shift and go to state 12
    INT_LITERAL     shift and go to state 13
    ID              shift and go to state 14

    expression                     shift and go to state 51
    identifier                     shift and go to state 11

state 31

    (30) expression -> expression OR . expression
    (14) expression -> . PLUS expression
    (15) expression -> . MINUS expression
    (16) expression -> . NOT expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression EXPONENT expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression MODULUS expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression LESS_EQ expression
    (25) expression -> . expression GREATER expression
    (26) expression -> . expression GREATER_EQ expression
    (27) expression -> . expression IS_EQ expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . identifier EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . INT_LITERAL
    (34) expression -> . identifier
    (12) identifier -> . ID

    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    NOT             shift and go to state 10
    LPAREN          shift and go to state 12
    INT_LITERAL     shift and go to state 13
    ID              shift and go to state 14

    expression                     shift and go to state 52
    identifier                     shift and go to state 11

state 32

    (14) expression -> PLUS expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . EXPONENT expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . MODULUS expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . LESS_EQ expression
    (25) expression -> expression . GREATER expression
    (26) expression -> expression . GREATER_EQ expression
    (27) expression -> expression . IS_EQ expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    PLUS            reduce using rule 14 (expression -> PLUS expression .)
    MINUS           reduce using rule 14 (expression -> PLUS expression .)
    EXPONENT        reduce using rule 14 (expression -> PLUS expression .)
    TIMES           reduce using rule 14 (expression -> PLUS expression .)
    DIVIDE          reduce using rule 14 (expression -> PLUS expression .)
    MODULUS         reduce using rule 14 (expression -> PLUS expression .)
    LESS            reduce using rule 14 (expression -> PLUS expression .)
    LESS_EQ         reduce using rule 14 (expression -> PLUS expression .)
    GREATER         reduce using rule 14 (expression -> PLUS expression .)
    GREATER_EQ      reduce using rule 14 (expression -> PLUS expression .)
    IS_EQ           reduce using rule 14 (expression -> PLUS expression .)
    NOT_EQ          reduce using rule 14 (expression -> PLUS expression .)
    AND             reduce using rule 14 (expression -> PLUS expression .)
    OR              reduce using rule 14 (expression -> PLUS expression .)
    SEMICOLON       reduce using rule 14 (expression -> PLUS expression .)
    RBRACE          reduce using rule 14 (expression -> PLUS expression .)
    RPAREN          reduce using rule 14 (expression -> PLUS expression .)

  ! PLUS            [ shift and go to state 18 ]
  ! MINUS           [ shift and go to state 19 ]
  ! EXPONENT        [ shift and go to state 20 ]
  ! TIMES           [ shift and go to state 21 ]
  ! DIVIDE          [ shift and go to state 22 ]
  ! MODULUS         [ shift and go to state 23 ]
  ! LESS            [ shift and go to state 24 ]
  ! LESS_EQ         [ shift and go to state 25 ]
  ! GREATER         [ shift and go to state 26 ]
  ! GREATER_EQ      [ shift and go to state 27 ]
  ! IS_EQ           [ shift and go to state 28 ]
  ! NOT_EQ          [ shift and go to state 29 ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 31 ]


state 33

    (15) expression -> MINUS expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . EXPONENT expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . MODULUS expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . LESS_EQ expression
    (25) expression -> expression . GREATER expression
    (26) expression -> expression . GREATER_EQ expression
    (27) expression -> expression . IS_EQ expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    PLUS            reduce using rule 15 (expression -> MINUS expression .)
    MINUS           reduce using rule 15 (expression -> MINUS expression .)
    EXPONENT        reduce using rule 15 (expression -> MINUS expression .)
    TIMES           reduce using rule 15 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 15 (expression -> MINUS expression .)
    MODULUS         reduce using rule 15 (expression -> MINUS expression .)
    LESS            reduce using rule 15 (expression -> MINUS expression .)
    LESS_EQ         reduce using rule 15 (expression -> MINUS expression .)
    GREATER         reduce using rule 15 (expression -> MINUS expression .)
    GREATER_EQ      reduce using rule 15 (expression -> MINUS expression .)
    IS_EQ           reduce using rule 15 (expression -> MINUS expression .)
    NOT_EQ          reduce using rule 15 (expression -> MINUS expression .)
    AND             reduce using rule 15 (expression -> MINUS expression .)
    OR              reduce using rule 15 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 15 (expression -> MINUS expression .)
    RBRACE          reduce using rule 15 (expression -> MINUS expression .)
    RPAREN          reduce using rule 15 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 18 ]
  ! MINUS           [ shift and go to state 19 ]
  ! EXPONENT        [ shift and go to state 20 ]
  ! TIMES           [ shift and go to state 21 ]
  ! DIVIDE          [ shift and go to state 22 ]
  ! MODULUS         [ shift and go to state 23 ]
  ! LESS            [ shift and go to state 24 ]
  ! LESS_EQ         [ shift and go to state 25 ]
  ! GREATER         [ shift and go to state 26 ]
  ! GREATER_EQ      [ shift and go to state 27 ]
  ! IS_EQ           [ shift and go to state 28 ]
  ! NOT_EQ          [ shift and go to state 29 ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 31 ]


state 34

    (16) expression -> NOT expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . EXPONENT expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . MODULUS expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . LESS_EQ expression
    (25) expression -> expression . GREATER expression
    (26) expression -> expression . GREATER_EQ expression
    (27) expression -> expression . IS_EQ expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    PLUS            reduce using rule 16 (expression -> NOT expression .)
    MINUS           reduce using rule 16 (expression -> NOT expression .)
    EXPONENT        reduce using rule 16 (expression -> NOT expression .)
    TIMES           reduce using rule 16 (expression -> NOT expression .)
    DIVIDE          reduce using rule 16 (expression -> NOT expression .)
    MODULUS         reduce using rule 16 (expression -> NOT expression .)
    LESS            reduce using rule 16 (expression -> NOT expression .)
    LESS_EQ         reduce using rule 16 (expression -> NOT expression .)
    GREATER         reduce using rule 16 (expression -> NOT expression .)
    GREATER_EQ      reduce using rule 16 (expression -> NOT expression .)
    IS_EQ           reduce using rule 16 (expression -> NOT expression .)
    NOT_EQ          reduce using rule 16 (expression -> NOT expression .)
    AND             reduce using rule 16 (expression -> NOT expression .)
    OR              reduce using rule 16 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 16 (expression -> NOT expression .)
    RBRACE          reduce using rule 16 (expression -> NOT expression .)
    RPAREN          reduce using rule 16 (expression -> NOT expression .)

  ! PLUS            [ shift and go to state 18 ]
  ! MINUS           [ shift and go to state 19 ]
  ! EXPONENT        [ shift and go to state 20 ]
  ! TIMES           [ shift and go to state 21 ]
  ! DIVIDE          [ shift and go to state 22 ]
  ! MODULUS         [ shift and go to state 23 ]
  ! LESS            [ shift and go to state 24 ]
  ! LESS_EQ         [ shift and go to state 25 ]
  ! GREATER         [ shift and go to state 26 ]
  ! GREATER_EQ      [ shift and go to state 27 ]
  ! IS_EQ           [ shift and go to state 28 ]
  ! NOT_EQ          [ shift and go to state 29 ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 31 ]


state 35

    (31) expression -> identifier EQUALS . expression
    (14) expression -> . PLUS expression
    (15) expression -> . MINUS expression
    (16) expression -> . NOT expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression EXPONENT expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression MODULUS expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression LESS_EQ expression
    (25) expression -> . expression GREATER expression
    (26) expression -> . expression GREATER_EQ expression
    (27) expression -> . expression IS_EQ expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . identifier EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . INT_LITERAL
    (34) expression -> . identifier
    (12) identifier -> . ID

    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    NOT             shift and go to state 10
    LPAREN          shift and go to state 12
    INT_LITERAL     shift and go to state 13
    ID              shift and go to state 14

    identifier                     shift and go to state 11
    expression                     shift and go to state 53

state 36

    (32) expression -> LPAREN expression . RPAREN
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . EXPONENT expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . MODULUS expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . LESS_EQ expression
    (25) expression -> expression . GREATER expression
    (26) expression -> expression . GREATER_EQ expression
    (27) expression -> expression . IS_EQ expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    RPAREN          shift and go to state 54
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    EXPONENT        shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    MODULUS         shift and go to state 23
    LESS            shift and go to state 24
    LESS_EQ         shift and go to state 25
    GREATER         shift and go to state 26
    GREATER_EQ      shift and go to state 27
    IS_EQ           shift and go to state 28
    NOT_EQ          shift and go to state 29
    AND             shift and go to state 30
    OR              shift and go to state 31


state 37

    (4) block_statement -> LBRACE statement_list semicolon_opt RBRACE .

    $end            reduce using rule 4 (block_statement -> LBRACE statement_list semicolon_opt RBRACE .)


state 38

    (6) statement_list -> statement_list SEMICOLON statement .

    SEMICOLON       reduce using rule 6 (statement_list -> statement_list SEMICOLON statement .)
    RBRACE          reduce using rule 6 (statement_list -> statement_list SEMICOLON statement .)


state 39

    (17) expression -> expression PLUS expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . EXPONENT expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . MODULUS expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . LESS_EQ expression
    (25) expression -> expression . GREATER expression
    (26) expression -> expression . GREATER_EQ expression
    (27) expression -> expression . IS_EQ expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    PLUS            reduce using rule 17 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 17 (expression -> expression PLUS expression .)
    LESS            reduce using rule 17 (expression -> expression PLUS expression .)
    LESS_EQ         reduce using rule 17 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 17 (expression -> expression PLUS expression .)
    GREATER_EQ      reduce using rule 17 (expression -> expression PLUS expression .)
    IS_EQ           reduce using rule 17 (expression -> expression PLUS expression .)
    NOT_EQ          reduce using rule 17 (expression -> expression PLUS expression .)
    AND             reduce using rule 17 (expression -> expression PLUS expression .)
    OR              reduce using rule 17 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 17 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 17 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 17 (expression -> expression PLUS expression .)
    EXPONENT        shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    MODULUS         shift and go to state 23

  ! EXPONENT        [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! MODULUS         [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 18 ]
  ! MINUS           [ shift and go to state 19 ]
  ! LESS            [ shift and go to state 24 ]
  ! LESS_EQ         [ shift and go to state 25 ]
  ! GREATER         [ shift and go to state 26 ]
  ! GREATER_EQ      [ shift and go to state 27 ]
  ! IS_EQ           [ shift and go to state 28 ]
  ! NOT_EQ          [ shift and go to state 29 ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 31 ]


state 40

    (18) expression -> expression MINUS expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . EXPONENT expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . MODULUS expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . LESS_EQ expression
    (25) expression -> expression . GREATER expression
    (26) expression -> expression . GREATER_EQ expression
    (27) expression -> expression . IS_EQ expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    PLUS            reduce using rule 18 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 18 (expression -> expression MINUS expression .)
    LESS            reduce using rule 18 (expression -> expression MINUS expression .)
    LESS_EQ         reduce using rule 18 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 18 (expression -> expression MINUS expression .)
    GREATER_EQ      reduce using rule 18 (expression -> expression MINUS expression .)
    IS_EQ           reduce using rule 18 (expression -> expression MINUS expression .)
    NOT_EQ          reduce using rule 18 (expression -> expression MINUS expression .)
    AND             reduce using rule 18 (expression -> expression MINUS expression .)
    OR              reduce using rule 18 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 18 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 18 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 18 (expression -> expression MINUS expression .)
    EXPONENT        shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    MODULUS         shift and go to state 23

  ! EXPONENT        [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! MODULUS         [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 18 ]
  ! MINUS           [ shift and go to state 19 ]
  ! LESS            [ shift and go to state 24 ]
  ! LESS_EQ         [ shift and go to state 25 ]
  ! GREATER         [ shift and go to state 26 ]
  ! GREATER_EQ      [ shift and go to state 27 ]
  ! IS_EQ           [ shift and go to state 28 ]
  ! NOT_EQ          [ shift and go to state 29 ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 31 ]


state 41

    (19) expression -> expression EXPONENT expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . EXPONENT expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . MODULUS expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . LESS_EQ expression
    (25) expression -> expression . GREATER expression
    (26) expression -> expression . GREATER_EQ expression
    (27) expression -> expression . IS_EQ expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    PLUS            reduce using rule 19 (expression -> expression EXPONENT expression .)
    MINUS           reduce using rule 19 (expression -> expression EXPONENT expression .)
    TIMES           reduce using rule 19 (expression -> expression EXPONENT expression .)
    DIVIDE          reduce using rule 19 (expression -> expression EXPONENT expression .)
    MODULUS         reduce using rule 19 (expression -> expression EXPONENT expression .)
    LESS            reduce using rule 19 (expression -> expression EXPONENT expression .)
    LESS_EQ         reduce using rule 19 (expression -> expression EXPONENT expression .)
    GREATER         reduce using rule 19 (expression -> expression EXPONENT expression .)
    GREATER_EQ      reduce using rule 19 (expression -> expression EXPONENT expression .)
    IS_EQ           reduce using rule 19 (expression -> expression EXPONENT expression .)
    NOT_EQ          reduce using rule 19 (expression -> expression EXPONENT expression .)
    AND             reduce using rule 19 (expression -> expression EXPONENT expression .)
    OR              reduce using rule 19 (expression -> expression EXPONENT expression .)
    SEMICOLON       reduce using rule 19 (expression -> expression EXPONENT expression .)
    RBRACE          reduce using rule 19 (expression -> expression EXPONENT expression .)
    RPAREN          reduce using rule 19 (expression -> expression EXPONENT expression .)
    EXPONENT        shift and go to state 20

  ! EXPONENT        [ reduce using rule 19 (expression -> expression EXPONENT expression .) ]
  ! PLUS            [ shift and go to state 18 ]
  ! MINUS           [ shift and go to state 19 ]
  ! TIMES           [ shift and go to state 21 ]
  ! DIVIDE          [ shift and go to state 22 ]
  ! MODULUS         [ shift and go to state 23 ]
  ! LESS            [ shift and go to state 24 ]
  ! LESS_EQ         [ shift and go to state 25 ]
  ! GREATER         [ shift and go to state 26 ]
  ! GREATER_EQ      [ shift and go to state 27 ]
  ! IS_EQ           [ shift and go to state 28 ]
  ! NOT_EQ          [ shift and go to state 29 ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 31 ]


state 42

    (20) expression -> expression TIMES expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . EXPONENT expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . MODULUS expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . LESS_EQ expression
    (25) expression -> expression . GREATER expression
    (26) expression -> expression . GREATER_EQ expression
    (27) expression -> expression . IS_EQ expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    PLUS            reduce using rule 20 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 20 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 20 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 20 (expression -> expression TIMES expression .)
    MODULUS         reduce using rule 20 (expression -> expression TIMES expression .)
    LESS            reduce using rule 20 (expression -> expression TIMES expression .)
    LESS_EQ         reduce using rule 20 (expression -> expression TIMES expression .)
    GREATER         reduce using rule 20 (expression -> expression TIMES expression .)
    GREATER_EQ      reduce using rule 20 (expression -> expression TIMES expression .)
    IS_EQ           reduce using rule 20 (expression -> expression TIMES expression .)
    NOT_EQ          reduce using rule 20 (expression -> expression TIMES expression .)
    AND             reduce using rule 20 (expression -> expression TIMES expression .)
    OR              reduce using rule 20 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 20 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 20 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 20 (expression -> expression TIMES expression .)
    EXPONENT        shift and go to state 20

  ! EXPONENT        [ reduce using rule 20 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 18 ]
  ! MINUS           [ shift and go to state 19 ]
  ! TIMES           [ shift and go to state 21 ]
  ! DIVIDE          [ shift and go to state 22 ]
  ! MODULUS         [ shift and go to state 23 ]
  ! LESS            [ shift and go to state 24 ]
  ! LESS_EQ         [ shift and go to state 25 ]
  ! GREATER         [ shift and go to state 26 ]
  ! GREATER_EQ      [ shift and go to state 27 ]
  ! IS_EQ           [ shift and go to state 28 ]
  ! NOT_EQ          [ shift and go to state 29 ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 31 ]


state 43

    (21) expression -> expression DIVIDE expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . EXPONENT expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . MODULUS expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . LESS_EQ expression
    (25) expression -> expression . GREATER expression
    (26) expression -> expression . GREATER_EQ expression
    (27) expression -> expression . IS_EQ expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    PLUS            reduce using rule 21 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 21 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 21 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 21 (expression -> expression DIVIDE expression .)
    MODULUS         reduce using rule 21 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 21 (expression -> expression DIVIDE expression .)
    LESS_EQ         reduce using rule 21 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 21 (expression -> expression DIVIDE expression .)
    GREATER_EQ      reduce using rule 21 (expression -> expression DIVIDE expression .)
    IS_EQ           reduce using rule 21 (expression -> expression DIVIDE expression .)
    NOT_EQ          reduce using rule 21 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 21 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 21 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 21 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 21 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 21 (expression -> expression DIVIDE expression .)
    EXPONENT        shift and go to state 20

  ! EXPONENT        [ reduce using rule 21 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 18 ]
  ! MINUS           [ shift and go to state 19 ]
  ! TIMES           [ shift and go to state 21 ]
  ! DIVIDE          [ shift and go to state 22 ]
  ! MODULUS         [ shift and go to state 23 ]
  ! LESS            [ shift and go to state 24 ]
  ! LESS_EQ         [ shift and go to state 25 ]
  ! GREATER         [ shift and go to state 26 ]
  ! GREATER_EQ      [ shift and go to state 27 ]
  ! IS_EQ           [ shift and go to state 28 ]
  ! NOT_EQ          [ shift and go to state 29 ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 31 ]


state 44

    (22) expression -> expression MODULUS expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . EXPONENT expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . MODULUS expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . LESS_EQ expression
    (25) expression -> expression . GREATER expression
    (26) expression -> expression . GREATER_EQ expression
    (27) expression -> expression . IS_EQ expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    PLUS            reduce using rule 22 (expression -> expression MODULUS expression .)
    MINUS           reduce using rule 22 (expression -> expression MODULUS expression .)
    TIMES           reduce using rule 22 (expression -> expression MODULUS expression .)
    DIVIDE          reduce using rule 22 (expression -> expression MODULUS expression .)
    MODULUS         reduce using rule 22 (expression -> expression MODULUS expression .)
    LESS            reduce using rule 22 (expression -> expression MODULUS expression .)
    LESS_EQ         reduce using rule 22 (expression -> expression MODULUS expression .)
    GREATER         reduce using rule 22 (expression -> expression MODULUS expression .)
    GREATER_EQ      reduce using rule 22 (expression -> expression MODULUS expression .)
    IS_EQ           reduce using rule 22 (expression -> expression MODULUS expression .)
    NOT_EQ          reduce using rule 22 (expression -> expression MODULUS expression .)
    AND             reduce using rule 22 (expression -> expression MODULUS expression .)
    OR              reduce using rule 22 (expression -> expression MODULUS expression .)
    SEMICOLON       reduce using rule 22 (expression -> expression MODULUS expression .)
    RBRACE          reduce using rule 22 (expression -> expression MODULUS expression .)
    RPAREN          reduce using rule 22 (expression -> expression MODULUS expression .)
    EXPONENT        shift and go to state 20

  ! EXPONENT        [ reduce using rule 22 (expression -> expression MODULUS expression .) ]
  ! PLUS            [ shift and go to state 18 ]
  ! MINUS           [ shift and go to state 19 ]
  ! TIMES           [ shift and go to state 21 ]
  ! DIVIDE          [ shift and go to state 22 ]
  ! MODULUS         [ shift and go to state 23 ]
  ! LESS            [ shift and go to state 24 ]
  ! LESS_EQ         [ shift and go to state 25 ]
  ! GREATER         [ shift and go to state 26 ]
  ! GREATER_EQ      [ shift and go to state 27 ]
  ! IS_EQ           [ shift and go to state 28 ]
  ! NOT_EQ          [ shift and go to state 29 ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 31 ]


state 45

    (23) expression -> expression LESS expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . EXPONENT expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . MODULUS expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . LESS_EQ expression
    (25) expression -> expression . GREATER expression
    (26) expression -> expression . GREATER_EQ expression
    (27) expression -> expression . IS_EQ expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    LESS            reduce using rule 23 (expression -> expression LESS expression .)
    LESS_EQ         reduce using rule 23 (expression -> expression LESS expression .)
    GREATER         reduce using rule 23 (expression -> expression LESS expression .)
    GREATER_EQ      reduce using rule 23 (expression -> expression LESS expression .)
    IS_EQ           reduce using rule 23 (expression -> expression LESS expression .)
    NOT_EQ          reduce using rule 23 (expression -> expression LESS expression .)
    AND             reduce using rule 23 (expression -> expression LESS expression .)
    OR              reduce using rule 23 (expression -> expression LESS expression .)
    SEMICOLON       reduce using rule 23 (expression -> expression LESS expression .)
    RBRACE          reduce using rule 23 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 23 (expression -> expression LESS expression .)
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    EXPONENT        shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    MODULUS         shift and go to state 23

  ! PLUS            [ reduce using rule 23 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> expression LESS expression .) ]
  ! EXPONENT        [ reduce using rule 23 (expression -> expression LESS expression .) ]
  ! TIMES           [ reduce using rule 23 (expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression LESS expression .) ]
  ! MODULUS         [ reduce using rule 23 (expression -> expression LESS expression .) ]
  ! LESS            [ shift and go to state 24 ]
  ! LESS_EQ         [ shift and go to state 25 ]
  ! GREATER         [ shift and go to state 26 ]
  ! GREATER_EQ      [ shift and go to state 27 ]
  ! IS_EQ           [ shift and go to state 28 ]
  ! NOT_EQ          [ shift and go to state 29 ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 31 ]


state 46

    (24) expression -> expression LESS_EQ expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . EXPONENT expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . MODULUS expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . LESS_EQ expression
    (25) expression -> expression . GREATER expression
    (26) expression -> expression . GREATER_EQ expression
    (27) expression -> expression . IS_EQ expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    LESS            reduce using rule 24 (expression -> expression LESS_EQ expression .)
    LESS_EQ         reduce using rule 24 (expression -> expression LESS_EQ expression .)
    GREATER         reduce using rule 24 (expression -> expression LESS_EQ expression .)
    GREATER_EQ      reduce using rule 24 (expression -> expression LESS_EQ expression .)
    IS_EQ           reduce using rule 24 (expression -> expression LESS_EQ expression .)
    NOT_EQ          reduce using rule 24 (expression -> expression LESS_EQ expression .)
    AND             reduce using rule 24 (expression -> expression LESS_EQ expression .)
    OR              reduce using rule 24 (expression -> expression LESS_EQ expression .)
    SEMICOLON       reduce using rule 24 (expression -> expression LESS_EQ expression .)
    RBRACE          reduce using rule 24 (expression -> expression LESS_EQ expression .)
    RPAREN          reduce using rule 24 (expression -> expression LESS_EQ expression .)
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    EXPONENT        shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    MODULUS         shift and go to state 23

  ! PLUS            [ reduce using rule 24 (expression -> expression LESS_EQ expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> expression LESS_EQ expression .) ]
  ! EXPONENT        [ reduce using rule 24 (expression -> expression LESS_EQ expression .) ]
  ! TIMES           [ reduce using rule 24 (expression -> expression LESS_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression LESS_EQ expression .) ]
  ! MODULUS         [ reduce using rule 24 (expression -> expression LESS_EQ expression .) ]
  ! LESS            [ shift and go to state 24 ]
  ! LESS_EQ         [ shift and go to state 25 ]
  ! GREATER         [ shift and go to state 26 ]
  ! GREATER_EQ      [ shift and go to state 27 ]
  ! IS_EQ           [ shift and go to state 28 ]
  ! NOT_EQ          [ shift and go to state 29 ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 31 ]


state 47

    (25) expression -> expression GREATER expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . EXPONENT expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . MODULUS expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . LESS_EQ expression
    (25) expression -> expression . GREATER expression
    (26) expression -> expression . GREATER_EQ expression
    (27) expression -> expression . IS_EQ expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    LESS            reduce using rule 25 (expression -> expression GREATER expression .)
    LESS_EQ         reduce using rule 25 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 25 (expression -> expression GREATER expression .)
    GREATER_EQ      reduce using rule 25 (expression -> expression GREATER expression .)
    IS_EQ           reduce using rule 25 (expression -> expression GREATER expression .)
    NOT_EQ          reduce using rule 25 (expression -> expression GREATER expression .)
    AND             reduce using rule 25 (expression -> expression GREATER expression .)
    OR              reduce using rule 25 (expression -> expression GREATER expression .)
    SEMICOLON       reduce using rule 25 (expression -> expression GREATER expression .)
    RBRACE          reduce using rule 25 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 25 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    EXPONENT        shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    MODULUS         shift and go to state 23

  ! PLUS            [ reduce using rule 25 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> expression GREATER expression .) ]
  ! EXPONENT        [ reduce using rule 25 (expression -> expression GREATER expression .) ]
  ! TIMES           [ reduce using rule 25 (expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression GREATER expression .) ]
  ! MODULUS         [ reduce using rule 25 (expression -> expression GREATER expression .) ]
  ! LESS            [ shift and go to state 24 ]
  ! LESS_EQ         [ shift and go to state 25 ]
  ! GREATER         [ shift and go to state 26 ]
  ! GREATER_EQ      [ shift and go to state 27 ]
  ! IS_EQ           [ shift and go to state 28 ]
  ! NOT_EQ          [ shift and go to state 29 ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 31 ]


state 48

    (26) expression -> expression GREATER_EQ expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . EXPONENT expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . MODULUS expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . LESS_EQ expression
    (25) expression -> expression . GREATER expression
    (26) expression -> expression . GREATER_EQ expression
    (27) expression -> expression . IS_EQ expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    LESS            reduce using rule 26 (expression -> expression GREATER_EQ expression .)
    LESS_EQ         reduce using rule 26 (expression -> expression GREATER_EQ expression .)
    GREATER         reduce using rule 26 (expression -> expression GREATER_EQ expression .)
    GREATER_EQ      reduce using rule 26 (expression -> expression GREATER_EQ expression .)
    IS_EQ           reduce using rule 26 (expression -> expression GREATER_EQ expression .)
    NOT_EQ          reduce using rule 26 (expression -> expression GREATER_EQ expression .)
    AND             reduce using rule 26 (expression -> expression GREATER_EQ expression .)
    OR              reduce using rule 26 (expression -> expression GREATER_EQ expression .)
    SEMICOLON       reduce using rule 26 (expression -> expression GREATER_EQ expression .)
    RBRACE          reduce using rule 26 (expression -> expression GREATER_EQ expression .)
    RPAREN          reduce using rule 26 (expression -> expression GREATER_EQ expression .)
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    EXPONENT        shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    MODULUS         shift and go to state 23

  ! PLUS            [ reduce using rule 26 (expression -> expression GREATER_EQ expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression GREATER_EQ expression .) ]
  ! EXPONENT        [ reduce using rule 26 (expression -> expression GREATER_EQ expression .) ]
  ! TIMES           [ reduce using rule 26 (expression -> expression GREATER_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression GREATER_EQ expression .) ]
  ! MODULUS         [ reduce using rule 26 (expression -> expression GREATER_EQ expression .) ]
  ! LESS            [ shift and go to state 24 ]
  ! LESS_EQ         [ shift and go to state 25 ]
  ! GREATER         [ shift and go to state 26 ]
  ! GREATER_EQ      [ shift and go to state 27 ]
  ! IS_EQ           [ shift and go to state 28 ]
  ! NOT_EQ          [ shift and go to state 29 ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 31 ]


state 49

    (27) expression -> expression IS_EQ expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . EXPONENT expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . MODULUS expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . LESS_EQ expression
    (25) expression -> expression . GREATER expression
    (26) expression -> expression . GREATER_EQ expression
    (27) expression -> expression . IS_EQ expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    IS_EQ           reduce using rule 27 (expression -> expression IS_EQ expression .)
    NOT_EQ          reduce using rule 27 (expression -> expression IS_EQ expression .)
    AND             reduce using rule 27 (expression -> expression IS_EQ expression .)
    OR              reduce using rule 27 (expression -> expression IS_EQ expression .)
    SEMICOLON       reduce using rule 27 (expression -> expression IS_EQ expression .)
    RBRACE          reduce using rule 27 (expression -> expression IS_EQ expression .)
    RPAREN          reduce using rule 27 (expression -> expression IS_EQ expression .)
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    EXPONENT        shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    MODULUS         shift and go to state 23
    LESS            shift and go to state 24
    LESS_EQ         shift and go to state 25
    GREATER         shift and go to state 26
    GREATER_EQ      shift and go to state 27

  ! PLUS            [ reduce using rule 27 (expression -> expression IS_EQ expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression IS_EQ expression .) ]
  ! EXPONENT        [ reduce using rule 27 (expression -> expression IS_EQ expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> expression IS_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression IS_EQ expression .) ]
  ! MODULUS         [ reduce using rule 27 (expression -> expression IS_EQ expression .) ]
  ! LESS            [ reduce using rule 27 (expression -> expression IS_EQ expression .) ]
  ! LESS_EQ         [ reduce using rule 27 (expression -> expression IS_EQ expression .) ]
  ! GREATER         [ reduce using rule 27 (expression -> expression IS_EQ expression .) ]
  ! GREATER_EQ      [ reduce using rule 27 (expression -> expression IS_EQ expression .) ]
  ! IS_EQ           [ shift and go to state 28 ]
  ! NOT_EQ          [ shift and go to state 29 ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 31 ]


state 50

    (28) expression -> expression NOT_EQ expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . EXPONENT expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . MODULUS expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . LESS_EQ expression
    (25) expression -> expression . GREATER expression
    (26) expression -> expression . GREATER_EQ expression
    (27) expression -> expression . IS_EQ expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    IS_EQ           reduce using rule 28 (expression -> expression NOT_EQ expression .)
    NOT_EQ          reduce using rule 28 (expression -> expression NOT_EQ expression .)
    AND             reduce using rule 28 (expression -> expression NOT_EQ expression .)
    OR              reduce using rule 28 (expression -> expression NOT_EQ expression .)
    SEMICOLON       reduce using rule 28 (expression -> expression NOT_EQ expression .)
    RBRACE          reduce using rule 28 (expression -> expression NOT_EQ expression .)
    RPAREN          reduce using rule 28 (expression -> expression NOT_EQ expression .)
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    EXPONENT        shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    MODULUS         shift and go to state 23
    LESS            shift and go to state 24
    LESS_EQ         shift and go to state 25
    GREATER         shift and go to state 26
    GREATER_EQ      shift and go to state 27

  ! PLUS            [ reduce using rule 28 (expression -> expression NOT_EQ expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression NOT_EQ expression .) ]
  ! EXPONENT        [ reduce using rule 28 (expression -> expression NOT_EQ expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression NOT_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression NOT_EQ expression .) ]
  ! MODULUS         [ reduce using rule 28 (expression -> expression NOT_EQ expression .) ]
  ! LESS            [ reduce using rule 28 (expression -> expression NOT_EQ expression .) ]
  ! LESS_EQ         [ reduce using rule 28 (expression -> expression NOT_EQ expression .) ]
  ! GREATER         [ reduce using rule 28 (expression -> expression NOT_EQ expression .) ]
  ! GREATER_EQ      [ reduce using rule 28 (expression -> expression NOT_EQ expression .) ]
  ! IS_EQ           [ shift and go to state 28 ]
  ! NOT_EQ          [ shift and go to state 29 ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 31 ]


state 51

    (29) expression -> expression AND expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . EXPONENT expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . MODULUS expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . LESS_EQ expression
    (25) expression -> expression . GREATER expression
    (26) expression -> expression . GREATER_EQ expression
    (27) expression -> expression . IS_EQ expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    AND             reduce using rule 29 (expression -> expression AND expression .)
    OR              reduce using rule 29 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 29 (expression -> expression AND expression .)
    RBRACE          reduce using rule 29 (expression -> expression AND expression .)
    RPAREN          reduce using rule 29 (expression -> expression AND expression .)
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    EXPONENT        shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    MODULUS         shift and go to state 23
    LESS            shift and go to state 24
    LESS_EQ         shift and go to state 25
    GREATER         shift and go to state 26
    GREATER_EQ      shift and go to state 27
    IS_EQ           shift and go to state 28
    NOT_EQ          shift and go to state 29

  ! PLUS            [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! EXPONENT        [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! MODULUS         [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! LESS_EQ         [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! GREATER_EQ      [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! IS_EQ           [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! NOT_EQ          [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 31 ]


state 52

    (30) expression -> expression OR expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . EXPONENT expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . MODULUS expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . LESS_EQ expression
    (25) expression -> expression . GREATER expression
    (26) expression -> expression . GREATER_EQ expression
    (27) expression -> expression . IS_EQ expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    OR              reduce using rule 30 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 30 (expression -> expression OR expression .)
    RBRACE          reduce using rule 30 (expression -> expression OR expression .)
    RPAREN          reduce using rule 30 (expression -> expression OR expression .)
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    EXPONENT        shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    MODULUS         shift and go to state 23
    LESS            shift and go to state 24
    LESS_EQ         shift and go to state 25
    GREATER         shift and go to state 26
    GREATER_EQ      shift and go to state 27
    IS_EQ           shift and go to state 28
    NOT_EQ          shift and go to state 29
    AND             shift and go to state 30

  ! PLUS            [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! EXPONENT        [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! MODULUS         [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! LESS_EQ         [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! GREATER_EQ      [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! IS_EQ           [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! NOT_EQ          [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 31 ]


state 53

    (31) expression -> identifier EQUALS expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . EXPONENT expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . MODULUS expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . LESS_EQ expression
    (25) expression -> expression . GREATER expression
    (26) expression -> expression . GREATER_EQ expression
    (27) expression -> expression . IS_EQ expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    SEMICOLON       reduce using rule 31 (expression -> identifier EQUALS expression .)
    RBRACE          reduce using rule 31 (expression -> identifier EQUALS expression .)
    RPAREN          reduce using rule 31 (expression -> identifier EQUALS expression .)
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    EXPONENT        shift and go to state 20
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 22
    MODULUS         shift and go to state 23
    LESS            shift and go to state 24
    LESS_EQ         shift and go to state 25
    GREATER         shift and go to state 26
    GREATER_EQ      shift and go to state 27
    IS_EQ           shift and go to state 28
    NOT_EQ          shift and go to state 29
    AND             shift and go to state 30
    OR              shift and go to state 31

  ! PLUS            [ reduce using rule 31 (expression -> identifier EQUALS expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> identifier EQUALS expression .) ]
  ! EXPONENT        [ reduce using rule 31 (expression -> identifier EQUALS expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> identifier EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> identifier EQUALS expression .) ]
  ! MODULUS         [ reduce using rule 31 (expression -> identifier EQUALS expression .) ]
  ! LESS            [ reduce using rule 31 (expression -> identifier EQUALS expression .) ]
  ! LESS_EQ         [ reduce using rule 31 (expression -> identifier EQUALS expression .) ]
  ! GREATER         [ reduce using rule 31 (expression -> identifier EQUALS expression .) ]
  ! GREATER_EQ      [ reduce using rule 31 (expression -> identifier EQUALS expression .) ]
  ! IS_EQ           [ reduce using rule 31 (expression -> identifier EQUALS expression .) ]
  ! NOT_EQ          [ reduce using rule 31 (expression -> identifier EQUALS expression .) ]
  ! AND             [ reduce using rule 31 (expression -> identifier EQUALS expression .) ]
  ! OR              [ reduce using rule 31 (expression -> identifier EQUALS expression .) ]


state 54

    (32) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    EXPONENT        reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    MODULUS         reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    LESS_EQ         reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    GREATER_EQ      reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    IS_EQ           reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    NOT_EQ          reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 32 (expression -> LPAREN expression RPAREN .)

