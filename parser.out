Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    WRITE

Grammar

Rule 0     S' -> program
Rule 1     program -> block_statement
Rule 2     semicolon_opt -> epsilon
Rule 3     semicolon_opt -> SEMICOLON
Rule 4     block_statement -> LBRACE statement_decl_list semicolon_opt RBRACE
Rule 5     statement -> expression
Rule 6     statement -> block_statement
Rule 7     statement -> if_then_statement
Rule 8     statement -> while_statement
Rule 9     statement -> read_statement
Rule 10    read_statement -> READ LPAREN lvalue lvalue_list RPAREN
Rule 11    lvalue_list -> lvalue_list COMMA lvalue
Rule 12    lvalue_list -> epsilon
Rule 13    statement_decl_list -> statement_decl_list SEMICOLON statement_decl
Rule 14    statement_decl_list -> statement_decl
Rule 15    statement_decl_list -> epsilon
Rule 16    statement_decl -> statement
Rule 17    statement_decl -> decl
Rule 18    decl -> ID COLON type Initiation
Rule 19    Initiation -> EQUALS expression
Rule 20    Initiation -> epsilon
Rule 21    if_then_statement -> IF expression block_statement
Rule 22    if_then_statement -> IF expression block_statement ELSE block_statement
Rule 23    while_statement -> WHILE expression block_statement
Rule 24    identifier -> ID
Rule 25    type -> INT
Rule 26    expression -> PLUS expression
Rule 27    expression -> MINUS expression
Rule 28    expression -> NOT expression
Rule 29    expression -> expression PLUS expression
Rule 30    expression -> expression MINUS expression
Rule 31    expression -> expression EXPONENT expression
Rule 32    expression -> expression TIMES expression
Rule 33    expression -> expression DIVIDE expression
Rule 34    expression -> expression MODULUS expression
Rule 35    expression -> expression LESS expression
Rule 36    expression -> expression LESS_EQ expression
Rule 37    expression -> expression GREATER expression
Rule 38    expression -> expression GREATER_EQ expression
Rule 39    expression -> expression IS_EQ expression
Rule 40    expression -> expression NOT_EQ expression
Rule 41    expression -> expression AND expression
Rule 42    expression -> expression OR expression
Rule 43    expression -> lvalue EQUALS expression
Rule 44    expression -> LPAREN expression RPAREN
Rule 45    expression -> INT_LITERAL
Rule 46    expression -> STRING_LITERAL
Rule 47    lvalue -> identifier
Rule 48    expression -> lvalue
Rule 49    epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 41
COLON                : 18
COMMA                : 11
DIVIDE               : 33
ELSE                 : 22
EQUALS               : 19 43
EXPONENT             : 31
GREATER              : 37
GREATER_EQ           : 38
ID                   : 18 24
IF                   : 21 22
INT                  : 25
INT_LITERAL          : 45
IS_EQ                : 39
LBRACE               : 4
LESS                 : 35
LESS_EQ              : 36
LPAREN               : 10 44
MINUS                : 27 30
MODULUS              : 34
NOT                  : 28
NOT_EQ               : 40
OR                   : 42
PLUS                 : 26 29
RBRACE               : 4
READ                 : 10
RPAREN               : 10 44
SEMICOLON            : 3 13
STRING_LITERAL       : 46
TIMES                : 32
WHILE                : 23
WRITE                : 
error                : 

Nonterminals, with rules where they appear

Initiation           : 18
block_statement      : 1 6 21 22 22 23
decl                 : 17
epsilon              : 2 12 15 20
expression           : 5 19 21 22 23 26 27 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 44
identifier           : 47
if_then_statement    : 7
lvalue               : 10 11 43 48
lvalue_list          : 10 11
program              : 0
read_statement       : 9
semicolon_opt        : 4
statement            : 16
statement_decl       : 13 14
statement_decl_list  : 4 13
type                 : 18
while_statement      : 8

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . block_statement
    (4) block_statement -> . LBRACE statement_decl_list semicolon_opt RBRACE

    LBRACE          shift and go to state 3

    program                        shift and go to state 1
    block_statement                shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> block_statement .

    $end            reduce using rule 1 (program -> block_statement .)


state 3

    (4) block_statement -> LBRACE . statement_decl_list semicolon_opt RBRACE
    (13) statement_decl_list -> . statement_decl_list SEMICOLON statement_decl
    (14) statement_decl_list -> . statement_decl
    (15) statement_decl_list -> . epsilon
    (16) statement_decl -> . statement
    (17) statement_decl -> . decl
    (49) epsilon -> .
    (5) statement -> . expression
    (6) statement -> . block_statement
    (7) statement -> . if_then_statement
    (8) statement -> . while_statement
    (9) statement -> . read_statement
    (18) decl -> . ID COLON type Initiation
    (26) expression -> . PLUS expression
    (27) expression -> . MINUS expression
    (28) expression -> . NOT expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression EXPONENT expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULUS expression
    (35) expression -> . expression LESS expression
    (36) expression -> . expression LESS_EQ expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression GREATER_EQ expression
    (39) expression -> . expression IS_EQ expression
    (40) expression -> . expression NOT_EQ expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . lvalue EQUALS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . INT_LITERAL
    (46) expression -> . STRING_LITERAL
    (48) expression -> . lvalue
    (4) block_statement -> . LBRACE statement_decl_list semicolon_opt RBRACE
    (21) if_then_statement -> . IF expression block_statement
    (22) if_then_statement -> . IF expression block_statement ELSE block_statement
    (23) while_statement -> . WHILE expression block_statement
    (10) read_statement -> . READ LPAREN lvalue lvalue_list RPAREN
    (47) lvalue -> . identifier
    (24) identifier -> . ID

    SEMICOLON       reduce using rule 49 (epsilon -> .)
    RBRACE          reduce using rule 49 (epsilon -> .)
    ID              shift and go to state 14
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    LPAREN          shift and go to state 19
    INT_LITERAL     shift and go to state 20
    STRING_LITERAL  shift and go to state 21
    LBRACE          shift and go to state 3
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    READ            shift and go to state 24

    statement_decl_list            shift and go to state 4
    statement_decl                 shift and go to state 5
    epsilon                        shift and go to state 6
    statement                      shift and go to state 7
    decl                           shift and go to state 8
    expression                     shift and go to state 9
    block_statement                shift and go to state 10
    if_then_statement              shift and go to state 11
    while_statement                shift and go to state 12
    read_statement                 shift and go to state 13
    lvalue                         shift and go to state 18
    identifier                     shift and go to state 25

state 4

    (4) block_statement -> LBRACE statement_decl_list . semicolon_opt RBRACE
    (13) statement_decl_list -> statement_decl_list . SEMICOLON statement_decl
    (2) semicolon_opt -> . epsilon
    (3) semicolon_opt -> . SEMICOLON
    (49) epsilon -> .

    SEMICOLON       shift and go to state 27
    RBRACE          reduce using rule 49 (epsilon -> .)

    semicolon_opt                  shift and go to state 26
    epsilon                        shift and go to state 28

state 5

    (14) statement_decl_list -> statement_decl .

    SEMICOLON       reduce using rule 14 (statement_decl_list -> statement_decl .)
    RBRACE          reduce using rule 14 (statement_decl_list -> statement_decl .)


state 6

    (15) statement_decl_list -> epsilon .

    SEMICOLON       reduce using rule 15 (statement_decl_list -> epsilon .)
    RBRACE          reduce using rule 15 (statement_decl_list -> epsilon .)


state 7

    (16) statement_decl -> statement .

    SEMICOLON       reduce using rule 16 (statement_decl -> statement .)
    RBRACE          reduce using rule 16 (statement_decl -> statement .)


state 8

    (17) statement_decl -> decl .

    SEMICOLON       reduce using rule 17 (statement_decl -> decl .)
    RBRACE          reduce using rule 17 (statement_decl -> decl .)


state 9

    (5) statement -> expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . EXPONENT expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULUS expression
    (35) expression -> expression . LESS expression
    (36) expression -> expression . LESS_EQ expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . GREATER_EQ expression
    (39) expression -> expression . IS_EQ expression
    (40) expression -> expression . NOT_EQ expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    SEMICOLON       reduce using rule 5 (statement -> expression .)
    RBRACE          reduce using rule 5 (statement -> expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    EXPONENT        shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULUS         shift and go to state 34
    LESS            shift and go to state 35
    LESS_EQ         shift and go to state 36
    GREATER         shift and go to state 37
    GREATER_EQ      shift and go to state 38
    IS_EQ           shift and go to state 39
    NOT_EQ          shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 10

    (6) statement -> block_statement .

    SEMICOLON       reduce using rule 6 (statement -> block_statement .)
    RBRACE          reduce using rule 6 (statement -> block_statement .)


state 11

    (7) statement -> if_then_statement .

    SEMICOLON       reduce using rule 7 (statement -> if_then_statement .)
    RBRACE          reduce using rule 7 (statement -> if_then_statement .)


state 12

    (8) statement -> while_statement .

    SEMICOLON       reduce using rule 8 (statement -> while_statement .)
    RBRACE          reduce using rule 8 (statement -> while_statement .)


state 13

    (9) statement -> read_statement .

    SEMICOLON       reduce using rule 9 (statement -> read_statement .)
    RBRACE          reduce using rule 9 (statement -> read_statement .)


state 14

    (18) decl -> ID . COLON type Initiation
    (24) identifier -> ID .

    COLON           shift and go to state 43
    EQUALS          reduce using rule 24 (identifier -> ID .)
    PLUS            reduce using rule 24 (identifier -> ID .)
    MINUS           reduce using rule 24 (identifier -> ID .)
    EXPONENT        reduce using rule 24 (identifier -> ID .)
    TIMES           reduce using rule 24 (identifier -> ID .)
    DIVIDE          reduce using rule 24 (identifier -> ID .)
    MODULUS         reduce using rule 24 (identifier -> ID .)
    LESS            reduce using rule 24 (identifier -> ID .)
    LESS_EQ         reduce using rule 24 (identifier -> ID .)
    GREATER         reduce using rule 24 (identifier -> ID .)
    GREATER_EQ      reduce using rule 24 (identifier -> ID .)
    IS_EQ           reduce using rule 24 (identifier -> ID .)
    NOT_EQ          reduce using rule 24 (identifier -> ID .)
    AND             reduce using rule 24 (identifier -> ID .)
    OR              reduce using rule 24 (identifier -> ID .)
    SEMICOLON       reduce using rule 24 (identifier -> ID .)
    RBRACE          reduce using rule 24 (identifier -> ID .)


state 15

    (26) expression -> PLUS . expression
    (26) expression -> . PLUS expression
    (27) expression -> . MINUS expression
    (28) expression -> . NOT expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression EXPONENT expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULUS expression
    (35) expression -> . expression LESS expression
    (36) expression -> . expression LESS_EQ expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression GREATER_EQ expression
    (39) expression -> . expression IS_EQ expression
    (40) expression -> . expression NOT_EQ expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . lvalue EQUALS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . INT_LITERAL
    (46) expression -> . STRING_LITERAL
    (48) expression -> . lvalue
    (47) lvalue -> . identifier
    (24) identifier -> . ID

    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    LPAREN          shift and go to state 19
    INT_LITERAL     shift and go to state 20
    STRING_LITERAL  shift and go to state 21
    ID              shift and go to state 45

    expression                     shift and go to state 44
    lvalue                         shift and go to state 18
    identifier                     shift and go to state 25

state 16

    (27) expression -> MINUS . expression
    (26) expression -> . PLUS expression
    (27) expression -> . MINUS expression
    (28) expression -> . NOT expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression EXPONENT expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULUS expression
    (35) expression -> . expression LESS expression
    (36) expression -> . expression LESS_EQ expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression GREATER_EQ expression
    (39) expression -> . expression IS_EQ expression
    (40) expression -> . expression NOT_EQ expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . lvalue EQUALS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . INT_LITERAL
    (46) expression -> . STRING_LITERAL
    (48) expression -> . lvalue
    (47) lvalue -> . identifier
    (24) identifier -> . ID

    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    LPAREN          shift and go to state 19
    INT_LITERAL     shift and go to state 20
    STRING_LITERAL  shift and go to state 21
    ID              shift and go to state 45

    expression                     shift and go to state 46
    lvalue                         shift and go to state 18
    identifier                     shift and go to state 25

state 17

    (28) expression -> NOT . expression
    (26) expression -> . PLUS expression
    (27) expression -> . MINUS expression
    (28) expression -> . NOT expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression EXPONENT expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULUS expression
    (35) expression -> . expression LESS expression
    (36) expression -> . expression LESS_EQ expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression GREATER_EQ expression
    (39) expression -> . expression IS_EQ expression
    (40) expression -> . expression NOT_EQ expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . lvalue EQUALS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . INT_LITERAL
    (46) expression -> . STRING_LITERAL
    (48) expression -> . lvalue
    (47) lvalue -> . identifier
    (24) identifier -> . ID

    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    LPAREN          shift and go to state 19
    INT_LITERAL     shift and go to state 20
    STRING_LITERAL  shift and go to state 21
    ID              shift and go to state 45

    expression                     shift and go to state 47
    lvalue                         shift and go to state 18
    identifier                     shift and go to state 25

state 18

    (43) expression -> lvalue . EQUALS expression
    (48) expression -> lvalue .

    EQUALS          shift and go to state 48
    PLUS            reduce using rule 48 (expression -> lvalue .)
    MINUS           reduce using rule 48 (expression -> lvalue .)
    EXPONENT        reduce using rule 48 (expression -> lvalue .)
    TIMES           reduce using rule 48 (expression -> lvalue .)
    DIVIDE          reduce using rule 48 (expression -> lvalue .)
    MODULUS         reduce using rule 48 (expression -> lvalue .)
    LESS            reduce using rule 48 (expression -> lvalue .)
    LESS_EQ         reduce using rule 48 (expression -> lvalue .)
    GREATER         reduce using rule 48 (expression -> lvalue .)
    GREATER_EQ      reduce using rule 48 (expression -> lvalue .)
    IS_EQ           reduce using rule 48 (expression -> lvalue .)
    NOT_EQ          reduce using rule 48 (expression -> lvalue .)
    AND             reduce using rule 48 (expression -> lvalue .)
    OR              reduce using rule 48 (expression -> lvalue .)
    SEMICOLON       reduce using rule 48 (expression -> lvalue .)
    RBRACE          reduce using rule 48 (expression -> lvalue .)
    RPAREN          reduce using rule 48 (expression -> lvalue .)
    LBRACE          reduce using rule 48 (expression -> lvalue .)


state 19

    (44) expression -> LPAREN . expression RPAREN
    (26) expression -> . PLUS expression
    (27) expression -> . MINUS expression
    (28) expression -> . NOT expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression EXPONENT expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULUS expression
    (35) expression -> . expression LESS expression
    (36) expression -> . expression LESS_EQ expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression GREATER_EQ expression
    (39) expression -> . expression IS_EQ expression
    (40) expression -> . expression NOT_EQ expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . lvalue EQUALS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . INT_LITERAL
    (46) expression -> . STRING_LITERAL
    (48) expression -> . lvalue
    (47) lvalue -> . identifier
    (24) identifier -> . ID

    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    LPAREN          shift and go to state 19
    INT_LITERAL     shift and go to state 20
    STRING_LITERAL  shift and go to state 21
    ID              shift and go to state 45

    expression                     shift and go to state 49
    lvalue                         shift and go to state 18
    identifier                     shift and go to state 25

state 20

    (45) expression -> INT_LITERAL .

    PLUS            reduce using rule 45 (expression -> INT_LITERAL .)
    MINUS           reduce using rule 45 (expression -> INT_LITERAL .)
    EXPONENT        reduce using rule 45 (expression -> INT_LITERAL .)
    TIMES           reduce using rule 45 (expression -> INT_LITERAL .)
    DIVIDE          reduce using rule 45 (expression -> INT_LITERAL .)
    MODULUS         reduce using rule 45 (expression -> INT_LITERAL .)
    LESS            reduce using rule 45 (expression -> INT_LITERAL .)
    LESS_EQ         reduce using rule 45 (expression -> INT_LITERAL .)
    GREATER         reduce using rule 45 (expression -> INT_LITERAL .)
    GREATER_EQ      reduce using rule 45 (expression -> INT_LITERAL .)
    IS_EQ           reduce using rule 45 (expression -> INT_LITERAL .)
    NOT_EQ          reduce using rule 45 (expression -> INT_LITERAL .)
    AND             reduce using rule 45 (expression -> INT_LITERAL .)
    OR              reduce using rule 45 (expression -> INT_LITERAL .)
    SEMICOLON       reduce using rule 45 (expression -> INT_LITERAL .)
    RBRACE          reduce using rule 45 (expression -> INT_LITERAL .)
    RPAREN          reduce using rule 45 (expression -> INT_LITERAL .)
    LBRACE          reduce using rule 45 (expression -> INT_LITERAL .)


state 21

    (46) expression -> STRING_LITERAL .

    PLUS            reduce using rule 46 (expression -> STRING_LITERAL .)
    MINUS           reduce using rule 46 (expression -> STRING_LITERAL .)
    EXPONENT        reduce using rule 46 (expression -> STRING_LITERAL .)
    TIMES           reduce using rule 46 (expression -> STRING_LITERAL .)
    DIVIDE          reduce using rule 46 (expression -> STRING_LITERAL .)
    MODULUS         reduce using rule 46 (expression -> STRING_LITERAL .)
    LESS            reduce using rule 46 (expression -> STRING_LITERAL .)
    LESS_EQ         reduce using rule 46 (expression -> STRING_LITERAL .)
    GREATER         reduce using rule 46 (expression -> STRING_LITERAL .)
    GREATER_EQ      reduce using rule 46 (expression -> STRING_LITERAL .)
    IS_EQ           reduce using rule 46 (expression -> STRING_LITERAL .)
    NOT_EQ          reduce using rule 46 (expression -> STRING_LITERAL .)
    AND             reduce using rule 46 (expression -> STRING_LITERAL .)
    OR              reduce using rule 46 (expression -> STRING_LITERAL .)
    SEMICOLON       reduce using rule 46 (expression -> STRING_LITERAL .)
    RBRACE          reduce using rule 46 (expression -> STRING_LITERAL .)
    RPAREN          reduce using rule 46 (expression -> STRING_LITERAL .)
    LBRACE          reduce using rule 46 (expression -> STRING_LITERAL .)


state 22

    (21) if_then_statement -> IF . expression block_statement
    (22) if_then_statement -> IF . expression block_statement ELSE block_statement
    (26) expression -> . PLUS expression
    (27) expression -> . MINUS expression
    (28) expression -> . NOT expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression EXPONENT expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULUS expression
    (35) expression -> . expression LESS expression
    (36) expression -> . expression LESS_EQ expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression GREATER_EQ expression
    (39) expression -> . expression IS_EQ expression
    (40) expression -> . expression NOT_EQ expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . lvalue EQUALS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . INT_LITERAL
    (46) expression -> . STRING_LITERAL
    (48) expression -> . lvalue
    (47) lvalue -> . identifier
    (24) identifier -> . ID

    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    LPAREN          shift and go to state 19
    INT_LITERAL     shift and go to state 20
    STRING_LITERAL  shift and go to state 21
    ID              shift and go to state 45

    expression                     shift and go to state 50
    lvalue                         shift and go to state 18
    identifier                     shift and go to state 25

state 23

    (23) while_statement -> WHILE . expression block_statement
    (26) expression -> . PLUS expression
    (27) expression -> . MINUS expression
    (28) expression -> . NOT expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression EXPONENT expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULUS expression
    (35) expression -> . expression LESS expression
    (36) expression -> . expression LESS_EQ expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression GREATER_EQ expression
    (39) expression -> . expression IS_EQ expression
    (40) expression -> . expression NOT_EQ expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . lvalue EQUALS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . INT_LITERAL
    (46) expression -> . STRING_LITERAL
    (48) expression -> . lvalue
    (47) lvalue -> . identifier
    (24) identifier -> . ID

    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    LPAREN          shift and go to state 19
    INT_LITERAL     shift and go to state 20
    STRING_LITERAL  shift and go to state 21
    ID              shift and go to state 45

    expression                     shift and go to state 51
    lvalue                         shift and go to state 18
    identifier                     shift and go to state 25

state 24

    (10) read_statement -> READ . LPAREN lvalue lvalue_list RPAREN

    LPAREN          shift and go to state 52


state 25

    (47) lvalue -> identifier .

    EQUALS          reduce using rule 47 (lvalue -> identifier .)
    PLUS            reduce using rule 47 (lvalue -> identifier .)
    MINUS           reduce using rule 47 (lvalue -> identifier .)
    EXPONENT        reduce using rule 47 (lvalue -> identifier .)
    TIMES           reduce using rule 47 (lvalue -> identifier .)
    DIVIDE          reduce using rule 47 (lvalue -> identifier .)
    MODULUS         reduce using rule 47 (lvalue -> identifier .)
    LESS            reduce using rule 47 (lvalue -> identifier .)
    LESS_EQ         reduce using rule 47 (lvalue -> identifier .)
    GREATER         reduce using rule 47 (lvalue -> identifier .)
    GREATER_EQ      reduce using rule 47 (lvalue -> identifier .)
    IS_EQ           reduce using rule 47 (lvalue -> identifier .)
    NOT_EQ          reduce using rule 47 (lvalue -> identifier .)
    AND             reduce using rule 47 (lvalue -> identifier .)
    OR              reduce using rule 47 (lvalue -> identifier .)
    SEMICOLON       reduce using rule 47 (lvalue -> identifier .)
    RBRACE          reduce using rule 47 (lvalue -> identifier .)
    RPAREN          reduce using rule 47 (lvalue -> identifier .)
    LBRACE          reduce using rule 47 (lvalue -> identifier .)
    COMMA           reduce using rule 47 (lvalue -> identifier .)


state 26

    (4) block_statement -> LBRACE statement_decl_list semicolon_opt . RBRACE

    RBRACE          shift and go to state 53


state 27

    (13) statement_decl_list -> statement_decl_list SEMICOLON . statement_decl
    (3) semicolon_opt -> SEMICOLON .
    (16) statement_decl -> . statement
    (17) statement_decl -> . decl
    (5) statement -> . expression
    (6) statement -> . block_statement
    (7) statement -> . if_then_statement
    (8) statement -> . while_statement
    (9) statement -> . read_statement
    (18) decl -> . ID COLON type Initiation
    (26) expression -> . PLUS expression
    (27) expression -> . MINUS expression
    (28) expression -> . NOT expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression EXPONENT expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULUS expression
    (35) expression -> . expression LESS expression
    (36) expression -> . expression LESS_EQ expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression GREATER_EQ expression
    (39) expression -> . expression IS_EQ expression
    (40) expression -> . expression NOT_EQ expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . lvalue EQUALS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . INT_LITERAL
    (46) expression -> . STRING_LITERAL
    (48) expression -> . lvalue
    (4) block_statement -> . LBRACE statement_decl_list semicolon_opt RBRACE
    (21) if_then_statement -> . IF expression block_statement
    (22) if_then_statement -> . IF expression block_statement ELSE block_statement
    (23) while_statement -> . WHILE expression block_statement
    (10) read_statement -> . READ LPAREN lvalue lvalue_list RPAREN
    (47) lvalue -> . identifier
    (24) identifier -> . ID

    RBRACE          reduce using rule 3 (semicolon_opt -> SEMICOLON .)
    ID              shift and go to state 14
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    LPAREN          shift and go to state 19
    INT_LITERAL     shift and go to state 20
    STRING_LITERAL  shift and go to state 21
    LBRACE          shift and go to state 3
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    READ            shift and go to state 24

    statement_decl                 shift and go to state 54
    statement                      shift and go to state 7
    decl                           shift and go to state 8
    expression                     shift and go to state 9
    block_statement                shift and go to state 10
    if_then_statement              shift and go to state 11
    while_statement                shift and go to state 12
    read_statement                 shift and go to state 13
    lvalue                         shift and go to state 18
    identifier                     shift and go to state 25

state 28

    (2) semicolon_opt -> epsilon .

    RBRACE          reduce using rule 2 (semicolon_opt -> epsilon .)


state 29

    (29) expression -> expression PLUS . expression
    (26) expression -> . PLUS expression
    (27) expression -> . MINUS expression
    (28) expression -> . NOT expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression EXPONENT expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULUS expression
    (35) expression -> . expression LESS expression
    (36) expression -> . expression LESS_EQ expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression GREATER_EQ expression
    (39) expression -> . expression IS_EQ expression
    (40) expression -> . expression NOT_EQ expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . lvalue EQUALS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . INT_LITERAL
    (46) expression -> . STRING_LITERAL
    (48) expression -> . lvalue
    (47) lvalue -> . identifier
    (24) identifier -> . ID

    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    LPAREN          shift and go to state 19
    INT_LITERAL     shift and go to state 20
    STRING_LITERAL  shift and go to state 21
    ID              shift and go to state 45

    expression                     shift and go to state 55
    lvalue                         shift and go to state 18
    identifier                     shift and go to state 25

state 30

    (30) expression -> expression MINUS . expression
    (26) expression -> . PLUS expression
    (27) expression -> . MINUS expression
    (28) expression -> . NOT expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression EXPONENT expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULUS expression
    (35) expression -> . expression LESS expression
    (36) expression -> . expression LESS_EQ expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression GREATER_EQ expression
    (39) expression -> . expression IS_EQ expression
    (40) expression -> . expression NOT_EQ expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . lvalue EQUALS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . INT_LITERAL
    (46) expression -> . STRING_LITERAL
    (48) expression -> . lvalue
    (47) lvalue -> . identifier
    (24) identifier -> . ID

    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    LPAREN          shift and go to state 19
    INT_LITERAL     shift and go to state 20
    STRING_LITERAL  shift and go to state 21
    ID              shift and go to state 45

    expression                     shift and go to state 56
    lvalue                         shift and go to state 18
    identifier                     shift and go to state 25

state 31

    (31) expression -> expression EXPONENT . expression
    (26) expression -> . PLUS expression
    (27) expression -> . MINUS expression
    (28) expression -> . NOT expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression EXPONENT expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULUS expression
    (35) expression -> . expression LESS expression
    (36) expression -> . expression LESS_EQ expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression GREATER_EQ expression
    (39) expression -> . expression IS_EQ expression
    (40) expression -> . expression NOT_EQ expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . lvalue EQUALS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . INT_LITERAL
    (46) expression -> . STRING_LITERAL
    (48) expression -> . lvalue
    (47) lvalue -> . identifier
    (24) identifier -> . ID

    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    LPAREN          shift and go to state 19
    INT_LITERAL     shift and go to state 20
    STRING_LITERAL  shift and go to state 21
    ID              shift and go to state 45

    expression                     shift and go to state 57
    lvalue                         shift and go to state 18
    identifier                     shift and go to state 25

state 32

    (32) expression -> expression TIMES . expression
    (26) expression -> . PLUS expression
    (27) expression -> . MINUS expression
    (28) expression -> . NOT expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression EXPONENT expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULUS expression
    (35) expression -> . expression LESS expression
    (36) expression -> . expression LESS_EQ expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression GREATER_EQ expression
    (39) expression -> . expression IS_EQ expression
    (40) expression -> . expression NOT_EQ expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . lvalue EQUALS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . INT_LITERAL
    (46) expression -> . STRING_LITERAL
    (48) expression -> . lvalue
    (47) lvalue -> . identifier
    (24) identifier -> . ID

    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    LPAREN          shift and go to state 19
    INT_LITERAL     shift and go to state 20
    STRING_LITERAL  shift and go to state 21
    ID              shift and go to state 45

    expression                     shift and go to state 58
    lvalue                         shift and go to state 18
    identifier                     shift and go to state 25

state 33

    (33) expression -> expression DIVIDE . expression
    (26) expression -> . PLUS expression
    (27) expression -> . MINUS expression
    (28) expression -> . NOT expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression EXPONENT expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULUS expression
    (35) expression -> . expression LESS expression
    (36) expression -> . expression LESS_EQ expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression GREATER_EQ expression
    (39) expression -> . expression IS_EQ expression
    (40) expression -> . expression NOT_EQ expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . lvalue EQUALS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . INT_LITERAL
    (46) expression -> . STRING_LITERAL
    (48) expression -> . lvalue
    (47) lvalue -> . identifier
    (24) identifier -> . ID

    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    LPAREN          shift and go to state 19
    INT_LITERAL     shift and go to state 20
    STRING_LITERAL  shift and go to state 21
    ID              shift and go to state 45

    expression                     shift and go to state 59
    lvalue                         shift and go to state 18
    identifier                     shift and go to state 25

state 34

    (34) expression -> expression MODULUS . expression
    (26) expression -> . PLUS expression
    (27) expression -> . MINUS expression
    (28) expression -> . NOT expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression EXPONENT expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULUS expression
    (35) expression -> . expression LESS expression
    (36) expression -> . expression LESS_EQ expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression GREATER_EQ expression
    (39) expression -> . expression IS_EQ expression
    (40) expression -> . expression NOT_EQ expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . lvalue EQUALS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . INT_LITERAL
    (46) expression -> . STRING_LITERAL
    (48) expression -> . lvalue
    (47) lvalue -> . identifier
    (24) identifier -> . ID

    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    LPAREN          shift and go to state 19
    INT_LITERAL     shift and go to state 20
    STRING_LITERAL  shift and go to state 21
    ID              shift and go to state 45

    expression                     shift and go to state 60
    lvalue                         shift and go to state 18
    identifier                     shift and go to state 25

state 35

    (35) expression -> expression LESS . expression
    (26) expression -> . PLUS expression
    (27) expression -> . MINUS expression
    (28) expression -> . NOT expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression EXPONENT expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULUS expression
    (35) expression -> . expression LESS expression
    (36) expression -> . expression LESS_EQ expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression GREATER_EQ expression
    (39) expression -> . expression IS_EQ expression
    (40) expression -> . expression NOT_EQ expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . lvalue EQUALS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . INT_LITERAL
    (46) expression -> . STRING_LITERAL
    (48) expression -> . lvalue
    (47) lvalue -> . identifier
    (24) identifier -> . ID

    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    LPAREN          shift and go to state 19
    INT_LITERAL     shift and go to state 20
    STRING_LITERAL  shift and go to state 21
    ID              shift and go to state 45

    expression                     shift and go to state 61
    lvalue                         shift and go to state 18
    identifier                     shift and go to state 25

state 36

    (36) expression -> expression LESS_EQ . expression
    (26) expression -> . PLUS expression
    (27) expression -> . MINUS expression
    (28) expression -> . NOT expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression EXPONENT expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULUS expression
    (35) expression -> . expression LESS expression
    (36) expression -> . expression LESS_EQ expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression GREATER_EQ expression
    (39) expression -> . expression IS_EQ expression
    (40) expression -> . expression NOT_EQ expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . lvalue EQUALS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . INT_LITERAL
    (46) expression -> . STRING_LITERAL
    (48) expression -> . lvalue
    (47) lvalue -> . identifier
    (24) identifier -> . ID

    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    LPAREN          shift and go to state 19
    INT_LITERAL     shift and go to state 20
    STRING_LITERAL  shift and go to state 21
    ID              shift and go to state 45

    expression                     shift and go to state 62
    lvalue                         shift and go to state 18
    identifier                     shift and go to state 25

state 37

    (37) expression -> expression GREATER . expression
    (26) expression -> . PLUS expression
    (27) expression -> . MINUS expression
    (28) expression -> . NOT expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression EXPONENT expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULUS expression
    (35) expression -> . expression LESS expression
    (36) expression -> . expression LESS_EQ expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression GREATER_EQ expression
    (39) expression -> . expression IS_EQ expression
    (40) expression -> . expression NOT_EQ expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . lvalue EQUALS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . INT_LITERAL
    (46) expression -> . STRING_LITERAL
    (48) expression -> . lvalue
    (47) lvalue -> . identifier
    (24) identifier -> . ID

    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    LPAREN          shift and go to state 19
    INT_LITERAL     shift and go to state 20
    STRING_LITERAL  shift and go to state 21
    ID              shift and go to state 45

    expression                     shift and go to state 63
    lvalue                         shift and go to state 18
    identifier                     shift and go to state 25

state 38

    (38) expression -> expression GREATER_EQ . expression
    (26) expression -> . PLUS expression
    (27) expression -> . MINUS expression
    (28) expression -> . NOT expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression EXPONENT expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULUS expression
    (35) expression -> . expression LESS expression
    (36) expression -> . expression LESS_EQ expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression GREATER_EQ expression
    (39) expression -> . expression IS_EQ expression
    (40) expression -> . expression NOT_EQ expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . lvalue EQUALS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . INT_LITERAL
    (46) expression -> . STRING_LITERAL
    (48) expression -> . lvalue
    (47) lvalue -> . identifier
    (24) identifier -> . ID

    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    LPAREN          shift and go to state 19
    INT_LITERAL     shift and go to state 20
    STRING_LITERAL  shift and go to state 21
    ID              shift and go to state 45

    expression                     shift and go to state 64
    lvalue                         shift and go to state 18
    identifier                     shift and go to state 25

state 39

    (39) expression -> expression IS_EQ . expression
    (26) expression -> . PLUS expression
    (27) expression -> . MINUS expression
    (28) expression -> . NOT expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression EXPONENT expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULUS expression
    (35) expression -> . expression LESS expression
    (36) expression -> . expression LESS_EQ expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression GREATER_EQ expression
    (39) expression -> . expression IS_EQ expression
    (40) expression -> . expression NOT_EQ expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . lvalue EQUALS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . INT_LITERAL
    (46) expression -> . STRING_LITERAL
    (48) expression -> . lvalue
    (47) lvalue -> . identifier
    (24) identifier -> . ID

    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    LPAREN          shift and go to state 19
    INT_LITERAL     shift and go to state 20
    STRING_LITERAL  shift and go to state 21
    ID              shift and go to state 45

    expression                     shift and go to state 65
    lvalue                         shift and go to state 18
    identifier                     shift and go to state 25

state 40

    (40) expression -> expression NOT_EQ . expression
    (26) expression -> . PLUS expression
    (27) expression -> . MINUS expression
    (28) expression -> . NOT expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression EXPONENT expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULUS expression
    (35) expression -> . expression LESS expression
    (36) expression -> . expression LESS_EQ expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression GREATER_EQ expression
    (39) expression -> . expression IS_EQ expression
    (40) expression -> . expression NOT_EQ expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . lvalue EQUALS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . INT_LITERAL
    (46) expression -> . STRING_LITERAL
    (48) expression -> . lvalue
    (47) lvalue -> . identifier
    (24) identifier -> . ID

    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    LPAREN          shift and go to state 19
    INT_LITERAL     shift and go to state 20
    STRING_LITERAL  shift and go to state 21
    ID              shift and go to state 45

    expression                     shift and go to state 66
    lvalue                         shift and go to state 18
    identifier                     shift and go to state 25

state 41

    (41) expression -> expression AND . expression
    (26) expression -> . PLUS expression
    (27) expression -> . MINUS expression
    (28) expression -> . NOT expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression EXPONENT expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULUS expression
    (35) expression -> . expression LESS expression
    (36) expression -> . expression LESS_EQ expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression GREATER_EQ expression
    (39) expression -> . expression IS_EQ expression
    (40) expression -> . expression NOT_EQ expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . lvalue EQUALS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . INT_LITERAL
    (46) expression -> . STRING_LITERAL
    (48) expression -> . lvalue
    (47) lvalue -> . identifier
    (24) identifier -> . ID

    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    LPAREN          shift and go to state 19
    INT_LITERAL     shift and go to state 20
    STRING_LITERAL  shift and go to state 21
    ID              shift and go to state 45

    expression                     shift and go to state 67
    lvalue                         shift and go to state 18
    identifier                     shift and go to state 25

state 42

    (42) expression -> expression OR . expression
    (26) expression -> . PLUS expression
    (27) expression -> . MINUS expression
    (28) expression -> . NOT expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression EXPONENT expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULUS expression
    (35) expression -> . expression LESS expression
    (36) expression -> . expression LESS_EQ expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression GREATER_EQ expression
    (39) expression -> . expression IS_EQ expression
    (40) expression -> . expression NOT_EQ expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . lvalue EQUALS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . INT_LITERAL
    (46) expression -> . STRING_LITERAL
    (48) expression -> . lvalue
    (47) lvalue -> . identifier
    (24) identifier -> . ID

    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    LPAREN          shift and go to state 19
    INT_LITERAL     shift and go to state 20
    STRING_LITERAL  shift and go to state 21
    ID              shift and go to state 45

    expression                     shift and go to state 68
    lvalue                         shift and go to state 18
    identifier                     shift and go to state 25

state 43

    (18) decl -> ID COLON . type Initiation
    (25) type -> . INT

    INT             shift and go to state 70

    type                           shift and go to state 69

state 44

    (26) expression -> PLUS expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . EXPONENT expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULUS expression
    (35) expression -> expression . LESS expression
    (36) expression -> expression . LESS_EQ expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . GREATER_EQ expression
    (39) expression -> expression . IS_EQ expression
    (40) expression -> expression . NOT_EQ expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    PLUS            reduce using rule 26 (expression -> PLUS expression .)
    MINUS           reduce using rule 26 (expression -> PLUS expression .)
    EXPONENT        reduce using rule 26 (expression -> PLUS expression .)
    TIMES           reduce using rule 26 (expression -> PLUS expression .)
    DIVIDE          reduce using rule 26 (expression -> PLUS expression .)
    MODULUS         reduce using rule 26 (expression -> PLUS expression .)
    LESS            reduce using rule 26 (expression -> PLUS expression .)
    LESS_EQ         reduce using rule 26 (expression -> PLUS expression .)
    GREATER         reduce using rule 26 (expression -> PLUS expression .)
    GREATER_EQ      reduce using rule 26 (expression -> PLUS expression .)
    IS_EQ           reduce using rule 26 (expression -> PLUS expression .)
    NOT_EQ          reduce using rule 26 (expression -> PLUS expression .)
    AND             reduce using rule 26 (expression -> PLUS expression .)
    OR              reduce using rule 26 (expression -> PLUS expression .)
    SEMICOLON       reduce using rule 26 (expression -> PLUS expression .)
    RBRACE          reduce using rule 26 (expression -> PLUS expression .)
    RPAREN          reduce using rule 26 (expression -> PLUS expression .)
    LBRACE          reduce using rule 26 (expression -> PLUS expression .)

  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! EXPONENT        [ shift and go to state 31 ]
  ! TIMES           [ shift and go to state 32 ]
  ! DIVIDE          [ shift and go to state 33 ]
  ! MODULUS         [ shift and go to state 34 ]
  ! LESS            [ shift and go to state 35 ]
  ! LESS_EQ         [ shift and go to state 36 ]
  ! GREATER         [ shift and go to state 37 ]
  ! GREATER_EQ      [ shift and go to state 38 ]
  ! IS_EQ           [ shift and go to state 39 ]
  ! NOT_EQ          [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 45

    (24) identifier -> ID .

    EQUALS          reduce using rule 24 (identifier -> ID .)
    PLUS            reduce using rule 24 (identifier -> ID .)
    MINUS           reduce using rule 24 (identifier -> ID .)
    EXPONENT        reduce using rule 24 (identifier -> ID .)
    TIMES           reduce using rule 24 (identifier -> ID .)
    DIVIDE          reduce using rule 24 (identifier -> ID .)
    MODULUS         reduce using rule 24 (identifier -> ID .)
    LESS            reduce using rule 24 (identifier -> ID .)
    LESS_EQ         reduce using rule 24 (identifier -> ID .)
    GREATER         reduce using rule 24 (identifier -> ID .)
    GREATER_EQ      reduce using rule 24 (identifier -> ID .)
    IS_EQ           reduce using rule 24 (identifier -> ID .)
    NOT_EQ          reduce using rule 24 (identifier -> ID .)
    AND             reduce using rule 24 (identifier -> ID .)
    OR              reduce using rule 24 (identifier -> ID .)
    SEMICOLON       reduce using rule 24 (identifier -> ID .)
    RBRACE          reduce using rule 24 (identifier -> ID .)
    RPAREN          reduce using rule 24 (identifier -> ID .)
    LBRACE          reduce using rule 24 (identifier -> ID .)
    COMMA           reduce using rule 24 (identifier -> ID .)


state 46

    (27) expression -> MINUS expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . EXPONENT expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULUS expression
    (35) expression -> expression . LESS expression
    (36) expression -> expression . LESS_EQ expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . GREATER_EQ expression
    (39) expression -> expression . IS_EQ expression
    (40) expression -> expression . NOT_EQ expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    PLUS            reduce using rule 27 (expression -> MINUS expression .)
    MINUS           reduce using rule 27 (expression -> MINUS expression .)
    EXPONENT        reduce using rule 27 (expression -> MINUS expression .)
    TIMES           reduce using rule 27 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 27 (expression -> MINUS expression .)
    MODULUS         reduce using rule 27 (expression -> MINUS expression .)
    LESS            reduce using rule 27 (expression -> MINUS expression .)
    LESS_EQ         reduce using rule 27 (expression -> MINUS expression .)
    GREATER         reduce using rule 27 (expression -> MINUS expression .)
    GREATER_EQ      reduce using rule 27 (expression -> MINUS expression .)
    IS_EQ           reduce using rule 27 (expression -> MINUS expression .)
    NOT_EQ          reduce using rule 27 (expression -> MINUS expression .)
    AND             reduce using rule 27 (expression -> MINUS expression .)
    OR              reduce using rule 27 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 27 (expression -> MINUS expression .)
    RBRACE          reduce using rule 27 (expression -> MINUS expression .)
    RPAREN          reduce using rule 27 (expression -> MINUS expression .)
    LBRACE          reduce using rule 27 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! EXPONENT        [ shift and go to state 31 ]
  ! TIMES           [ shift and go to state 32 ]
  ! DIVIDE          [ shift and go to state 33 ]
  ! MODULUS         [ shift and go to state 34 ]
  ! LESS            [ shift and go to state 35 ]
  ! LESS_EQ         [ shift and go to state 36 ]
  ! GREATER         [ shift and go to state 37 ]
  ! GREATER_EQ      [ shift and go to state 38 ]
  ! IS_EQ           [ shift and go to state 39 ]
  ! NOT_EQ          [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 47

    (28) expression -> NOT expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . EXPONENT expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULUS expression
    (35) expression -> expression . LESS expression
    (36) expression -> expression . LESS_EQ expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . GREATER_EQ expression
    (39) expression -> expression . IS_EQ expression
    (40) expression -> expression . NOT_EQ expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    PLUS            reduce using rule 28 (expression -> NOT expression .)
    MINUS           reduce using rule 28 (expression -> NOT expression .)
    EXPONENT        reduce using rule 28 (expression -> NOT expression .)
    TIMES           reduce using rule 28 (expression -> NOT expression .)
    DIVIDE          reduce using rule 28 (expression -> NOT expression .)
    MODULUS         reduce using rule 28 (expression -> NOT expression .)
    LESS            reduce using rule 28 (expression -> NOT expression .)
    LESS_EQ         reduce using rule 28 (expression -> NOT expression .)
    GREATER         reduce using rule 28 (expression -> NOT expression .)
    GREATER_EQ      reduce using rule 28 (expression -> NOT expression .)
    IS_EQ           reduce using rule 28 (expression -> NOT expression .)
    NOT_EQ          reduce using rule 28 (expression -> NOT expression .)
    AND             reduce using rule 28 (expression -> NOT expression .)
    OR              reduce using rule 28 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 28 (expression -> NOT expression .)
    RBRACE          reduce using rule 28 (expression -> NOT expression .)
    RPAREN          reduce using rule 28 (expression -> NOT expression .)
    LBRACE          reduce using rule 28 (expression -> NOT expression .)

  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! EXPONENT        [ shift and go to state 31 ]
  ! TIMES           [ shift and go to state 32 ]
  ! DIVIDE          [ shift and go to state 33 ]
  ! MODULUS         [ shift and go to state 34 ]
  ! LESS            [ shift and go to state 35 ]
  ! LESS_EQ         [ shift and go to state 36 ]
  ! GREATER         [ shift and go to state 37 ]
  ! GREATER_EQ      [ shift and go to state 38 ]
  ! IS_EQ           [ shift and go to state 39 ]
  ! NOT_EQ          [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 48

    (43) expression -> lvalue EQUALS . expression
    (26) expression -> . PLUS expression
    (27) expression -> . MINUS expression
    (28) expression -> . NOT expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression EXPONENT expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULUS expression
    (35) expression -> . expression LESS expression
    (36) expression -> . expression LESS_EQ expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression GREATER_EQ expression
    (39) expression -> . expression IS_EQ expression
    (40) expression -> . expression NOT_EQ expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . lvalue EQUALS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . INT_LITERAL
    (46) expression -> . STRING_LITERAL
    (48) expression -> . lvalue
    (47) lvalue -> . identifier
    (24) identifier -> . ID

    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    LPAREN          shift and go to state 19
    INT_LITERAL     shift and go to state 20
    STRING_LITERAL  shift and go to state 21
    ID              shift and go to state 45

    lvalue                         shift and go to state 18
    expression                     shift and go to state 71
    identifier                     shift and go to state 25

state 49

    (44) expression -> LPAREN expression . RPAREN
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . EXPONENT expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULUS expression
    (35) expression -> expression . LESS expression
    (36) expression -> expression . LESS_EQ expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . GREATER_EQ expression
    (39) expression -> expression . IS_EQ expression
    (40) expression -> expression . NOT_EQ expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    RPAREN          shift and go to state 72
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    EXPONENT        shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULUS         shift and go to state 34
    LESS            shift and go to state 35
    LESS_EQ         shift and go to state 36
    GREATER         shift and go to state 37
    GREATER_EQ      shift and go to state 38
    IS_EQ           shift and go to state 39
    NOT_EQ          shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 50

    (21) if_then_statement -> IF expression . block_statement
    (22) if_then_statement -> IF expression . block_statement ELSE block_statement
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . EXPONENT expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULUS expression
    (35) expression -> expression . LESS expression
    (36) expression -> expression . LESS_EQ expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . GREATER_EQ expression
    (39) expression -> expression . IS_EQ expression
    (40) expression -> expression . NOT_EQ expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression
    (4) block_statement -> . LBRACE statement_decl_list semicolon_opt RBRACE

    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    EXPONENT        shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULUS         shift and go to state 34
    LESS            shift and go to state 35
    LESS_EQ         shift and go to state 36
    GREATER         shift and go to state 37
    GREATER_EQ      shift and go to state 38
    IS_EQ           shift and go to state 39
    NOT_EQ          shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42
    LBRACE          shift and go to state 3

    block_statement                shift and go to state 73

state 51

    (23) while_statement -> WHILE expression . block_statement
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . EXPONENT expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULUS expression
    (35) expression -> expression . LESS expression
    (36) expression -> expression . LESS_EQ expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . GREATER_EQ expression
    (39) expression -> expression . IS_EQ expression
    (40) expression -> expression . NOT_EQ expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression
    (4) block_statement -> . LBRACE statement_decl_list semicolon_opt RBRACE

    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    EXPONENT        shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULUS         shift and go to state 34
    LESS            shift and go to state 35
    LESS_EQ         shift and go to state 36
    GREATER         shift and go to state 37
    GREATER_EQ      shift and go to state 38
    IS_EQ           shift and go to state 39
    NOT_EQ          shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42
    LBRACE          shift and go to state 3

    block_statement                shift and go to state 74

state 52

    (10) read_statement -> READ LPAREN . lvalue lvalue_list RPAREN
    (47) lvalue -> . identifier
    (24) identifier -> . ID

    ID              shift and go to state 45

    lvalue                         shift and go to state 75
    identifier                     shift and go to state 25

state 53

    (4) block_statement -> LBRACE statement_decl_list semicolon_opt RBRACE .

    $end            reduce using rule 4 (block_statement -> LBRACE statement_decl_list semicolon_opt RBRACE .)
    SEMICOLON       reduce using rule 4 (block_statement -> LBRACE statement_decl_list semicolon_opt RBRACE .)
    RBRACE          reduce using rule 4 (block_statement -> LBRACE statement_decl_list semicolon_opt RBRACE .)
    ELSE            reduce using rule 4 (block_statement -> LBRACE statement_decl_list semicolon_opt RBRACE .)


state 54

    (13) statement_decl_list -> statement_decl_list SEMICOLON statement_decl .

    SEMICOLON       reduce using rule 13 (statement_decl_list -> statement_decl_list SEMICOLON statement_decl .)
    RBRACE          reduce using rule 13 (statement_decl_list -> statement_decl_list SEMICOLON statement_decl .)


state 55

    (29) expression -> expression PLUS expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . EXPONENT expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULUS expression
    (35) expression -> expression . LESS expression
    (36) expression -> expression . LESS_EQ expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . GREATER_EQ expression
    (39) expression -> expression . IS_EQ expression
    (40) expression -> expression . NOT_EQ expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    PLUS            reduce using rule 29 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 29 (expression -> expression PLUS expression .)
    LESS            reduce using rule 29 (expression -> expression PLUS expression .)
    LESS_EQ         reduce using rule 29 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 29 (expression -> expression PLUS expression .)
    GREATER_EQ      reduce using rule 29 (expression -> expression PLUS expression .)
    IS_EQ           reduce using rule 29 (expression -> expression PLUS expression .)
    NOT_EQ          reduce using rule 29 (expression -> expression PLUS expression .)
    AND             reduce using rule 29 (expression -> expression PLUS expression .)
    OR              reduce using rule 29 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 29 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 29 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 29 (expression -> expression PLUS expression .)
    LBRACE          reduce using rule 29 (expression -> expression PLUS expression .)
    EXPONENT        shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULUS         shift and go to state 34

  ! EXPONENT        [ reduce using rule 29 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression PLUS expression .) ]
  ! MODULUS         [ reduce using rule 29 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! LESS            [ shift and go to state 35 ]
  ! LESS_EQ         [ shift and go to state 36 ]
  ! GREATER         [ shift and go to state 37 ]
  ! GREATER_EQ      [ shift and go to state 38 ]
  ! IS_EQ           [ shift and go to state 39 ]
  ! NOT_EQ          [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 56

    (30) expression -> expression MINUS expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . EXPONENT expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULUS expression
    (35) expression -> expression . LESS expression
    (36) expression -> expression . LESS_EQ expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . GREATER_EQ expression
    (39) expression -> expression . IS_EQ expression
    (40) expression -> expression . NOT_EQ expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    PLUS            reduce using rule 30 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 30 (expression -> expression MINUS expression .)
    LESS            reduce using rule 30 (expression -> expression MINUS expression .)
    LESS_EQ         reduce using rule 30 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 30 (expression -> expression MINUS expression .)
    GREATER_EQ      reduce using rule 30 (expression -> expression MINUS expression .)
    IS_EQ           reduce using rule 30 (expression -> expression MINUS expression .)
    NOT_EQ          reduce using rule 30 (expression -> expression MINUS expression .)
    AND             reduce using rule 30 (expression -> expression MINUS expression .)
    OR              reduce using rule 30 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 30 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 30 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 30 (expression -> expression MINUS expression .)
    LBRACE          reduce using rule 30 (expression -> expression MINUS expression .)
    EXPONENT        shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULUS         shift and go to state 34

  ! EXPONENT        [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! MODULUS         [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! LESS            [ shift and go to state 35 ]
  ! LESS_EQ         [ shift and go to state 36 ]
  ! GREATER         [ shift and go to state 37 ]
  ! GREATER_EQ      [ shift and go to state 38 ]
  ! IS_EQ           [ shift and go to state 39 ]
  ! NOT_EQ          [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 57

    (31) expression -> expression EXPONENT expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . EXPONENT expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULUS expression
    (35) expression -> expression . LESS expression
    (36) expression -> expression . LESS_EQ expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . GREATER_EQ expression
    (39) expression -> expression . IS_EQ expression
    (40) expression -> expression . NOT_EQ expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    PLUS            reduce using rule 31 (expression -> expression EXPONENT expression .)
    MINUS           reduce using rule 31 (expression -> expression EXPONENT expression .)
    TIMES           reduce using rule 31 (expression -> expression EXPONENT expression .)
    DIVIDE          reduce using rule 31 (expression -> expression EXPONENT expression .)
    MODULUS         reduce using rule 31 (expression -> expression EXPONENT expression .)
    LESS            reduce using rule 31 (expression -> expression EXPONENT expression .)
    LESS_EQ         reduce using rule 31 (expression -> expression EXPONENT expression .)
    GREATER         reduce using rule 31 (expression -> expression EXPONENT expression .)
    GREATER_EQ      reduce using rule 31 (expression -> expression EXPONENT expression .)
    IS_EQ           reduce using rule 31 (expression -> expression EXPONENT expression .)
    NOT_EQ          reduce using rule 31 (expression -> expression EXPONENT expression .)
    AND             reduce using rule 31 (expression -> expression EXPONENT expression .)
    OR              reduce using rule 31 (expression -> expression EXPONENT expression .)
    SEMICOLON       reduce using rule 31 (expression -> expression EXPONENT expression .)
    RBRACE          reduce using rule 31 (expression -> expression EXPONENT expression .)
    RPAREN          reduce using rule 31 (expression -> expression EXPONENT expression .)
    LBRACE          reduce using rule 31 (expression -> expression EXPONENT expression .)
    EXPONENT        shift and go to state 31

  ! EXPONENT        [ reduce using rule 31 (expression -> expression EXPONENT expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! TIMES           [ shift and go to state 32 ]
  ! DIVIDE          [ shift and go to state 33 ]
  ! MODULUS         [ shift and go to state 34 ]
  ! LESS            [ shift and go to state 35 ]
  ! LESS_EQ         [ shift and go to state 36 ]
  ! GREATER         [ shift and go to state 37 ]
  ! GREATER_EQ      [ shift and go to state 38 ]
  ! IS_EQ           [ shift and go to state 39 ]
  ! NOT_EQ          [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 58

    (32) expression -> expression TIMES expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . EXPONENT expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULUS expression
    (35) expression -> expression . LESS expression
    (36) expression -> expression . LESS_EQ expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . GREATER_EQ expression
    (39) expression -> expression . IS_EQ expression
    (40) expression -> expression . NOT_EQ expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    PLUS            reduce using rule 32 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 32 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 32 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 32 (expression -> expression TIMES expression .)
    MODULUS         reduce using rule 32 (expression -> expression TIMES expression .)
    LESS            reduce using rule 32 (expression -> expression TIMES expression .)
    LESS_EQ         reduce using rule 32 (expression -> expression TIMES expression .)
    GREATER         reduce using rule 32 (expression -> expression TIMES expression .)
    GREATER_EQ      reduce using rule 32 (expression -> expression TIMES expression .)
    IS_EQ           reduce using rule 32 (expression -> expression TIMES expression .)
    NOT_EQ          reduce using rule 32 (expression -> expression TIMES expression .)
    AND             reduce using rule 32 (expression -> expression TIMES expression .)
    OR              reduce using rule 32 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 32 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 32 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 32 (expression -> expression TIMES expression .)
    LBRACE          reduce using rule 32 (expression -> expression TIMES expression .)
    EXPONENT        shift and go to state 31

  ! EXPONENT        [ reduce using rule 32 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! TIMES           [ shift and go to state 32 ]
  ! DIVIDE          [ shift and go to state 33 ]
  ! MODULUS         [ shift and go to state 34 ]
  ! LESS            [ shift and go to state 35 ]
  ! LESS_EQ         [ shift and go to state 36 ]
  ! GREATER         [ shift and go to state 37 ]
  ! GREATER_EQ      [ shift and go to state 38 ]
  ! IS_EQ           [ shift and go to state 39 ]
  ! NOT_EQ          [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 59

    (33) expression -> expression DIVIDE expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . EXPONENT expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULUS expression
    (35) expression -> expression . LESS expression
    (36) expression -> expression . LESS_EQ expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . GREATER_EQ expression
    (39) expression -> expression . IS_EQ expression
    (40) expression -> expression . NOT_EQ expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    PLUS            reduce using rule 33 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 33 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 33 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 33 (expression -> expression DIVIDE expression .)
    MODULUS         reduce using rule 33 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 33 (expression -> expression DIVIDE expression .)
    LESS_EQ         reduce using rule 33 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 33 (expression -> expression DIVIDE expression .)
    GREATER_EQ      reduce using rule 33 (expression -> expression DIVIDE expression .)
    IS_EQ           reduce using rule 33 (expression -> expression DIVIDE expression .)
    NOT_EQ          reduce using rule 33 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 33 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 33 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 33 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 33 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 33 (expression -> expression DIVIDE expression .)
    LBRACE          reduce using rule 33 (expression -> expression DIVIDE expression .)
    EXPONENT        shift and go to state 31

  ! EXPONENT        [ reduce using rule 33 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! TIMES           [ shift and go to state 32 ]
  ! DIVIDE          [ shift and go to state 33 ]
  ! MODULUS         [ shift and go to state 34 ]
  ! LESS            [ shift and go to state 35 ]
  ! LESS_EQ         [ shift and go to state 36 ]
  ! GREATER         [ shift and go to state 37 ]
  ! GREATER_EQ      [ shift and go to state 38 ]
  ! IS_EQ           [ shift and go to state 39 ]
  ! NOT_EQ          [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 60

    (34) expression -> expression MODULUS expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . EXPONENT expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULUS expression
    (35) expression -> expression . LESS expression
    (36) expression -> expression . LESS_EQ expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . GREATER_EQ expression
    (39) expression -> expression . IS_EQ expression
    (40) expression -> expression . NOT_EQ expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    PLUS            reduce using rule 34 (expression -> expression MODULUS expression .)
    MINUS           reduce using rule 34 (expression -> expression MODULUS expression .)
    TIMES           reduce using rule 34 (expression -> expression MODULUS expression .)
    DIVIDE          reduce using rule 34 (expression -> expression MODULUS expression .)
    MODULUS         reduce using rule 34 (expression -> expression MODULUS expression .)
    LESS            reduce using rule 34 (expression -> expression MODULUS expression .)
    LESS_EQ         reduce using rule 34 (expression -> expression MODULUS expression .)
    GREATER         reduce using rule 34 (expression -> expression MODULUS expression .)
    GREATER_EQ      reduce using rule 34 (expression -> expression MODULUS expression .)
    IS_EQ           reduce using rule 34 (expression -> expression MODULUS expression .)
    NOT_EQ          reduce using rule 34 (expression -> expression MODULUS expression .)
    AND             reduce using rule 34 (expression -> expression MODULUS expression .)
    OR              reduce using rule 34 (expression -> expression MODULUS expression .)
    SEMICOLON       reduce using rule 34 (expression -> expression MODULUS expression .)
    RBRACE          reduce using rule 34 (expression -> expression MODULUS expression .)
    RPAREN          reduce using rule 34 (expression -> expression MODULUS expression .)
    LBRACE          reduce using rule 34 (expression -> expression MODULUS expression .)
    EXPONENT        shift and go to state 31

  ! EXPONENT        [ reduce using rule 34 (expression -> expression MODULUS expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! TIMES           [ shift and go to state 32 ]
  ! DIVIDE          [ shift and go to state 33 ]
  ! MODULUS         [ shift and go to state 34 ]
  ! LESS            [ shift and go to state 35 ]
  ! LESS_EQ         [ shift and go to state 36 ]
  ! GREATER         [ shift and go to state 37 ]
  ! GREATER_EQ      [ shift and go to state 38 ]
  ! IS_EQ           [ shift and go to state 39 ]
  ! NOT_EQ          [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 61

    (35) expression -> expression LESS expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . EXPONENT expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULUS expression
    (35) expression -> expression . LESS expression
    (36) expression -> expression . LESS_EQ expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . GREATER_EQ expression
    (39) expression -> expression . IS_EQ expression
    (40) expression -> expression . NOT_EQ expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    LESS            reduce using rule 35 (expression -> expression LESS expression .)
    LESS_EQ         reduce using rule 35 (expression -> expression LESS expression .)
    GREATER         reduce using rule 35 (expression -> expression LESS expression .)
    GREATER_EQ      reduce using rule 35 (expression -> expression LESS expression .)
    IS_EQ           reduce using rule 35 (expression -> expression LESS expression .)
    NOT_EQ          reduce using rule 35 (expression -> expression LESS expression .)
    AND             reduce using rule 35 (expression -> expression LESS expression .)
    OR              reduce using rule 35 (expression -> expression LESS expression .)
    SEMICOLON       reduce using rule 35 (expression -> expression LESS expression .)
    RBRACE          reduce using rule 35 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 35 (expression -> expression LESS expression .)
    LBRACE          reduce using rule 35 (expression -> expression LESS expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    EXPONENT        shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULUS         shift and go to state 34

  ! PLUS            [ reduce using rule 35 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression LESS expression .) ]
  ! EXPONENT        [ reduce using rule 35 (expression -> expression LESS expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression LESS expression .) ]
  ! MODULUS         [ reduce using rule 35 (expression -> expression LESS expression .) ]
  ! LESS            [ shift and go to state 35 ]
  ! LESS_EQ         [ shift and go to state 36 ]
  ! GREATER         [ shift and go to state 37 ]
  ! GREATER_EQ      [ shift and go to state 38 ]
  ! IS_EQ           [ shift and go to state 39 ]
  ! NOT_EQ          [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 62

    (36) expression -> expression LESS_EQ expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . EXPONENT expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULUS expression
    (35) expression -> expression . LESS expression
    (36) expression -> expression . LESS_EQ expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . GREATER_EQ expression
    (39) expression -> expression . IS_EQ expression
    (40) expression -> expression . NOT_EQ expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    LESS            reduce using rule 36 (expression -> expression LESS_EQ expression .)
    LESS_EQ         reduce using rule 36 (expression -> expression LESS_EQ expression .)
    GREATER         reduce using rule 36 (expression -> expression LESS_EQ expression .)
    GREATER_EQ      reduce using rule 36 (expression -> expression LESS_EQ expression .)
    IS_EQ           reduce using rule 36 (expression -> expression LESS_EQ expression .)
    NOT_EQ          reduce using rule 36 (expression -> expression LESS_EQ expression .)
    AND             reduce using rule 36 (expression -> expression LESS_EQ expression .)
    OR              reduce using rule 36 (expression -> expression LESS_EQ expression .)
    SEMICOLON       reduce using rule 36 (expression -> expression LESS_EQ expression .)
    RBRACE          reduce using rule 36 (expression -> expression LESS_EQ expression .)
    RPAREN          reduce using rule 36 (expression -> expression LESS_EQ expression .)
    LBRACE          reduce using rule 36 (expression -> expression LESS_EQ expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    EXPONENT        shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULUS         shift and go to state 34

  ! PLUS            [ reduce using rule 36 (expression -> expression LESS_EQ expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression LESS_EQ expression .) ]
  ! EXPONENT        [ reduce using rule 36 (expression -> expression LESS_EQ expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression LESS_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression LESS_EQ expression .) ]
  ! MODULUS         [ reduce using rule 36 (expression -> expression LESS_EQ expression .) ]
  ! LESS            [ shift and go to state 35 ]
  ! LESS_EQ         [ shift and go to state 36 ]
  ! GREATER         [ shift and go to state 37 ]
  ! GREATER_EQ      [ shift and go to state 38 ]
  ! IS_EQ           [ shift and go to state 39 ]
  ! NOT_EQ          [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 63

    (37) expression -> expression GREATER expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . EXPONENT expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULUS expression
    (35) expression -> expression . LESS expression
    (36) expression -> expression . LESS_EQ expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . GREATER_EQ expression
    (39) expression -> expression . IS_EQ expression
    (40) expression -> expression . NOT_EQ expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    LESS            reduce using rule 37 (expression -> expression GREATER expression .)
    LESS_EQ         reduce using rule 37 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 37 (expression -> expression GREATER expression .)
    GREATER_EQ      reduce using rule 37 (expression -> expression GREATER expression .)
    IS_EQ           reduce using rule 37 (expression -> expression GREATER expression .)
    NOT_EQ          reduce using rule 37 (expression -> expression GREATER expression .)
    AND             reduce using rule 37 (expression -> expression GREATER expression .)
    OR              reduce using rule 37 (expression -> expression GREATER expression .)
    SEMICOLON       reduce using rule 37 (expression -> expression GREATER expression .)
    RBRACE          reduce using rule 37 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 37 (expression -> expression GREATER expression .)
    LBRACE          reduce using rule 37 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    EXPONENT        shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULUS         shift and go to state 34

  ! PLUS            [ reduce using rule 37 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression GREATER expression .) ]
  ! EXPONENT        [ reduce using rule 37 (expression -> expression GREATER expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression GREATER expression .) ]
  ! MODULUS         [ reduce using rule 37 (expression -> expression GREATER expression .) ]
  ! LESS            [ shift and go to state 35 ]
  ! LESS_EQ         [ shift and go to state 36 ]
  ! GREATER         [ shift and go to state 37 ]
  ! GREATER_EQ      [ shift and go to state 38 ]
  ! IS_EQ           [ shift and go to state 39 ]
  ! NOT_EQ          [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 64

    (38) expression -> expression GREATER_EQ expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . EXPONENT expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULUS expression
    (35) expression -> expression . LESS expression
    (36) expression -> expression . LESS_EQ expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . GREATER_EQ expression
    (39) expression -> expression . IS_EQ expression
    (40) expression -> expression . NOT_EQ expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    LESS            reduce using rule 38 (expression -> expression GREATER_EQ expression .)
    LESS_EQ         reduce using rule 38 (expression -> expression GREATER_EQ expression .)
    GREATER         reduce using rule 38 (expression -> expression GREATER_EQ expression .)
    GREATER_EQ      reduce using rule 38 (expression -> expression GREATER_EQ expression .)
    IS_EQ           reduce using rule 38 (expression -> expression GREATER_EQ expression .)
    NOT_EQ          reduce using rule 38 (expression -> expression GREATER_EQ expression .)
    AND             reduce using rule 38 (expression -> expression GREATER_EQ expression .)
    OR              reduce using rule 38 (expression -> expression GREATER_EQ expression .)
    SEMICOLON       reduce using rule 38 (expression -> expression GREATER_EQ expression .)
    RBRACE          reduce using rule 38 (expression -> expression GREATER_EQ expression .)
    RPAREN          reduce using rule 38 (expression -> expression GREATER_EQ expression .)
    LBRACE          reduce using rule 38 (expression -> expression GREATER_EQ expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    EXPONENT        shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULUS         shift and go to state 34

  ! PLUS            [ reduce using rule 38 (expression -> expression GREATER_EQ expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression GREATER_EQ expression .) ]
  ! EXPONENT        [ reduce using rule 38 (expression -> expression GREATER_EQ expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression GREATER_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression GREATER_EQ expression .) ]
  ! MODULUS         [ reduce using rule 38 (expression -> expression GREATER_EQ expression .) ]
  ! LESS            [ shift and go to state 35 ]
  ! LESS_EQ         [ shift and go to state 36 ]
  ! GREATER         [ shift and go to state 37 ]
  ! GREATER_EQ      [ shift and go to state 38 ]
  ! IS_EQ           [ shift and go to state 39 ]
  ! NOT_EQ          [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 65

    (39) expression -> expression IS_EQ expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . EXPONENT expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULUS expression
    (35) expression -> expression . LESS expression
    (36) expression -> expression . LESS_EQ expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . GREATER_EQ expression
    (39) expression -> expression . IS_EQ expression
    (40) expression -> expression . NOT_EQ expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    IS_EQ           reduce using rule 39 (expression -> expression IS_EQ expression .)
    NOT_EQ          reduce using rule 39 (expression -> expression IS_EQ expression .)
    AND             reduce using rule 39 (expression -> expression IS_EQ expression .)
    OR              reduce using rule 39 (expression -> expression IS_EQ expression .)
    SEMICOLON       reduce using rule 39 (expression -> expression IS_EQ expression .)
    RBRACE          reduce using rule 39 (expression -> expression IS_EQ expression .)
    RPAREN          reduce using rule 39 (expression -> expression IS_EQ expression .)
    LBRACE          reduce using rule 39 (expression -> expression IS_EQ expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    EXPONENT        shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULUS         shift and go to state 34
    LESS            shift and go to state 35
    LESS_EQ         shift and go to state 36
    GREATER         shift and go to state 37
    GREATER_EQ      shift and go to state 38

  ! PLUS            [ reduce using rule 39 (expression -> expression IS_EQ expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression IS_EQ expression .) ]
  ! EXPONENT        [ reduce using rule 39 (expression -> expression IS_EQ expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression IS_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression IS_EQ expression .) ]
  ! MODULUS         [ reduce using rule 39 (expression -> expression IS_EQ expression .) ]
  ! LESS            [ reduce using rule 39 (expression -> expression IS_EQ expression .) ]
  ! LESS_EQ         [ reduce using rule 39 (expression -> expression IS_EQ expression .) ]
  ! GREATER         [ reduce using rule 39 (expression -> expression IS_EQ expression .) ]
  ! GREATER_EQ      [ reduce using rule 39 (expression -> expression IS_EQ expression .) ]
  ! IS_EQ           [ shift and go to state 39 ]
  ! NOT_EQ          [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 66

    (40) expression -> expression NOT_EQ expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . EXPONENT expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULUS expression
    (35) expression -> expression . LESS expression
    (36) expression -> expression . LESS_EQ expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . GREATER_EQ expression
    (39) expression -> expression . IS_EQ expression
    (40) expression -> expression . NOT_EQ expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    IS_EQ           reduce using rule 40 (expression -> expression NOT_EQ expression .)
    NOT_EQ          reduce using rule 40 (expression -> expression NOT_EQ expression .)
    AND             reduce using rule 40 (expression -> expression NOT_EQ expression .)
    OR              reduce using rule 40 (expression -> expression NOT_EQ expression .)
    SEMICOLON       reduce using rule 40 (expression -> expression NOT_EQ expression .)
    RBRACE          reduce using rule 40 (expression -> expression NOT_EQ expression .)
    RPAREN          reduce using rule 40 (expression -> expression NOT_EQ expression .)
    LBRACE          reduce using rule 40 (expression -> expression NOT_EQ expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    EXPONENT        shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULUS         shift and go to state 34
    LESS            shift and go to state 35
    LESS_EQ         shift and go to state 36
    GREATER         shift and go to state 37
    GREATER_EQ      shift and go to state 38

  ! PLUS            [ reduce using rule 40 (expression -> expression NOT_EQ expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression NOT_EQ expression .) ]
  ! EXPONENT        [ reduce using rule 40 (expression -> expression NOT_EQ expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression NOT_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression NOT_EQ expression .) ]
  ! MODULUS         [ reduce using rule 40 (expression -> expression NOT_EQ expression .) ]
  ! LESS            [ reduce using rule 40 (expression -> expression NOT_EQ expression .) ]
  ! LESS_EQ         [ reduce using rule 40 (expression -> expression NOT_EQ expression .) ]
  ! GREATER         [ reduce using rule 40 (expression -> expression NOT_EQ expression .) ]
  ! GREATER_EQ      [ reduce using rule 40 (expression -> expression NOT_EQ expression .) ]
  ! IS_EQ           [ shift and go to state 39 ]
  ! NOT_EQ          [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 67

    (41) expression -> expression AND expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . EXPONENT expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULUS expression
    (35) expression -> expression . LESS expression
    (36) expression -> expression . LESS_EQ expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . GREATER_EQ expression
    (39) expression -> expression . IS_EQ expression
    (40) expression -> expression . NOT_EQ expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    AND             reduce using rule 41 (expression -> expression AND expression .)
    OR              reduce using rule 41 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 41 (expression -> expression AND expression .)
    RBRACE          reduce using rule 41 (expression -> expression AND expression .)
    RPAREN          reduce using rule 41 (expression -> expression AND expression .)
    LBRACE          reduce using rule 41 (expression -> expression AND expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    EXPONENT        shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULUS         shift and go to state 34
    LESS            shift and go to state 35
    LESS_EQ         shift and go to state 36
    GREATER         shift and go to state 37
    GREATER_EQ      shift and go to state 38
    IS_EQ           shift and go to state 39
    NOT_EQ          shift and go to state 40

  ! PLUS            [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! EXPONENT        [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! MODULUS         [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! LESS_EQ         [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! GREATER_EQ      [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! IS_EQ           [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! NOT_EQ          [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 68

    (42) expression -> expression OR expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . EXPONENT expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULUS expression
    (35) expression -> expression . LESS expression
    (36) expression -> expression . LESS_EQ expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . GREATER_EQ expression
    (39) expression -> expression . IS_EQ expression
    (40) expression -> expression . NOT_EQ expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    OR              reduce using rule 42 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 42 (expression -> expression OR expression .)
    RBRACE          reduce using rule 42 (expression -> expression OR expression .)
    RPAREN          reduce using rule 42 (expression -> expression OR expression .)
    LBRACE          reduce using rule 42 (expression -> expression OR expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    EXPONENT        shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULUS         shift and go to state 34
    LESS            shift and go to state 35
    LESS_EQ         shift and go to state 36
    GREATER         shift and go to state 37
    GREATER_EQ      shift and go to state 38
    IS_EQ           shift and go to state 39
    NOT_EQ          shift and go to state 40
    AND             shift and go to state 41

  ! PLUS            [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! EXPONENT        [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! MODULUS         [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! LESS_EQ         [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! GREATER_EQ      [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! IS_EQ           [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! NOT_EQ          [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 42 ]


state 69

    (18) decl -> ID COLON type . Initiation
    (19) Initiation -> . EQUALS expression
    (20) Initiation -> . epsilon
    (49) epsilon -> .

    EQUALS          shift and go to state 77
    SEMICOLON       reduce using rule 49 (epsilon -> .)
    RBRACE          reduce using rule 49 (epsilon -> .)

    Initiation                     shift and go to state 76
    epsilon                        shift and go to state 78

state 70

    (25) type -> INT .

    EQUALS          reduce using rule 25 (type -> INT .)
    SEMICOLON       reduce using rule 25 (type -> INT .)
    RBRACE          reduce using rule 25 (type -> INT .)


state 71

    (43) expression -> lvalue EQUALS expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . EXPONENT expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULUS expression
    (35) expression -> expression . LESS expression
    (36) expression -> expression . LESS_EQ expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . GREATER_EQ expression
    (39) expression -> expression . IS_EQ expression
    (40) expression -> expression . NOT_EQ expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    SEMICOLON       reduce using rule 43 (expression -> lvalue EQUALS expression .)
    RBRACE          reduce using rule 43 (expression -> lvalue EQUALS expression .)
    RPAREN          reduce using rule 43 (expression -> lvalue EQUALS expression .)
    LBRACE          reduce using rule 43 (expression -> lvalue EQUALS expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    EXPONENT        shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULUS         shift and go to state 34
    LESS            shift and go to state 35
    LESS_EQ         shift and go to state 36
    GREATER         shift and go to state 37
    GREATER_EQ      shift and go to state 38
    IS_EQ           shift and go to state 39
    NOT_EQ          shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42

  ! PLUS            [ reduce using rule 43 (expression -> lvalue EQUALS expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> lvalue EQUALS expression .) ]
  ! EXPONENT        [ reduce using rule 43 (expression -> lvalue EQUALS expression .) ]
  ! TIMES           [ reduce using rule 43 (expression -> lvalue EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> lvalue EQUALS expression .) ]
  ! MODULUS         [ reduce using rule 43 (expression -> lvalue EQUALS expression .) ]
  ! LESS            [ reduce using rule 43 (expression -> lvalue EQUALS expression .) ]
  ! LESS_EQ         [ reduce using rule 43 (expression -> lvalue EQUALS expression .) ]
  ! GREATER         [ reduce using rule 43 (expression -> lvalue EQUALS expression .) ]
  ! GREATER_EQ      [ reduce using rule 43 (expression -> lvalue EQUALS expression .) ]
  ! IS_EQ           [ reduce using rule 43 (expression -> lvalue EQUALS expression .) ]
  ! NOT_EQ          [ reduce using rule 43 (expression -> lvalue EQUALS expression .) ]
  ! AND             [ reduce using rule 43 (expression -> lvalue EQUALS expression .) ]
  ! OR              [ reduce using rule 43 (expression -> lvalue EQUALS expression .) ]


state 72

    (44) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    EXPONENT        reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    MODULUS         reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    LESS_EQ         reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    GREATER_EQ      reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    IS_EQ           reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    NOT_EQ          reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 44 (expression -> LPAREN expression RPAREN .)


state 73

    (21) if_then_statement -> IF expression block_statement .
    (22) if_then_statement -> IF expression block_statement . ELSE block_statement

    SEMICOLON       reduce using rule 21 (if_then_statement -> IF expression block_statement .)
    RBRACE          reduce using rule 21 (if_then_statement -> IF expression block_statement .)
    ELSE            shift and go to state 79


state 74

    (23) while_statement -> WHILE expression block_statement .

    SEMICOLON       reduce using rule 23 (while_statement -> WHILE expression block_statement .)
    RBRACE          reduce using rule 23 (while_statement -> WHILE expression block_statement .)


state 75

    (10) read_statement -> READ LPAREN lvalue . lvalue_list RPAREN
    (11) lvalue_list -> . lvalue_list COMMA lvalue
    (12) lvalue_list -> . epsilon
    (49) epsilon -> .

    RPAREN          reduce using rule 49 (epsilon -> .)
    COMMA           reduce using rule 49 (epsilon -> .)

    lvalue_list                    shift and go to state 80
    epsilon                        shift and go to state 81

state 76

    (18) decl -> ID COLON type Initiation .

    SEMICOLON       reduce using rule 18 (decl -> ID COLON type Initiation .)
    RBRACE          reduce using rule 18 (decl -> ID COLON type Initiation .)


state 77

    (19) Initiation -> EQUALS . expression
    (26) expression -> . PLUS expression
    (27) expression -> . MINUS expression
    (28) expression -> . NOT expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression EXPONENT expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULUS expression
    (35) expression -> . expression LESS expression
    (36) expression -> . expression LESS_EQ expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression GREATER_EQ expression
    (39) expression -> . expression IS_EQ expression
    (40) expression -> . expression NOT_EQ expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . lvalue EQUALS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . INT_LITERAL
    (46) expression -> . STRING_LITERAL
    (48) expression -> . lvalue
    (47) lvalue -> . identifier
    (24) identifier -> . ID

    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    LPAREN          shift and go to state 19
    INT_LITERAL     shift and go to state 20
    STRING_LITERAL  shift and go to state 21
    ID              shift and go to state 45

    expression                     shift and go to state 82
    lvalue                         shift and go to state 18
    identifier                     shift and go to state 25

state 78

    (20) Initiation -> epsilon .

    SEMICOLON       reduce using rule 20 (Initiation -> epsilon .)
    RBRACE          reduce using rule 20 (Initiation -> epsilon .)


state 79

    (22) if_then_statement -> IF expression block_statement ELSE . block_statement
    (4) block_statement -> . LBRACE statement_decl_list semicolon_opt RBRACE

    LBRACE          shift and go to state 3

    block_statement                shift and go to state 83

state 80

    (10) read_statement -> READ LPAREN lvalue lvalue_list . RPAREN
    (11) lvalue_list -> lvalue_list . COMMA lvalue

    RPAREN          shift and go to state 84
    COMMA           shift and go to state 85


state 81

    (12) lvalue_list -> epsilon .

    RPAREN          reduce using rule 12 (lvalue_list -> epsilon .)
    COMMA           reduce using rule 12 (lvalue_list -> epsilon .)


state 82

    (19) Initiation -> EQUALS expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . EXPONENT expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULUS expression
    (35) expression -> expression . LESS expression
    (36) expression -> expression . LESS_EQ expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . GREATER_EQ expression
    (39) expression -> expression . IS_EQ expression
    (40) expression -> expression . NOT_EQ expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    SEMICOLON       reduce using rule 19 (Initiation -> EQUALS expression .)
    RBRACE          reduce using rule 19 (Initiation -> EQUALS expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    EXPONENT        shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULUS         shift and go to state 34
    LESS            shift and go to state 35
    LESS_EQ         shift and go to state 36
    GREATER         shift and go to state 37
    GREATER_EQ      shift and go to state 38
    IS_EQ           shift and go to state 39
    NOT_EQ          shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 83

    (22) if_then_statement -> IF expression block_statement ELSE block_statement .

    SEMICOLON       reduce using rule 22 (if_then_statement -> IF expression block_statement ELSE block_statement .)
    RBRACE          reduce using rule 22 (if_then_statement -> IF expression block_statement ELSE block_statement .)


state 84

    (10) read_statement -> READ LPAREN lvalue lvalue_list RPAREN .

    SEMICOLON       reduce using rule 10 (read_statement -> READ LPAREN lvalue lvalue_list RPAREN .)
    RBRACE          reduce using rule 10 (read_statement -> READ LPAREN lvalue lvalue_list RPAREN .)


state 85

    (11) lvalue_list -> lvalue_list COMMA . lvalue
    (47) lvalue -> . identifier
    (24) identifier -> . ID

    ID              shift and go to state 45

    lvalue                         shift and go to state 86
    identifier                     shift and go to state 25

state 86

    (11) lvalue_list -> lvalue_list COMMA lvalue .

    RPAREN          reduce using rule 11 (lvalue_list -> lvalue_list COMMA lvalue .)
    COMMA           reduce using rule 11 (lvalue_list -> lvalue_list COMMA lvalue .)

